up 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends with family but we're 
 in a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 um nitza is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 curve what does channel mean to you in 
 one word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 [Music] 
 um 
 [Music] 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because it gives us a space to be among 
 our those that are like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i've really loved about today 
 is meeting people of sort of different 
 ages different life stages 
 and in my personal life i've got a lot 
 of trans friends with family but we're 
 in a little bit of a bubble and just 
 being able to geek about geek out about 
 sort of shared interests having shared 
 sense of humor with people i've never 
 met 
 is really really lovely and of course 
 getting to nerd out of our code 
 [Music] 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 do 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive 
 rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 so 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is uh 
 tremendously important because it gives 
 us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends with family but we're 
 in a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 umnitza is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 within itsa you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 [Music] 
 [Music] 
 [Music] 
 transcode is a hecta centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is uh tremendously important 
 because 
 it gives us 
 a space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i've really loved about today 
 is meeting people of sort of different 
 ages different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 um nitza is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 ladies and gentlemen please take a 
 moment to locate your nearest fire exit 
 in the unlikely event of an evacuation 
 please follow the directions of the ccd 
 staff and proceed directly outside 
 please do not attempt to re-enter the 
 building until told that it is safe to 
 do so 
 good morning everyone 
 hello 
 well 
 welcome to euro python 2020. 
 that was something we were really 
 looking forward to saying in 2020 
 here 
 but then covet 
 but then we said 
 hey we're a community of geeks 
 we have been staying connected since 
 usnet since fidelnet since the good old 
 days of irc 
 so 
 we surely can stay connected now 
 with our pocket 
 and 
 actual video cards 
 and we did 
 we run two amazing conferences 
 online and we made so many new friends 
 around the world 
 we made we made so many new friends with 
 volunteers with speakers who had never 
 been to an in-person conference in 
 europe python before 
 and 
 hundreds of video calls later 
 i am so over the moon to be able to see 
 so many of you in person this week 
 and for those of you who cannot join 
 today 
 thank you so much to join the 
 celebration remotely 
 and for those of you who can join thank 
 you so much thank you so much for making 
 the journey to dublin 
 i am raquel 
 and i serve as the chair of europa's 
 society this year 
 and 
 on behalf of all of our volunteers of 
 2020 2021 and 2022 
 welcome welcome to europe python 2022 
 [Applause] 
 the euro python conference series 
 started in 2002 
 so this is our 21st birthday 
 and the conference is organized by 
 european society 
 entirely made up of volunteers 
 as such 
 we have the community at the core of our 
 identity 
 everything you see around the conference 
 the big and the small from our program 
 to the little stickers you see 
 every single thing is curated by our 
 volunteers 
 with great love great care 
 and let's be honest 
 often also through trial and error 
 always bugs 
 but 
 this is a conference that belongs to you 
 and me 
 so i hope that you enjoy the conference 
 and i also hope that you would take the 
 time to actually take in all of the 
 things that our volunteers have created 
 and if you have found 
 errors if you have feedback 
 please tell us please help us improve 
 you can find 
 volunteers in yellow t-shirts 
 you can talk to them 
 ask them for help give them feedback and 
 more importantly say thank you 
 now first things first 
 let's talk about safety precautions 
 we all know about covet 
 we all want to protect the people that 
 we care about 
 so for this reason we strongly recommend 
 and politely request that you wear a 
 face mask 
 during in the building during the 
 conference particularly when you move 
 around in crowded areas if you do not 
 have a mask or you have lost a mask you 
 can request one at the registration desk 
 and we also have hand sanitizers around 
 the building 
 you're welcome to use them 
 at the registration desk you could also 
 have stickers 
 and to indicate your comfort level of 
 interaction 
 so please respect other people's 
 preferences 
 and now i'm going to give a brief 
 overview of the conference 
 between wednesday and friday 
 they are the main conference days 
 and we have speakers and participants 
 joining both remotely and from dublin 
 if you have an in-person conference 
 ticket 
 you can also join remotely sometimes 
 like if you want to sleep a little bit 
 more you can join from your hotel from a 
 cafe together 
 or maybe even from the beach 
 every person can join at any time 
 remotely or hop around 
 and just have a chat with people here 
 um 
 and every single session is a joint 
 effort between our speaker 
 our recession chair who's also volunteer 
 and 
 one remote speak one remote operator 
 who are the invisible heroes that are 
 working tirelessly to make this event 
 interactive and remotely 
 and also every session has our av crew 
 from gonzo who are working over here and 
 in every room you can see them in the 
 command desk they have been our 
 streaming team since 2017 
 and also every session has our ccd staff 
 who are also there and they are also 
 working together with 
 gonzer and thank every technician for 
 all of your work 
 and this is a big undertaking 
 from us this was 
 our best intention and our 
 inspiration to provide an interactive 
 experience for everyone against all of 
 the challenges of covet and beyond 
 so in each room we have two cameras 
 one over there pointing at the speaker 
 and one 
 somewhere over there pointing at the 
 audience 
 so in every room 
 if you do not want to be filmed 
 there is dedicated no film zone that you 
 you can read the signage and refer to 
 them and sit accordingly 
 around this building we also have our 
 photographer hi larissa 
 and 
 if you do not want to be photographed 
 you can also request a no photograph 
 lanyard at the registration desk 
 now 
 because we all know that this is 
 unprecedented times a lot of things can 
 change last minute 
 so please refer to our schedule on the 
 website slash schedule as a source of 
 truth we will try our very best to keep 
 it updated 
 um we also have a speaker breakout room 
 prepared for everyone 
 so if you are joining us here in dublin 
 and you want to talk to a remote speaker 
 or if you are a speaker here and you 
 want to talk to our remote audience 
 we have a leafy boardroom 4 prepared for 
 you 
 everybody can feel free to join 
 at the same time we also have our 
 hybrid platform venueless 
 everybody 
 whether you have a remote ticket or 
 in-person ticket you can join venue 
 lists to watch things remotely to also 
 chat with people via text 
 now 
 after the main three days we have the 
 sprint weekend 
 everybody with an in-person ticket is 
 very very welcome to join a sprint 
 you can propose yours by making a pull 
 request at slash sprints 
 outside of the main six tracks we also 
 have some exciting events prepared for 
 you 
 so 
 on thursday the open space room and 
 workload hall 2-1 
 thursday afternoon 
 chook our very own volunteer 
 has 
 prepared a mentor sprint 
 we particularly welcome people who are 
 less experienced developers from under 
 represented communities if you're not 
 from underrepresented community because 
 also you're also welcome to join 
 and just have a good time and learn from 
 each other 
 and on thursday morning we have an 
 informal eps discussion 
 if you have if you want to know how the 
 sausage is made 
 if you want to if you have more feedback 
 about 
 what you think your python should be 
 about or what the eps should do outside 
 of the conference please join us and 
 let's chat 
 outside of thursday 
 you are welcome to use the room freely 
 just propose any informal chat and put 
 your proposal on the flip chart outside 
 of the room and you will tell people 
 join me for this at that time and 
 hopefully you will have a great time 
 we also at the forum on the ground level 
 apart from the exhibits 
 from our sponsors we also have maker's 
 best 
 and 
 this 
 you can just go there and have a great 
 time have fun with our local dublin 
 makers 
 you can just make beautiful things and 
 present them at lightning talks later 
 on thursday 
 on the on level five four year s3 as 
 lunch time will have a community 
 organizers lunch 
 if you are 
 a conference organizer 
 you're very welcome to just join us you 
 don't need to sign up just pop by and 
 join us and let's have a great time 
 and at the same time at this at the same 
 place on friday we will have pie ladies 
 lunch if you're a pie lady or pie ladies 
 ally you know where to find us 
 and we also have a social event on 
 thursday 
 evening 
 that is at level that's on level three 
 four-year 
 we will have 
 food 
 drinks 
 irish music irish dance 
 so 
 you can buy the tickets now at our 
 website 
 if everything is getting a little bit 
 too overwhelming because of all this 
 excitement 
 you can go to the quiet room at wicklow 
 hall to be 
 and then find some peace and quiet 
 so that's all i want to say about the 
 conference 
 and now 
 for some surprise time 
 a very very dear friend of ours 
 one of europaison's longest supporters 
 the kindest serve and the biggest 
 champion of underrepresented 
 groups 
 now has been awarded the psf 
 distinguished service awards 
 this is a very prestigious awards given 
 to the community leaders who have made 
 the biggest impact 
 we would like to share this great news 
 with all of you here at euro python 
 huge congratulations and let's give a 
 huge welcome to naomi cedar 
 i am just so excited to share this 
 moment with you naomi in person 
 i just thank you so much for so many 
 years of service to the community for 
 being a beacon of light and source of 
 inspiration to the community 
 and thank you so much for what you've 
 done in your opinion this year for 
 running a huge 
 hugely successful transcode event 
 yesterday 
 and for providing your in for providing 
 your wisdom to our coc committee 
 so i would just leave the floor to you 
 now narrow me to say a few words 
 thank you so much it's it's a joy this 
 is actually kind of a sneak preview the 
 official announcement is going to go out 
 next week but they said i could tell my 
 friends 
 so there uh so yeah it's really been a 
 pleasure working with europe python over 
 the years and and with all of you and if 
 i don't know you in person already let's 
 fix that over the next few days okay 
 i think i'm also supposed to say a 
 little bit about the code of conduct 
 i am a member of the code of conduct 
 committee so to switch to a more serious 
 topic i guess uh the euro python code of 
 conduct says be nice and that's a 
 wonderful start but it's not terribly 
 specific and people have different ideas 
 of what might be 
 nice and so i just wanted to to call out 
 a few things maybe that uh 
 well there might be room for uh 
 interpretation let's say so 
 if you say to somebody that was a great 
 talk 
 that's being nice uh if you say somebody 
 hey you look really sexy today unless 
 they're a good friend that's not nice 
 that's creepy okay 
 uh and that that goes whether you're 
 online or in person it's the same sort 
 of thing you can do that 
 similarly if you say 
 wow you are 
 really really good at coding 
 that's being nice 
 if you say wow you are really really 
 good at coding for a girl 
 that's not nice okay so that's against 
 the spirit of the code of conduct i 
 could go on and on and on but we're all 
 smart people here i think you've got the 
 idea uh and if not then i suppose those 
 of us who are on the conduct committee 
 will be talking to you later so again 
 be nice uh thank you 
 [Applause] 
 thank you so much naomi 
 and on that note 
 i also 
 want to say that 
 we want everyone at euro python to feel 
 comfortable and welcome 
 and we take 
 diversity very seriously we welcome 
 everybody no matter your gender identity 
 color of skin religion 
 you name it we want you here we welcome 
 you 
 and diversity to us is not just a box 
 ticking exercise 
 so we hope that 
 through our transcode events yesterday 
 some of our most marginalized friends 
 feel a little bit 
 more connected 
 we also hope that our free child care 
 has made it just a little bit easier for 
 some of you to be able to join us today 
 we also hope that 
 the free tampons and the free paths that 
 we're giving at some of the toilets 
 they just make some of the experiences 
 less lousy 
 is that enough 
 absolutely not 
 please come and talk to us please help 
 us get better 
 and 
 that's all i have to say about euro 
 python now 
 i want to give the spotlight to 
 vicky 
 who is a doubly local 
 and she is the main reason 
 why euro python 2022 is not just a 
 conference in dublin 
 but 
 a conference 
 as part of dublin 
 vicki is involved in practically every 
 single tech community 
 in dublin and in ireland 
 in her own words 
 she says if you're interested in 
 something and you haven't found a 
 community around it 
 you start one 
 and she truly genuinely lives by it 
 so with great pleasure i want to welcome 
 vicky to tell her story with euro python 
 let's give a huge welcome to vikki 
 [Applause] 
 majinwa karja 
 good morning everyone 
 and a hundred thousand welcomes to all 
 our guests 
 or as we say in irish cave milifaulta 
 for those here local in dublin 
 storyboard haria 
 it's wonderful to see you all here 
 and to be fine to finally have your 
 python fizzing us in dublin this year 
 i kind of would um you know say what 
 raquel said 
 i waited ten 
 plus two years 
 and yes thanks to kovis 
 for making me wait 
 another two years but 
 third time's the charm right 
 and i'm happy to see you all here this 
 morning 
 to the core python ireland people who i 
 was with 
 that faithful dark wet evening 
 in february 2010 in a pub called neres 
 off grafton street 
 if you were there you know who you are 
 i have to say our dream came true 
 euro python is here in dublin 
 and but 
 let's move further back a few months um 
 to when a bunch of us 
 yes 
 the same bunch that was in lyries 
 we were in birmingham attending europe 
 item 2009. 
 this is where we heard they were looking 
 for the next host city 
 um feeling the stairs from the irish 
 contingent 
 burning holes to the back of my head 
 they were eagerly hoping i would say i 
 would stand up and say yes let's have it 
 in dublin 
 not a chance 
 we were up against 
 seasoned pycon organizers from around 
 europe 
 and there are only a handful of them 
 back then 
 now back to the evening and neary's 
 and note i was the only sober one in the 
 group 
 i managed to convince everyone 
 that someone's idea to run a local irish 
 python conference was a good call 
 more so because we were in no way our 
 shape 
 um to host huge conference like europe 
 python 
 to give you a bit of context 
 the most people we ever had at our 
 monthly meetups 
 in dublin at that time was around 20ish 
 people 
 and that was for an amazing talk 
 and we have never never organized a 
 conference before 
 like 
 how do we even start 
 well our first pycon ireland in 2010 was 
 a success 
 from a meetup of a handful of people 
 each month 
 to our very first pycon ireland 
 of nearly 100 attendees 
 with the psf support 
 and the ever fantastic steve holden 
 who was the chair of the psf at the time 
 he came to pike on ireland that year 
 to check out who the heck we were 
 he even helped us with backpacking and 
 registration 
 i asked for his advice 
 about running a conference 
 he said 
 you'll get a right 
 right after the seventh one 
 i panicked and nearly ran we ran out 
 the fourth pike on ireland 
 in 2013 
 was my last involvement with 
 with the conference as chair 
 i passed the baton on 
 to the amazing irish python community 
 which has grown in leaps and bounds 
 thanks to this irish conference 
 and 
 also thanks to the fantastic 
 support from the international python 
 community 
 and now as i look around 
 i'm standing here this morning 
 and i still 
 can't 
 quite believe that euro python 
 is in dublin 
 i hope you can see how i'm excited i am 
 and well uh hope i hope you really do i 
 am inside anyway and you might think who 
 is this person getting so hyped up on 
 stage or trying to who keeps repeating 
 that she can't believe europe python is 
 in dublin 
 well let me introduce myself 
 i am vicky toomey lee 
 and as mentioned i've been involved with 
 python ireland from mid 2005 to around 
 2016 
 i chaired the first four pycon irelands 
 from 2010 to 2013. 
 fun fact 
 i launched pie ladies dublin during 
 pycon 2013 pike on iron 2013 
 because lynn root 
 was our very first female technical 
 keynote speaker 
 and thank you lynn 
 for the inspiration and for all your 
 help 
 around 2012 and 2013 i pulled my head 
 out of the sand and started seriously 
 trying to encourage 
 more diversity inclusion in python and 
 pycon ireland 
 i also put my energy into my other 
 associated not-for-profit involvements 
 like coding grace which advocates 
 diversity in tech through events and 
 curated news from around ireland and 
 collaborating with others 
 pi ladies dublin monthly meet up with 
 talks and interactive coding in-person 
 evenings and remote events and is open 
 to everyone 
 women who code dublin connecting 
 and running events for professional 
 women and with ireland which is 
 women technology science ireland who 
 have been around for 30 years 
 and have contributed to public irish 
 public policies like gender pay yet and 
 i 
 help them where i can 
 i'm also a wannabe maker 
 one of my past roles was 
 the maker advocate for double maker 
 which is a free maker festival in marion 
 square and by the way they're back next 
 saturday 
 i've been hopping up and down and being 
 very determined to bring more makery 
 stuff to europe python 
 and a huge thanks to nicholas turvey for 
 co-conspiring with me 
 and helped make maker fest a reality 
 this year 
 and it's down in the forum 
 and on the ground floor so please visit 
 have fun making and talking to our maker 
 friends 
 let's reminisce some more 
 for those who don't know the irish tech 
 community has grown a lot since 2005 
 when i started taking over organizing 
 python our meetups 
 before the days of event price and 
 meetup 
 there was only the word of mouth to try 
 and find out about tech events 
 i was early in my career and i was eager 
 to geek and to geek out and talk tech 
 with people who i don't work with 
 don't get me wrong 
 my colleagues were really grace but they 
 were more techies out there right 
 so finding out about irish tech events 
 was not easy 
 so one way was through the irish linux 
 user group which was a mailing list 
 and 
 so when i was working on a project at 
 dog patch labs in 2016 i did a little 
 digging around and talked to the irish 
 tech community 
 to get their input to see what groups 
 were around in 2000 in 2005. 
 so i mentioned the irish linux user 
 group mailiness there was php ireland or 
 was it dublin 
 python ireland ubuntu ireland and what's 
 ireland that's five groups 
 jump bit of five years 
 a number of irish tech community groups 
 doubled 
 thereabouts 
 now 
 there's too many to count here's another 
 fun fact 
 with the community's help i curated a 
 list of diversity in tech groups around 
 the island of ireland 
 there's over 65 active groups 
 well more than 65 but can you believe 
 that number well i couldn't 
 i thought it was a third of that number 
 when i started curating the list 
 now even as we sit 
 or stand 
 here in the convention center 
 we are right in the silicon docks 
 surrounded by many tech companies 
 large and small 
 local and international 
 it's not just dublin that has a healthy 
 tech 
 and startup scene 
 it's all over ireland 
 a silver lining from covid 
 people can now move away 
 from the cities and work remotely 
 with groups like rural ireland tech 
 advocates otherwise known as rita 
 they're a group of community advocates 
 an essential resource for folks who are 
 interested in living and working in 
 rural ireland 
 a great example is that euro python 
 organizers have worked really hard 
 to offer hybrid this year 
 after recognizing how important remote 
 access was for folks who may not be able 
 to make it to the conference this year 
 so to your python team past and presence 
 thank you for the opportunity 
 and thanks for coming to ireland 
 a huge thanks to mark andre for letting 
 me peek under your python's hood all 
 those years back you see how a 
 conference like this was run and managed 
 a big shout out to pycon uk who has 
 given us support through us through 
 their sagely advice 
 through our pike on ireland's learning 
 to walk phase in 2010 
 and a special posthumous mention to the 
 late john penner 
 who for those who know him was very 
 patient 
 and helpful in every way 
 he has been an inspiration to me and 
 many others in the irish python 
 community 
 imprinting the grassroots of python 
 community ethos 
 for me as someone who is involved with 
 the tech community in ireland especially 
 the python community including my work 
 advocating diversity in tech i aim 
 to keep and 
 stay true to this community ethos 
 it's been a joy 
 as well as working with the european 
 team the past year in preparing this 
 year's conference 
 what 
 tremendous energy you all have and you 
 all rock 
 along with support from organizations 
 like for example the dublin convention 
 bureau who offered advice to our 
 organizing team to providing tourist 
 information to visiting delegates 
 everyone has rolled up their sleeves and 
 made euro python fairy welcome here 
 i hope you all will enjoy all the talks 
 and the various activities happening 
 this week especially the tech community 
 organizers lunch on thursday 
 and pie ladies lunch and friday 
 we also have an irish experience for you 
 especially if you're visiting ireland 
 for a first time and that was the social 
 event that raquel just mentioned earlier 
 it's um 
 it's going to be an evening with the 
 full shilling 
 who are our new and exciting collective 
 of musicians from dublin ireland 
 their lively set consists of mix of our 
 songs and dances and are guaranteed 
 to get the toes tapping 
 they will also have special guest 
 appearances of two world famous dancers 
 who have just returned from a tour with 
 lord of the dance 
 we can't wait to see you all there 
 to our visiting guests 
 enjoy dublin and ireland 
 and if you haven't tried and if you're 
 curious 
 i do recommend the pint of the black 
 spot 
 i do recommend the pint of the black 
 stuff i swear i didn't drink anything 
 this morning 
 and do head over to nearby mulligans on 
 pullback street 
 you definitely won't be disappointed 
 finally 
 if you want to meet the python ireland 
 community they do have a meet up this 
 evening and against the green 
 yeah after the conference 
 gaurav mila margaret thank you 
 thank you so much vicky 
 [Applause] 
 and lastly i also want to have say a 
 special thank you to all of our sponsors 
 thank you so much for supporting us 
 throughout these challenging times 
 and 
 that's it thank you so much for being 
 here and i hope you have fun throughout 
 this week 
 thank you and welcome 
 and now 
 i will give the floor to vicky again 
 to introduce our first keynote with also 
 a dublin local 
 hello again 
 this feels familiar 
 now for the exciting part 
 you may have heard that the first images 
 from the james webb space telescope was 
 released yesterday i hope some folks if 
 you haven't check those pictures out 
 they're amazing 
 with this in mind i am very privileged 
 to introduce you to our very esteemed 
 first keynote speaker of euro python 
 this week 
 dr patrick kavanagh 
 he is an astrophysicist and software 
 developer based in dublin based at the 
 dublin institute of advanced studies 
 he is an expert in high energy studies 
 of supernova 
 remnants super bubbles and hot 
 interstellar medium 
 moving to dis he has worked on 
 developmental calibration and software 
 tool for mid 
 infrared instrument or mary on web 
 miri is an international project 
 comprised a consortium comprising a 
 consortium of european partner 
 institutes including dias the european 
 space agency and partners in the us 
 his talk is called python's role in 
 unlocking the secrets of the universe 
 with james webb space telescope 
 let's put our hands together and welcome 
 dr patrick cavanaugh 
 [Applause] 
 i'm sorry 
 great 
 okay thanks 
 uh hello everybody i've never spoken to 
 so many people so it's absolutely 
 terrifying to be up here 
 um i'd like to thank vicky for that nice 
 introduction and i've never been called 
 very esteemed before 
 um 
 so yeah i'm here 
 as vicki mentioned i'm here to talk 
 about 
 python's role in unlocking the secrets 
 of the universe with the james webb 
 telescope so i'm sure you're all aware 
 that yesterday 
 was the first release of 
 the science images taken with jwst and 
 we're very glad we could organize 
 president biden to present the very 
 first one on monday just in time for 
 europe python 
 um 
 so yeah the timing has worked out very 
 well 
 um when i was first asked to do this i 
 thought oh this is great because there's 
 so much python involved 
 in the develop like in what we have done 
 with web 
 and i thought i have so much to talk 
 about but when i actually sat down to do 
 it there was just too much 
 okay so i'm only going to give you an 
 idea uh basically with my experience 
 colored by my involvement with the 
 mid-infrared instrument 
 but bear in mind that ninety percent are 
 more probably of the analysis tools the 
 simulators and so on were developed and 
 paid them 
 okay and used python 
 so um the way i want to structure this 
 talk a bit is to give people an 
 introduction to the telescope and the 
 mission and what's been going on for the 
 last few months and talk a little bit 
 about the python tools we use to 
 calibrate the data and to do simulations 
 which we use for testing and so on and 
 commissioning and then finally i'll i'll 
 show the images from yesterday for those 
 who haven't seen them 
 along with a few others that weren't 
 released 
 as part of the announcement but have 
 since been released 
 okay so the 
 james webb space telescope it was is 
 built on the 
 success of the hubble space telescope 
 okay it was designed and built to answer 
 questions hubble just couldn't do 
 because hubble looks at a specific part 
 of the electromagnetic spectrum 
 from 
 kind of near uv to infrared to 
 near infrared 
 but webb is a an infrared instrument or 
 a telescope a pure infrared telescope so 
 it looks at a different part of the 
 electromagnetic spectrum it was designed 
 to see the very first stars in the 
 universe 
 okay so it needs a big mirror 
 to collect enough light to see those 
 um and the big mirror also provides fine 
 detail in the images so you can resolve 
 a very fine structure in your images 
 it needs to be cold because it's an 
 infrared instrument most are an infrared 
 telescope most people will understand 
 infrared as being heat radiation so if 
 you want to observe heat in the universe 
 you need to keep your telescope very 
 very cold because if you don't if this 
 thing was on the ground 
 a great analogy i once heard was it'd be 
 like standing in the middle of a 
 football stadium with the flood lights 
 on at night trying to see the stars you 
 just wouldn't see anything you'd be 
 overwhelmed by the heat from 
 from 
 from the telescope 
 okay 
 uh 
 it's a it's a big thing 
 all right it's a it has a footprint of a 
 tennis court and this is a picture taken 
 from 10 years ago when the full-scale 
 model was here in dublin at the museum 
 of modern earth in kilmainham 
 uh and this is that picture and in front 
 here you see a lot of the scientists 
 from nasa and european space agency and 
 ireland who were involved way back then 
 in you know 2011 i think this was but 
 you can really see the size of the 
 telescope okay and it's not trivial to 
 put something like that in space 
 and it was 
 overall i mean you know in the 
 announcements and so on yesterday you 
 heard a lot about the us involvement but 
 really there was a big european 
 involvement in it as well and canadian 
 so europe supplied two of the science 
 instruments in canada one of the science 
 instruments indeed the platform the 
 telescope and so on was built by nasa 
 who also provided one of the instruments 
 but the mission the telescope itself was 
 put into space by europe it was launched 
 on an ariane 5 rocket 
 um as i mentioned it's an infrared 
 telescope so it looks at sort of heat 
 from things okay that's a very kind of 
 general description but it it's it's 
 looking at the of the electromagnetic 
 spectrum 
 and which we feel is heat but is 
 actually looking at colder stuff in the 
 universe 
 and there's good reason for this 
 so webs for primary science 
 goals or themes 
 are shown here there's the birth of 
 stars and protoplanetary systems 
 the assembly of galaxies the first light 
 and reionization history of the universe 
 and planets and the origins of life and 
 they are pretty big questions to answer 
 um for for a mission 
 okay but these can only be answered 
 using an infrared telescope 
 the size and 
 the size of web with with its instrument 
 suite okay so it was 
 from the ground up design to to address 
 big questions in each of these four 
 fields now i'm not going to go into 
 detail about the science 
 um 
 because this is a python conference 
 after all 
 but the four science themes are just 
 sort of how the telescope was designed 
 it's also a general observatory you can 
 observe anything in the sky and with 
 that mirror and with that sensitivity 
 and detail it can provide and the suite 
 of instruments it can revolutionize 
 pretty much all areas of astronomy and 
 astrophysics which is why the scientific 
 community and you know the astronomy 
 community is so excited right now we got 
 the first taste of this yesterday and 
 again i showed the images at the end 
 so it was launched in december 21 2021 
 on christmas day 
 from kuru and french guiana it was 
 launched about lunchtime european time 
 and it was the worst christmas day i've 
 ever had i couldn't enjoy anything 
 because i knew this was coming and i was 
 so nervous 
 um and yeah i i had a lot to drink after 
 it i can tell you 
 when i went up safe 
 um 
 but but it was launched and it was 
 extremely successful launch this is one 
 thing you maybe don't hear so much about 
 that the european um i decided i don't 
 know why it's liquor but the the 
 the ariane space company did such a 
 great job on the launch that they didn't 
 need as much fuel to correct the path of 
 the of the rocket after the launch 
 um which meant that that fuel 
 departed the telescope which meant that 
 the fuel that was supposed to have been 
 used or could have been used wasn't 
 which means it's there available to 
 extend the life of the observatory and 
 instead of 
 um 
 a mission lifetime of 10 years because 
 that extra fuel is there and it was the 
 only consumable it's now looking like 20 
 years okay so that that's all from the 
 quality of the of the launch and i was 
 inserted into orbit 
 this is a 
 the final real look we got of webb as it 
 was moving away from the upper stage of 
 the rocket and this video was taken um 
 by a 
 um an instrument that was developed here 
 in dublin by a company called rachel 
 railtra space systems engineering 
 um 
 and it's just showing web being pushed 
 off to where it's going okay and what 
 happens i i won't let it run because it 
 goes on for a few minutes 
 but you start to see the solar sail 
 deploy when when web started to get 
 power 
 um and that was it that was 
 the first indication that everything had 
 gone so well because it was on such a 
 perfect path that it could start to 
 deploy 
 um 
 you know as i said it was a big thing it 
 had to be folded up to fit into the nose 
 cone and this was a very nerve-wracking 
 time this deployment of the telescope 
 took two weeks 
 and was very slow and methodical 
 and systematic 
 and there was nearly 300 single point 
 failures 
 in this process so any one of those goes 
 wrong and that telescope is completely 
 useless 
 okay so it was a phenomenal piece of 
 engineering but they got it up there and 
 deployed the telescope and it went 
 absolutely perfectly 
 okay 
 um 
 and this was the day in january when 
 when it when the last deployment went or 
 was successful uh and what's on the left 
 here is kind of a 
 visualization tool that feeds telemetry 
 from the telescope directly or that 
 takes telemetry directly from the 
 telescope to show what's happening and 
 this is the moment when the final latch 
 went in on the primary mirror and we had 
 a fully deployed telescope and there 
 were celebrations in the mission control 
 room in uh the space telescope science 
 institute in baltimore where webb was 
 controlled from 
 so it was a great day so what's been 
 happening since then this was back in 
 january well 
 the telescope has undergone a six-month 
 commissioning phase where everything 
 gets tested out we make sure the mirrors 
 work okay make sure the instruments work 
 okay and it's a lot it takes a long time 
 and because you have to do this right 
 the first was the mirrors okay this is a 
 this is an amazing image on the left is 
 an actual selfie taken by the telescope 
 with one of the instruments 
 so each you'll see that to fold a mirror 
 up there's there's mirror segments okay 
 that have to come out and fall together 
 so each one of those mirror segments is 
 a single telescope in itself 
 okay and what you need to do is you need 
 to bring each one into focus first and 
 then bring them into focus together to 
 get the best out of the telescope and 
 what's on on the left 
 is the selfie and what's on the right is 
 a star in the middle of each mirror and 
 you can see that they're distorted you 
 know the mirrors were just that 
 completely out of alignment and putting 
 everything back into alignment and 
 getting everything phased in the center 
 in focus is a very 
 very methodical process and it takes 
 about 
 two or three months two months 
 but they got there 
 and this was the first real image 
 we got from web where now you're seeing 
 in this this is the same selfie just 
 with all the mirrors focused that 
 everything is pointing in the right 
 direction they're all lit up because 
 they're all pointing um into the into 
 the telescope pupil 
 and you get this image of a very boring 
 star 
 okay but it's just showing the sharpness 
 you can achieve the spikes are just the 
 fraction spikes because of the objects 
 of the telescope but what jumps out of 
 this image i don't know if it is clear 
 on on the on the screen with the lights 
 but 
 there's just a background filled with 
 galaxies 
 okay it's so sensitive that no matter 
 where you point the telescope you will 
 get just field of galaxies okay and 
 actually for commissioner for science 
 it's great but for commissioning it was 
 just so annoying right they're 
 photobombing everything 
 once 
 the first instrument was focused then 
 they could move on to the rest so 
 there's four science instruments on mary 
 and a fine guidance sensor which which 
 kind of you know 
 keeps the telescope pointing in the 
 right direction as it's observing 
 and this was the first image released 
 for all of the instruments 
 including miri up here on the top right 
 which is which is what the instrument i 
 worked on 
 and again it i mean 
 this this is a field in the large 
 magellanic cloud which is nearby galaxy 
 so it's another galaxy but the images 
 are filled with stars and galaxies the 
 thing is so sensitive it collects so 
 much light and it's has such fine 
 resolution 
 that it doesn't doesn't matter where you 
 pointed if you integrate for any little 
 uh if you expose the instruments for any 
 short period of time you're going to get 
 this rich field of stars and galaxies 
 it's amazing 
 um so this is kind of a close-up now of 
 what the previous best 
 space-based infrared instrument could do 
 compared to james webb 
 uh in the in the mid-infrared 
 wavelengths where miri observed so on 
 the left is the spitzer space telescope 
 and on the right is the james webb space 
 telescope 
 and you can see the improvement is 
 unbelievable 
 and with mirror you start to see lots of 
 interstellar medium features and stuff 
 so it's very well resolved and these 
 these were taken in a few minutes or you 
 know like a few tens of minutes 
 so no it's no exposure time basically 
 um now now that's kind of 
 how commissioning was going 
 and and then we you know could 
 [Music] 
 our instruments were commissioned and so 
 on and now i kind of move and tell you a 
 bit about well how do we get these 
 images 
 um because what's shown here on the 
 right that that's not how the images 
 come down from the telescope okay you 
 don't just get these beautiful things 
 they they look a bit more messed up and 
 this is a very simple example so on the 
 left here 
 um 
 yeah i don't have a laser thingy but on 
 the left is a raw image okay and you can 
 see there's a lot of crap in there right 
 this is a simulation of the galaxy core 
 but if you look around you see all of 
 these stripes and bits and pieces and 
 these white things are cosmic rays 
 hitting the detector 
 okay there's lots of 
 you can see this sort of tree ring 
 structure up here so there's lots of 
 detector effects all of that is due to 
 the 
 effects introduced by the detector by 
 the 
 by whichever instrument you're using 
 what you need to do to produce the 
 images that are released or used for 
 science is get rid of all of that okay 
 to produce something like what's on the 
 right now there's still some bad pixel 
 areas but that's okay because you can 
 set up your observation to 
 move the detector slightly and fill in 
 those 
 but you want to remove all of the 
 effects introduced by the detectors and 
 by the telescope the telescope will 
 introduce them as well 
 and 
 leave just the pure image of the sky 
 that's well calibrated so you know the 
 flux of what the object you're looking 
 at you know the wavelengths and the 
 position on the sky and so on 
 and that's where the instrument teams 
 come in like myself 
 are you know like the team i worked on 
 where 
 before launch we 
 did years of testing of other of our 
 detectors and so on to 
 you know understand all of these effects 
 that were introduced 
 how we could correct them 
 in orbit 
 understand the behavior does do these 
 effects change in time 
 and create calibration files which we 
 could use in orbit to correct the data 
 and you know refine those in orbit 
 and this 
 basically what i'm describing is a 
 calibration pipeline okay what you you 
 understand various different effects and 
 you 
 create a pipeline where you send in raw 
 data you correct one effect you correct 
 the next effect and so on honestly 
 removed everything 
 and it's what we call a calibration 
 pipeline and this is kind of a schematic 
 of of 
 the stage one pipeline 
 and on the right is just a series of 
 steps that introduce our understanding 
 of the detector 
 on the asari and in the green 
 is just the list of steps 
 what the gray is showing is 
 sort of the reference file so these are 
 the calibration files that we've created 
 based on our understanding of the 
 telescope which 
 are kind of can easily be changed but 
 the calibration step the operation that 
 that does is fixed we just change the 
 values based on our understanding 
 these calibration files are 
 created by us and refined in 
 commissioning 
 and the blue is just a description but 
 i'm just giving you an idea of what i'm 
 talking about this is how we get from 
 raw data to 
 um 
 to the to the public release data so 
 we've been over in in baltimore at the 
 control room where i showed you and 
 working in the space telescope science 
 institute for the last few months 
 working on commission in myria where we 
 were looking at all of these effects 
 refining everything creating new 
 calibration files making sure everything 
 worked okay and the instrument worked as 
 expected 
 um 
 and 
 this is the first main area where python 
 comes in now i'm not going to show any 
 of it because i think it's still 
 proprietary but 
 um 
 all of these all of these checkouts we 
 were doing all of this commissioning 
 tools we were testing and running and so 
 on we're all developed and built in 
 python okay they live on a git on a 
 proprietary github repo 
 and which the ins which our instrument 
 team you know 
 develops on 
 and 
 it was used to basically commission miri 
 okay and other instruments were exactly 
 the same 
 so when we finish this process our 
 instrument is science ready and 
 images such as the ones you saw 
 yesterday can be taken okay we take a 
 box 
 the instrument is science ready and 
 those observations can be taken 
 other instruments have to do the same 
 and the final checkout was 
 a few days ago 
 where the very last science mode for 
 james webb was commissioned so it's 
 fully ready for science now 
 um but what you'll see here is that 
 there's actually a bunch of science 
 modes okay so i've kind of talked about 
 the various steps in calibration but 
 really in practice you don't want every 
 astronomer doing run these steps 
 themselves you need some sort of 
 software package that will take the data 
 from the telescope automatically 
 run it through these steps and make that 
 process data available to observers and 
 scientists around the world so they can 
 do the science okay our job is to make 
 is to remove 
 most of this from there and 
 stop them worrying about it okay it's 
 true that 
 a lot of scientists will re-run 
 everything maybe tailor some of the 
 steps maybe tailor some of the values 
 and that's great if we need to do that 
 we need to have a flexible software 
 package that can do that which we do 
 but there's basically 17 science modes 
 for a range of different 
 kind of 
 purposes 
 across the four instruments it's a big 
 pain in the neck okay 
 but a software package was created 
 that basically takes the data 
 figures out from 
 you know metadata in the in the files 
 what's been observed what mode is being 
 used sends the data into the specific 
 pipeline paths 
 and 
 processes everything and sends it 
 straight to 
 the archive where astronomers and 
 scientists can can download it and this 
 is called the jwsd calibration pipeline 
 okay it's a pipe and software suite 
 it does have some c plugins because 
 speed is required for a very small part 
 of the pi of the pipeline python slowing 
 things up quite a bit 
 but it's but 
 90 like you know more than 90 is is 
 written in python it automatically 
 processes data that's 
 sent from the telescope 
 and 
 as i said you know it decides which data 
 it is sends it through the correct path 
 and 
 you know calibrates it combines it if 
 necessary and produces the science ready 
 products that astronomers will use to 
 win nobel prizes hopefully 
 um 
 why is it in python well there's a 
 there's a substantial i don't know if 
 there's any astronomers in the room but 
 there's a substantial knowledge of 
 python in the astronomical community 
 we've had tools like um astropy and of 
 course numpy and scipy for for years now 
 and you know it's 
 it's perfectly suited to to 
 astronomical data analysis because in 
 the end they're just images okay and 
 spectra which are two and 
 uh one you know they're just numpy 
 arrays basically 
 so um the the benefit of having 
 everything together like this as well in 
 a single 
 uh calibration pipeline is that it it's 
 easier to maintain 
 different teams can work a lot of the 
 instruments have the same calibration 
 steps so the teams can 
 you know interface over the best way to 
 do things that will suit all of the 
 instruments so you've got additional 
 expertise in there and 
 you can also you know it's developed in 
 the open 
 for years the jwst calibration pipeline 
 has been openly and publicly available 
 so the community could get used to it 
 start using it and you know play around 
 with it a bit 
 it's very flexible 
 it's because it's written in python and 
 i'll go through it in a minute um 
 the steps are python classes and so on 
 so it's trivial to move stuff around 
 to better improve your calibration 
 for things like hubble people don't 
 realize that hubble had a lot of science 
 modes as well but pretty much everyone 
 had their own independent calibration 
 pipeline which were these monolithic 
 chunks of code that were written in 
 different languages and it wasn't 
 straightforward if you wanted to change 
 something you just couldn't do it okay 
 because it just you sent in something at 
 the top and your product came out at the 
 bottom whereas here you're going through 
 it step by step you can save at any 
 point 
 and you know rerun from or you know 
 pause the pipeline rerun 
 whatever you need to do 
 okay so before i get into how it works 
 the 
 just just some information for 
 yourselves 
 the 
 observation astronomical data files are 
 in the so-called fit standard okay and 
 it's 
 basically what you have is you have a 
 header with some metadata that gives you 
 things like what instruments were used 
 um 
 you know the dates just just lots and 
 lots of data about the observation 
 metadata about the observation and then 
 you have a data extension which is your 
 actual data like the image shown here 
 and you can have additional things like 
 if you have an error 
 image you can have that in your fits 
 extension okay so any any software to 
 process these things has to be able to 
 read these in 
 and output them and 
 run them through a pipeline we do that 
 for jwst for the calibration pipeline 
 this is done should i say 
 using software data models so these 
 files are read in to a python object 
 where members of the python object 
 correspond to different aspects of the 
 input fits file so if i read in the file 
 as before just using this very trivial 
 um so it's the jwsd package so if i 
 import the data models 
 from the package i can just open my fits 
 file and my 
 image my data is just a member of that 
 object so i can access it through 
 model.data or if i want to check out any 
 of the metadata i can just go through 
 the meta 
 member and find whatever i'm looking for 
 and it's very flexible and very very 
 useful 
 and it's you know it's uh because it's 
 python you can you can import uh you're 
 sorry the defined by yaml schema so you 
 can just start with a base and add as 
 you need to go and create data models 
 for every kind of file the jwst pipeline 
 uses such as the raw data such as the 
 output data such as the calibration data 
 and actually it's extremely useful for a 
 little bit for the for the instrument 
 teams because we can use the data models 
 to produce the exact format required by 
 the pipeline to calibrate the data 
 all of this is done through a package 
 called st pipe 
 so basically as i said we go through a 
 series of steps a series of steps at one 
 level is called a pipeline 
 each step is a python class it's based 
 on the step 
 the step class 
 i bet the idea behind this 
 is 
 that it handles everything and leaves 
 the instrument teams and the community 
 free to work on the scientific stuff so 
 this handles everything from data input 
 to 
 person configuration settings 
 input and output file management 
 accessing the calibration files okay 
 that's a big thing those calibration 
 files live on a server and this package 
 will automatically recognize from the 
 metadata in the data model what is 
 needed fetch that from a calibration 
 file server 
 takes all of that worry away from 
 astronomers and the instrument teams so 
 we don't need to worry about it we can 
 just focus on what we want the 
 corrections to be and the data to to do 
 okay it handles logging and 
 um it has a consistent interface for for 
 users across all of the pipelines across 
 all of the instrument mods okay so this 
 is this is what the jwsd calibration 
 pipeline is based on and i'm just going 
 to give a quick example i've never given 
 a python talk before so i don't know if 
 you're supposed to show code or not 
 so maybe this is a big faux pas in the 
 piping world but i don't know if you can 
 see it but basically this this is a very 
 simple calibration step and it it uses 
 the step classes it inherits in the step 
 class okay it's called a fringe step all 
 it does is divide a science image by 
 your reference 
 array 
 and 
 it's set up so it just takes an input 
 opens it with the data models gets 
 the calibration file using this one line 
 will fetch the calibration file from the 
 server or if it's on your local computer 
 we'll just get it from there 
 it logs everything 
 if there is no calibration file it will 
 give you a warning and move out and you 
 know stop the step and and set it in the 
 pipeline that it was skipped it won't 
 crash the pipeline the pipeline will 
 keep going but you will get this warning 
 that this step has been skipped 
 the fringe the calibration file is then 
 opened as a data model a fringe model in 
 this case and 
 the correction is done in a separate 
 function that's imported and as i said 
 it's just the division of of two arrays 
 and returns the output model so this is 
 a very simple version 
 but it gives an idea that if you know 
 whatever the dev like whatever the 
 instrument teams or scientists want to 
 do 
 is done in a function that's imported 
 all of the other things such as the 
 input and the output the fetching of the 
 calibration files and 
 you know reading of configuration 
 personal configuration parameters for 
 this step but but all of that is handled 
 by this sd pipe package 
 and and the step class 
 um which makes things very very 
 straightforward 
 and each one of these sort of steps the 
 calibration pipeline and step is just a 
 series of steps so the pipeline class is 
 just 
 a list of step classes 
 that are run through 
 and again very straightforward if we 
 want to 
 reorder these steps we can just move 
 them around if we want to remove one we 
 can just skip it or remove it and i'm 
 just giving an example here 
 again you're you're taking your your 
 input reading it as a data model and 
 this this is where now you're you're 
 starting to check for the different 
 modes so you read the metadata from the 
 data model you see that it's a mirror 
 observation and you go through the 
 mirror part of the pipeline okay and 
 there's logic like that built in all 
 over these pipelines 
 it's extremely useful extremely powerful 
 extremely modular 
 and because it's 
 compared to some of the stuff you guys 
 do i'm sure it's extremely simple 
 okay it's just a series of steps 
 um 
 so in the end what you want is you want 
 to take all remove all of those detector 
 things which i showed which is done in 
 the first stage of the pipeline these 
 second stages just do flux calibration 
 wavelength calibration and astrometric 
 calibrations so on okay which are just 
 you know 
 registering the images on the sky and 
 making sure you have the correct flux 
 and 
 then the third is stitching everything 
 together so 
 you know in an observation you will take 
 a bunch of exposures 
 um calibrate them up to level two stage 
 two and then stitch them all together to 
 produce a final mosaic such as the 
 images you saw yesterday at level three 
 and all of this is handled by the 
 calibration pipeline 
 wow 
 10 minutes 
 [Music] 
 i'm going to skip the simulators 
 that's okay i'm sure everybody wants to 
 see the images and not just me rabbiting 
 on 
 um okay uh so there are i mean i'm not 
 going to very quickly go through the 
 simulators but 
 that that was basically it for the 
 pipeline but you know to test the 
 pipeline to prepare for commissioning to 
 test our commissioning tools we needed 
 kind of real data not real data but 
 simulated data the sky because all of 
 our ground test data is on calibration 
 sources that's not representative of 
 what you see in space okay it's good for 
 you know checking your 
 you know understanding your instrument 
 and so on but if our commission and 
 observations are going to be of 
 something in space then we need to 
 create simulated data of something in 
 space and that again is all python all 
 python packages in miri team we 
 developed this miri sim 
 mirror simulator where we could 
 know what we're going to observe during 
 commissioning simulate it with mary test 
 our tools and in the end it was it was 
 used pretty much by every part of the 
 miri team um 
 and what we had in the end sorry i'll 
 just ah 
 what we had in the end was something 
 like this where we had 
 knowledge of what we were going to 
 observe in the sky which is on the left 
 now are our simulations on the right 
 which incorporates our understanding of 
 the instrumented sensitivities and so on 
 and this is what it actually looked like 
 in 
 commission and so on the left is a 
 simulation and on the right is the 
 actual observation during commission and 
 there's a slight offset and angle but 
 that's just because we were out by a 
 degree 
 um on our way out 
 we simulated a day uh two two days later 
 than was actually observed 
 but you're looking at the the field on 
 the right and it's almost perfect okay 
 so our understanding of the instrument 
 was extremely good because we could take 
 that simulate what we thought the sky 
 should look like and it was basically 
 the same 
 okay 
 so really uh really allowed us to 
 develop our it was perfect for 
 developing our commissioning tools post 
 pipeline so after the pipeline is 
 finished and the science products come 
 out um again there's a suite of um 
 python tools to analyze the data and the 
 images and the spectra and whatever 
 these are like a lot of these would be 
 quite common throughout the astronomical 
 community 
 um okay the images yeah now everybody 
 wakes back up um 
 so i'm on the knife 
 we had president biden reveal the very 
 first image 
 science image with taken with awst 
 and it was i don't know anyone watch it 
 a few okay that's good because it was it 
 was really weird 
 but um 
 but it gave a whole another level of 
 publicity to the uh to the community not 
 to the instrument and so on obviously 
 not in this room because it was about 
 five people who put their hands up 
 um 
 but but no it was really something else 
 and we didn't know that president biden 
 was going to release the first image 
 when he found out on sunday 
 but this is the first image is the it's 
 the um 
 jwst first deep field okay 
 it's the 
 furthest into the universe apart from 
 the cosmic microwave background which is 
 the first light that's absolute first 
 lightning universe but this is the first 
 sort of stars and galaxies that the 
 deepest images stars and galaxies we've 
 ever had this was done with 12 in 12 
 hours with james webb okay 12 hours has 
 nothing 
 the hubble deep field ultra d field took 
 weeks of constant observing okay okay 
 spread out over years but it's a week's 
 uh exposure and this is 12 hours this 
 was done just in just over one shift on 
 console put it here that way 
 and 
 the detail in there is phenomenal if you 
 download the full resolution image you 
 could scroll around it all day you're 
 seeing a massive galaxy cluster in the 
 center and you know einstein's generator 
 relativity told us that if there's a 
 mass in space it deforms space-time 
 so if you have a very massive object 
 in the universe it acts like a lens 
 because the light from behind it sees 
 the deformity and gets bent around it 
 and that's what you're seeing here so 
 these are lens galaxies and this isn't 
 even lens galaxies this is the same 
 galaxy just seeing a different part of 
 the lens 
 here 
 okay so phenomenal stuff the galaxy 
 cluster is about four or five billion 
 light years from here you're seeing 
 stuff in this image that's it was 
 emitted 13 billion light years ago over 
 13 billion light years ago so the 
 universe was still only a few hundred 
 million years old again this is just in 
 12 hours with james webb 
 you could scroll around and look at all 
 sorts of funny images are funny objects 
 like this thing here again this is just 
 deformed by the 
 by the gravitational lens 
 you're seeing 
 objects in here like these red galaxies 
 which aren't visible in hubble okay 
 because they're so far away the light 
 from those has been right shifted 
 redshifted means that the light has just 
 lost energy as it moves across the 
 expanding universe 
 and hubble physically can't look at 
 these galaxies because it can't see in 
 these wavelengths this is why james webb 
 was built to see those galaxies 
 the image that was released was taken 
 with near cam but on the left is the 
 mirror image so this is the with the 
 instrument we worked on 
 and this sees even further back now we 
 actually don't understand we don't know 
 what a lot of the objects are in the 
 mirror image because we need to identify 
 them which is probably why it wasn't 
 released yesterday 
 uh in the announcement 
 but miri has the potential to look even 
 further back again okay because it's 
 longer wavelength 
 stuff that's further away gets 
 redshifted to the longer wavelengths 
 and we also saw stefan's quintet 
 yesterday which is a gala a small galaxy 
 cluster interacting galaxies nearby 
 nearby relatively nearby the one on the 
 the one here is actually a foreground 
 galaxy okay this isn't associated with 
 with these three uh with these ones here 
 these are interacting so they've been in 
 a kind of a cosmic uh you know 
 dance for 
 millions billions of years and this is 
 the image taken with near camp so you 
 can see the white is basically the stars 
 but if you look with miri you start to 
 see the interstellar medium and you can 
 see all this dust being spun around the 
 galaxies and in that dust there's lots 
 of stars being formed because they're 
 you know there's turbulent motion in 
 there and there's compression of the 
 dust and gas and stars will will form in 
 there 
 and this is a near khameri composite but 
 the miri image itself is insane 
 okay it looks like fireworks 
 and again this this is so this is kind 
 of a zoom in on the top tree here 
 but 
 this galaxy on the left again is a 
 foreground galaxy it's pretty standard 
 looking for uh um for a spiral but on 
 the right here you can see really how 
 the interstellar medium is being 
 disturbed by the interactions of those 
 galaxies 
 and you can see that there's these shock 
 fronts and clumps and everything and 
 here it's like there's you know it 
 almost looks like the gas is swirling or 
 the dust is swirling into the center and 
 this is a supermassive black hole in 
 here this bright object which is only 
 visible in mary 
 or which becomes very apparent and merry 
 okay and again photo bombed in the 
 background by all of these galaxies that 
 are even further away okay which were 
 you know consistent pain in the neck 
 uh the next image was um the southern 
 ring planetary nebula this is a dying 
 star this is a star like the sun which 
 is in its last 
 stage of evolution and it's throwing off 
 the outer layers of the star exposing 
 the hot core in the center the hawk is 
 on the left is a near cam image 
 and you can see the hot core star which 
 is white dwarf basically or a 
 proto-white dwarf 
 and 
 and the layers of the star being thrown 
 out into the interstellar medium on the 
 right is mary but the detail in the near 
 cam image is just phenomenal okay you 
 can see all of this layers and you know 
 there's dust and so on in here 
 uh are there's just gas and dust and 
 just layers and layers of 
 mass loss from the project from the star 
 um as it dies basically 
 it was always known that this was a 
 binary star but actually mary you can 
 see the binary okay the resolution of 
 jwst is so good you can see the binary 
 in there next to it it's a dusty star so 
 it's not visible in near cam but mary 
 resolves it it's phenomenal stuff this 
 was released yesterday as well it's the 
 spectrum of an exoplanet atmosphere okay 
 so this is a hot jupiter basically a big 
 gas giant moved in front of its host 
 star while the web was observant and 
 due because of the changes in the 
 stellar spectrum we could infer the 
 content of the stellar atmosphere and 
 what was found 
 was that it's filled with water vapor 
 okay so steam basically this is right 
 next to its star so it's very hot so 
 it's filled with steam now this was kind 
 of known what was unknown or what what's 
 different 
 is that these water features shown here 
 these bumps 
 are smaller than expected 
 the reason is that there's clouds in the 
 atmosphere okay so this is actually 
 inferring the presence of clouds in the 
 atmosphere of this hot jupiter because 
 that the 
 the clouds will inhibit the formation of 
 water vapor 
 okay so just from just one observation 
 and this you know 
 it will observe things like you know 
 candidates that have potential for life 
 and so on 
 but this is a very kind of standard hot 
 gas joint and it's already you know 
 producing these amazing results 
 this wasn't released yesterday this is 
 in our commissioning paper that was 
 released today on the archive this is 
 jupiter 
 jupiter shines out in the infrared okay 
 and i'm just showing you this it you 
 know 
 it doesn't look anywhere near as 
 impressive as the hubble image that's 
 right it looks like someone shot a torch 
 behind it but 
 telesco or the telescope james webb is a 
 big unit okay it's a big thing 
 but to observe something like jupiter it 
 needs to be able to track it on the sky 
 so it does move in target analysis so it 
 can actually follow jupiter as it moves 
 along and this this observation with 
 near camp demonstrated that 
 and you can see the moons which are also 
 bright 
 the red spot so you're actually seeing a 
 mission from jupiter itself now not just 
 the reflected light from the sun 
 um 
 and you can see its rings 
 okay you can see the faint rings here 
 uh you can see lots of detectors stuff 
 in the background that's just because 
 jupiter is so bright okay it's not um 
 there's nothing you can do about it when 
 it's so bright it's saturating the 
 detector and so on this one was my 
 favorite this is the karina nebula the 
 gas and dust and the korean nebula 
 um so there's massive stars up here that 
 are irradiating this gas and dust and 
 you can see the the gas and dust is 
 evaporating off into the into the 
 interstellar medium 
 there's star formation going along in 
 the dense parts of this 
 um which you know can't be seen by 
 hubble because hubble can't see into the 
 cast and dusk and near cam can't really 
 either but mary can 
 so if you look with mary you're seeing 
 right into where these young stars are 
 forming you can see the you know the 
 plan is to look at the formation of 
 young stars and protoplanetary disks so 
 look at the very earliest stages of 
 planet formation and there's lots of 
 other things here as well 
 the ever-present photobombing galaxies 
 in the background uh outflows from 
 massive stars you can see here's a 
 there's a jet that's carving a cavity in 
 the interstellar medium here 
 just phenomenal stuff and all of these 
 observations were done in one week 
 okay one week and not even filled the 
 week 
 this kind of thing is routine for the 
 james webb space telescope 
 which is why 
 the next few years are going to be 
 extremely exciting and these these 
 targets were also chosen because they're 
 not on the list of targets that are 
 going to be observed in the next year so 
 the interest and targets have yet to be 
 observed 
 okay 
 i'm going to leave it with this image 
 because it's my favorite and it took 20 
 years to build the telescope put it in 
 space and now 
 um yeah now it's very exciting time 
 and all because of python 
 thank you perfect 
 thank you patrick that was amazing it's 
 really hard to interrupt you when you're 
 showing this is well okay it doesn't fit 
 in my brain 
 uh so we have time for a few questions 
 if you want to ask a question you have 
 to stand in that microphone right there 
 um 
 anyone want to ask a question 
 come to a quick 
 um i don't think i i'm going to say a 
 reminder 
 if you are watching this conference 
 remote you can ask questions right so if 
 anyone is remote there is always an 
 operator asking do you want to ask a 
 question and you can get into a call and 
 then we will put you here in the screen 
 live with everyone 
 and 
 so remember that for all the talks so 
 first one yeah 
 so what are the interesting targets 
 uh well there's a list of them uh 
 so 
 i mean okay 
 everybody's favorite thing that it's 
 gonna do is is the 
 exoplanet atmospheres okay because 
 potentially you could observe life and 
 and we'll see 
 so 
 um 
 web is not a planet finder uh you need 
 to know what you're that you need to 
 know the planets before it will look at 
 them okay and there's we have how many 
 now three four thousand more probably 
 exoplanets that are known some in 
 you know some are rocky some are not 
 have atmospheres all of this so they 
 pick the best candidates of them they 
 will be observed in the next year so 
 really in the next year there's you know 
 somebody only asked me yesterday in an 
 interview you know 
 find life well there's never been a 
 better chance 
 um potentially very quickly 
 but 
 yeah i don't want to get everybody's 
 hopes up on that but yeah yeah things 
 like that i mean there's so many 
 interesting targets so many 
 cool next one 
 hi first of all thank you so much for 
 the for the presentation uh web is such 
 an amazing 
 piece of uh piece of hardware and 
 software um my question you mentioned 
 something about the data pipelines being 
 opened and to the public does it also 
 involve the data how do we get data okay 
 so so everything that was released 
 yesterday is publicly available okay 
 that was these are so-called early 
 release observations 
 and the raw data from them and the 
 calibrated data that fits files that 
 will um will be available either today 
 or tomorrow 
 and they're free for everybody there's a 
 second program called early release 
 science which will also become free 
 immediately available uh to everybody 
 and when they're taken 
 okay so some have already been taken so 
 that data will become available today or 
 i can't remember the dates there 
 tomorrow as well 
 um but as they as they are taking in the 
 first cycle they will become available 
 the other programs the 
 so-called guarantee time and guest 
 observer programs there's a proprietary 
 period of one year for them 
 so scientists have the right because 
 they won that time they have the right 
 to have it to themselves for a year to 
 produce the scientific produce 
 papers and make the discoveries and so 
 on after that it becomes publicly 
 available 
 so basically in the year we can do just 
 pip install jbwst and we can well right 
 right now you can do that all right you 
 can just type in anyway yeah anyone new 
 computer open type pip install jwsc and 
 they should install the software package 
 and 
 it's the data that you want right so go 
 get that data download that from an 
 archive it's on matt it's called mass 
 archive you can go and fetch it today or 
 tomorrow 
 and you can start playing around with it 
 right cool cool so 
 no that's two questions 
 one more 
 we don't have remote questions so only 
 one more sorry for the other ones 
 yeah thanks for the great talk i was 
 just wondering what is the size or the 
 scale of the raw data to produce one 
 image 
 the scale it depends on so it all 
 depends on how long you integrate so how 
 long the exposure time is um 
 for 
 let me see now 
 so basically the way the telescope works 
 is it samples the detector uh at some 
 readout time okay so it takes a sample 
 take a sample for example and then you 
 use that to calibrate your data 
 and it depends on how many of those 
 samples you take 
 and 
 if it's short it can it's only a few 
 hundred megabytes and now you will have 
 more than one you'll have more than one 
 exposure right so 
 you're talking a few gigabytes a couple 
 of gigabytes but if it's much bigger 
 then of course such as scales with the 
 the amount of samples of the detector 
 basically so it can yeah can be tens of 
 gigabytes probably for the biggest all 
 right thank you 
 okay thank you very much patrick please 
 give him a shout 
 so enjoy the coffee break 
 10 45 every track is going to be live 
 see you later 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 [Applause] 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because it gives us a space to 
 be among our those that are like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd out about code 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how imnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future 
 and create groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 [Music] 
 so 
 [Music] 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because 
 it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble and just being 
 able to geek about geek out about sort 
 of shared interests having shared sense 
 of humor with people i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 [Music] 
 [Music] 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is uh tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans 
 community something i really loved about 
 today is meeting people of sort of 
 different ages different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd out of our code 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 so 
 [Music] 
 [Music] 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because 
 it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i've really loved about today 
 is meeting people of sort of different 
 ages different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble and just being 
 able to geek about geek out about sort 
 of shared interests having shared sense 
 of humor with people i've never met 
 is really really lovely and of course 
 getting to nerd out of our code 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive brother 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 [Music] 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends with family but we're 
 in a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having a shared sense of humor with 
 people i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent connections 
 keep it simple 
 [Music] 
 [Music] 
 [Music] 
 [Music] 
 transcode is a heck day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because 
 it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 umnitza is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 right uh 
 morning everyone uh we're gonna have a 
 nice session for you here in the 
 auditorium this morning uh we have three 
 speakers so i'm gonna try our best to 
 stay on time 
 uh so i hope you appreciate and are you 
 know sensitive when it comes to asking 
 your questions if you don't have time 
 we'll have time maybe in a coffee break 
 or on discord 
 so 
 uh their first speaker probably needs no 
 introduction for many people at euro 
 python 
 uh pablo galindo 
 is a 
 well has a phd in uh theoretical physics 
 from the university of granada but 
 currently works 
 in bloomberg in london 
 he's a core developer of c python 
 and also a member of the python steering 
 committee so today he's going to be 
 talking to you about making python 
 better one error message at a time so 
 the floor is yours pablo 
 thank you 
 okay let's see how this works 
 okay awesome awesome um so 
 i'm going to skip the introduction thank 
 you a lot for the fantastic work 
 so what i'm going to talk in this 
 session is the recent work we made in 
 python 310 and now in python 311 about 
 improving the error messages in 
 interpreter 
 but i want to start first with an 
 interesting story that also kind of 
 mixes 
 uh what i was doing before doing a 
 software engineer so before before my 
 current role right now i work at 
 bloomberg in the python infrastructure 
 team so i basically make sure that you 
 know python works at the company and 
 what not but before that 
 i was doing my phd um in theoretical 
 physics right 
 and in the phd normally you do like pen 
 and paper although these days is more 
 like you know computer and pen on paper 
 but interestingly i started to use 
 python at the time 
 and uh there is this nice story that i 
 always like to think about when people 
 ask me like oh what do you think you 
 know is the most uh interesting 
 improvements you can do to the language 
 and so figure this thing right like we 
 were in the room like three three of us 
 doing uh our phd right so the three of 
 them psd candidates quite the smart 
 people and one of my friends uh was uh 
 was starting to call in python and he 
 was doing some some kind of a script to 
 you know like much data or whatever the 
 important thing here is that there was 
 something that was not working 
 particularly my friend had a syntax 
 error but the problem is that he 
 couldn't figure out what was the problem 
 with the syntax editor like why that was 
 wrong right 
 and my friend then says oh pablo like 
 can you come here and try to help me and 
 i tried and then we were looking at the 
 script and we couldn't figure out what 
 was wrong we started like changing 
 things randomly as you do when you are a 
 professional software engineer until 
 something happens and we even bring a 
 third phd student okay figure out the 
 scene right like three phd students we 
 could figure out the deepest mysteries 
 of the universe but we couldn't fix a 
 syntax error 
 so not good right and uh i will show you 
 what was the syntax error so you can see 
 like because you may be thinking 
 phd students they cannot solve syntax 
 errors um so the syntax errors was this 
 one 
 who knows what's wrong with that 
 the indentation is good 
 obviously the error is not exactly in 
 this line but this is the error that you 
 get um so the line is fantastic like 
 don't lose your time trying to figure 
 out what is wrong with that the line is 
 correctly um so i'm going to give you 
 more context this is the code that more 
 or less is around the line 
 can who sees the the error okay 
 okay nice exactly so the error is that 
 if you look at the fancy dictionary 
 there this um like there is one open 
 bracket there is two open brackets oh 
 there is only one closed bracket but 
 look at the error 
 no bueno 
 so 
 so this is very annoying and what i'm 
 showing you here is like the the 
 the smaller example i can show you so it 
 fits on the slide but obviously as you 
 can imagine the original code has a 
 gigantic dictionary full of scientific 
 whatever 
 and instead of two curly braces there's 
 like 16 of them and the one that is not 
 close is like super deep into the 
 dictionary so it was not that easy to 
 find right but the problem is that like 
 three million years 
 like years after the close bracket you 
 find the function definition and the 
 error happens on the function definition 
 right you may be thinking wow python is 
 quite bad huh 
 well it may be true or especially before 
 310 right but like the thing here is 
 that for the partial point of view it 
 makes sense because like he's trying to 
 understand the dictionary and he's 
 saying okay yeah a dictionary i can see 
 here the things that i recognize in 
 dictionaries and whatnot and then you 
 know it's trying to find that close 
 bracket but it's not finding it so when 
 it reaches the function definition it 
 thinks it's still inside the dictionary 
 and then it says yeah you cannot do this 
 function definition inside the 
 dictionary what are you thinking about 
 but but you as a human have other plans 
 right like you you're applying to this 
 fancy function definition and then the 
 thing is getting in the way and this is 
 the problem that we're trying to solve 
 like you as a human have some ideas of 
 how the world works and the parser has 
 other ideas normally the parser is 
 smarter 
 it's just that you know when it 
 complains it's not very it's not very 
 useful so this is what we're trying to 
 solve right and not this particular 
 example in particular but all of them 
 right so i want to show you like some 
 other problems that that python has so 
 for instance this is just the problem 
 that you saw if you don't close a 
 bracket in a dictionary definition or or 
 some other collection and then you have 
 something else in this case a function 
 definition then you get this ugly 
 invalid syntax this is another one 
 you you try to define 
 like a 
 comprehension uh but then you use a 
 comma and i'm parenthesis tuple in the 
 value and then you get syntax error the 
 syntax order is quite weird you have not 
 seen it before it's because you need to 
 parenthesize the tuple in the value 
 uh this is you don't close uh like a 
 like a list and then you have something 
 else like an equality then you get the 
 you get the syntax orders on the equal 
 um quite weird uh think about that these 
 are simplified examples right like like 
 these these things can be like super 
 complicated in the at the beginning and 
 then you get the error like 
 you know super far away so not good 
 uh for instance this is quite funny uh 
 you get a bunch of dictionary dictionary 
 matching chord developer names to their 
 github usernames uh and you see you you 
 forget a comma over there and then what 
 this is going to tell you is that uh 
 gucas langa is a syntax error which is 
 kind of rude um but you know like no 
 bueno um so this is another funny one uh 
 if you see this one you may be like 
 especially again think about when these 
 dictionaries are quite complicated um 
 this is this can be quite difficult to 
 the bag um i mean it won't tell you it 
 won't take more than five or ten minutes 
 but it's five or ten minutes that you 
 will you know have to spend doing this 
 thing instead of what you want to do for 
 real uh this is another one if you don't 
 parenthesize uh like exception in 
 exception multiple exception handlers 
 you get a syntax error in the comma 
 um or this one when you forget uh like 
 uh for whatever reason do you forget the 
 value in a dictionary that you get the 
 syntax on the bracket 
 and uh everyone's favorite this one 
 how many times have you find this one 
 and actually the question is how many 
 times have you had to explain someone 
 what this means 
 well i expected more hands do you know 
 do you know who knows what this means 
 actually 
 oh wow okay 
 there is some explaining here so eof 
 stands for end of file because 
 apparently writing you know the whole 
 the whole sentence is expensive so we we 
 put the eof 
 um the reason you don't see anything is 
 because the syntax error is pointing at 
 the end of the file and at the end of 
 the file there is nothing so that's what 
 the you know there's no code there um 
 and if you see the file example.py has 
 in reality it has nine lines and it's 
 telling you that the error is on line 10 
 because at the end of the file but but 
 this is everything is wrong with this 
 slide like the the lines are wrong like 
 if you try to use your editor 2010 there 
 is no line 10. like what the is eof 
 and like you know like what is this 
 carrot like what what is it you like do 
 you see this thing like the the card 
 pointing to the void and it's like you 
 know all your hopes are just lost like 
 what is this going on right uh you know 
 if you have seen this one or two times 
 you may say okay yeah i got it i know 
 what this means like i will fix it but 
 like think about you know some uh young 
 person you know full of life and 
 excitement and it's like 
 i'm going to learn python and then 
 python says i have a thing for you and 
 you know like then then you got all 
 these people saying oh man like python 
 is quite hard and it's not really high 
 this is we have this this this kind of 
 errors right so not good so the idea 
 that we so you know apart from many 
 other improvements we have made in the 
 python interpreter over the years in 
 python three times so the previous 
 version well or the current version 
 because we're going to release 311 this 
 year we said okay we we we need to 
 improve the situation right so let me 
 show you some of the new improvements 
 that we have and then we are going to 
 cover how we made them and like 
 different problems that um you may you 
 may find with those errors so uh all of 
 these errors are possible because uh the 
 word that we did with guido and 
 lisandros in perf 617 and we basically 
 replaced the whole parser um the the 
 parser that was before if you check the 
 the comments so the the first person 
 that we have it was an element parser 
 which is a kind of parser it's not 
 important what is the difference but if 
 you see the dates uh over there the 
 first parser was basically committed in 
 1919 and the pair parser was committed 
 on 2020 so it's almost 30 year old 
 like it's the the previous parser was 
 there for 30 years it's probably or it 
 was probably one of the oldest pieces of 
 python which means that you know it was 
 working quite nicely because you could 
 ride python before right um but you know 
 you had all these different problems and 
 actually it was like 
 like 
 it was not allowing us to do some of the 
 cool stuff that you can see on python 
 310 and forwards for instance just 
 because we have a new parser we could do 
 a bunch of things like parenthesize 
 context managers so you can write like 
 parentheses around context manager 
 groups or for instance you can have much 
 statements like who likes matches 
 statements 
 uh well a bunch of people nice good good 
 um you need to you need to say nothing 
 more on the internet so people don't 
 only think that they're they suck um 
 everybody likes my statements right so 
 so these these things are only possible 
 with the new person but there is a 
 problem right because like you know the 
 new parser allows all these things and 
 you know we are introducing all this 
 funky grammar like you know much 
 statements what is even that and people 
 get angry in the internet right like 
 that's because that's that's what you do 
 in the internet you just go and like you 
 get angry and 
 someone gives you money or something um 
 but then you know that's not good and 
 people demonize the the pec parser 
 because it's like oh a stupid tool is 
 allowing humans to do things and and and 
 they think that the tool is bad right 
 evil tool but 
 what i'm going to try to show you here 
 is that you know the back parser is not 
 bad right it's like like a knife like 
 it's not really bad i mean you can do 
 bad things with a knife but i don't know 
 you can also do both things with a spoon 
 and people don't hate the spoons 
 so 
 well 
 don't quote me on that but like 
 anyway the idea is that i want to show 
 you that you can do a bunch of very cool 
 things with this parser that is not only 
 funky syntax that you may or may not 
 like in particular i want you to think 
 of the perk parser as allowing a bunch 
 of super cool 
 user-centric features like error 
 messages but other things that we may be 
 able to cover in the questions like you 
 know improve f strings and whatnot okay 
 so let me show you a bunch of the cool 
 things that we can do with the peg 
 parser so for instance if this is a very 
 common error if you have like um 
 like a conditional and then you have uh 
 uh you forget the the column which a lot 
 of people do instead of uh we're like 
 you know invalid syntax then you get 
 like oh haha expected column over there 
 nice 
 uh then imagine that again you forget 
 like the value in a dictionary right 
 like that set over there doesn't have a 
 value now the person tells you whoop i 
 was expecting an expression after the 
 key and the colon which is nice uh 
 imagine that this is also very common uh 
 you get a conditional and instead of 
 like when you want to compare two things 
 instead of comparing them you use one 
 equal um because you know it happens to 
 everyone even to the best of us and 
 instead of like giving you a funky like 
 during valid syntax who knows where then 
 you get like this nice error saying like 
 oh i cannot assign to an attribute here 
 maybe you meant to use like double 
 equals or the wall rules 
 uh and here again like maybe you forget 
 a comma in a dictionary um like a 
 literal and now the parcel is telling 
 you whoop and that doesn't look good 
 like oh maybe you're forgetting i come 
 over there which is very useful it 
 doesn't report you like three million 
 light years away 
 um so everybody wins 
 uh for instance here this one like oh 
 you miss indented that if right like 
 but they no because now with the parts i 
 will tell you what do you 
 miss indented that if a statement on 
 line two so you can just go and fix it 
 um 
 and everyone's favorite um so if you go 
 back in time those phd students now will 
 be very happy because now it tells you 
 that the dictionary was not close wow 
 what about that um 
 nice 
 yeah yeah 
 four years of psd just thrown away when 
 i clearly have this um don't do psds 
 anyway uh awesome right this is just a 
 bunch of them i'm not going to cover all 
 of them because like we will be here 
 forever um 
 but i want you to teach you about how i 
 think this sort of message is maybe hard 
 so 
 the idea here is that there is two 
 components of these things right like 
 there is a technical component which i'm 
 going to more or less cover but i want 
 you to think about these things also as 
 a human component versus the machine 
 component because as human you know what 
 you want to do right okay i want to 
 write the dictionary but but the machine 
 like the person in particular is going 
 to try to understand what you are trying 
 to write and assuming that you make an 
 error and you make a mistake then the 
 party is going to try to understand 
 what you may be trying to do and 
 you know you know what you are trying to 
 do but like the machine may not be able 
 to and the the complexity on all of 
 these things is that the guess that the 
 person is going to do is not very far 
 away from what you are really trying to 
 do right and that is quite hard like you 
 know it's not only on parsers every time 
 you try to do errors on your 
 applications right like maybe you're 
 checking if a value is less than uh you 
 know bigger than zero or something and 
 then it turns out that you need to for 
 giving a good error message is you need 
 to figure out why someone will have 
 passed you a number bigger than zero oh 
 sorry less than zero maybe they are 
 trying to index a list from the back 
 okay maybe you know you don't allow that 
 and then you need to let me down in your 
 messages so you know bringing the 
 technicalities of things and what humans 
 expect is quite a hard task that is one 
 of them but we are going to focus on the 
 technical challenges which are more 
 funnier uh okay so as an example of why 
 adding error messages is difficult think 
 about this right let's imagine that you 
 want to introduce these error messages 
 right like you have a list and if 
 someone forgets a comma between two of 
 the elements then you want to say oh 
 perhaps you forgot the comma so let's 
 try to implement this together right 
 okay so how do you do that well you go 
 to the grammar of the language and now 
 it's a background you don't need to 
 understand what this means but like i 
 will more or less give you the idea so 
 you need you introduce a new rule we are 
 going to call this rule invalid 
 expression and then you say that an 
 invalid expression is an expression like 
 3 plus 2 or a or i don't know dictionary 
 uh followed by another expression 
 without a comma in the middle right so 
 think about x and then y or one plus one 
 and then three plus two or something 
 like that right so if there is not a 
 comma between two expressions then it's 
 very likely that someone follow that 
 comma right and then we capture the 
 these two expressions using this equal 
 syntax and then if that happens like if 
 this rule passes like the parser sees 
 that this is happening then we are going 
 to raise a syntax error and then we are 
 going to say we are going to point to a 
 and b and then we are to say oh invalid 
 syntax perhaps you forgot a comma so 
 what we expect sorry what we expect is 
 precisely that right okay so you 
 implement this rule makes all the sense 
 in the world and what happens well it 
 turns out that the rule doesn't work it 
 doesn't work because for instance if you 
 forget the ink keyword in a for loop 
 then you get oh perhaps you forgot a 
 comma no bueno uh then it turns out that 
 if you write a incorrect string prefix 
 then you also get invalid maybe you 
 forgot a comma which obviously is not 
 the problem um but you also like if you 
 forgot to uh close uh um you know a 
 double for instance and then you have an 
 equality afterwards you also get perhaps 
 you forgot comma which is obviously 
 wrong 
 and then you get this um i don't know 
 what is wrong with this but apparently 
 i'm forgetting a coma um 
 and also like you know oh you write a 
 bunch of numbers because like why not 
 and you're getting the comma apparently 
 on the on the on the right part of the 
 expression for some reason uh not what 
 no good 
 and also like match statements don't 
 work anymore because you know there are 
 two names together except that one of 
 them may be or may not be a keyword 
 because i don't know if you know it but 
 match is not a keyword is a soft keyword 
 so it doesn't work right oh damn soft 
 keywords don't work anymore so you know 
 like not good and you may be thinking oh 
 yeah but this is all theoretical right 
 it's not that someone has actually had 
 to fix all these problems when they 
 introduce the common error as you can 
 see this is a real issue that i fixed 
 when i introduced the camaro so what you 
 have seen is me actually uh learning 
 that error messages are hard um 
 yeah not good and this is just four of 
 them there was like six or seven so you 
 know it's quite hard because like you 
 may be thinking about a super small like 
 subset of the problem you know 
 expression plus expression like 
 why that will appear in any other case 
 and it turns out that you know you 
 forgot about all these cases right and 
 that's the problem because you may be 
 very happy and thinking that oh i got it 
 i understand what the problem is but 
 when you put that pattern that you're 
 trying to match everywhere you're 
 forgetting that you know all these other 
 cases can also be matching your rule 
 it's like writing a regular expression 
 right like you write a regular 
 expression and the raw expression is too 
 generic and it's matching things that 
 you don't want too much so it's the same 
 idea but with a lot more people 
 complaining about it 
 so yeah that is quite hard 
 there is other problems in particularly 
 the peg parser turns that peg parsers 
 are by nature exponential this means 
 that 
 the bigger your input is the more time 
 they take to parse by default um and 
 the complexity that they grow in time is 
 exponential this means that the more 
 characters you have it grows in 
 exponential time normally you fix this 
 problem by introducing what is called a 
 memoization cache so that way you take 
 them and tame them to be linear that is 
 called packard pyrazine uh it's a very 
 common technique and this is partially 
 what we do in python but you need to you 
 need to put that thing in like you need 
 to say i want to use the cache here 
 otherwise you will be using memory all 
 over the place 
 but you can think that you have all of 
 the cases covered but you may 
 forgetting about some of them for 
 instance it turns out that in python 310 
 this is fixed but you use this this 
 expression which is a syntax error 
 because you know it's a bunch of open 
 brackets and a column that you cannot 
 write that uh python takes two seconds 
 to tell you that this is a syntax error 
 you may be thinking i have two seconds 
 but like this projection takes over an 
 hour 
 well it's fixed right like you know we 
 fix it like you know here's the issue 
 and like apparently someone here was 
 very happy because i don't know they 
 like to put a lot of brackets and now 
 they they can have like syntax errors in 
 nanoseconds so hooray uh but you know 
 it's quite it's hard because like you 
 may be thinking that you have everything 
 and then someone like you know the 
 bracket guy comes in and says hey what 
 about my brackets and like you know like 
 they take over an hour and people are 
 not happy 
 so you know you need there's a lot of 
 things what i want to teach you here 
 with this is that there is a lot of 
 things to take into account when you add 
 a syntax error not only on 
 will this match rules that i don't have 
 in mind but also on the very core 
 technicalities of the parser in this 
 case turns out that the very technical 
 details of how the parser works you know 
 parker parser and like exponential time 
 etc etc 
 can percolate over you know github 
 issues or whatever 
 so those are hard 
 but we have turns out that now that we 
 have like a lot of syntax or cover we 
 say oh why why is stopping here right 
 like we're stopping only on syntax 
 errors when we can do also runtime 
 suggestions 
 and this is very interesting as well 
 because runtime suggestions are a 
 different beast uh right like parser 
 errors happen when when the partner 
 tries to understand your program right 
 and that happens only once normally the 
 python compiler then produces pyc files 
 and those pc files are compiled by code 
 so the second time you run your programs 
 or your modules they don't need to be 
 parsed again they just load those plc 
 files from memory and everyone is happy 
 so runtime suggestions are different 
 these are errors that are detected and 
 generated at runtime 
 which means that 
 you are paying for the detection and the 
 i'm producing the error and i have to 
 say something over here because like 
 when when you're going to see these 
 errors a lot of people say oh this is 
 just like rust 
 i mean sure yeah rust is cool and has a 
 lot of other messages but like come on 
 like we we don't go copying other 
 languages like we can also do like 
 independent work right like we we can 
 all be nice programmers and languages 
 right without having to say or usually 
 just scooping rust 
 in particular runtime suggestions is 
 something that rust normally doesn't or 
 other languages doesn't need to care 
 about a lot because normally these nice 
 error messages that you get with the 
 rice compiler happen at compile time 
 which means that you know it's not when 
 your program runs these errors have the 
 extra complexity that we need to make 
 sure that your application is not slower 
 when it runs just because we want to 
 produce better error messages let me 
 show you some of the ones that we pack 
 in python's written so for instance if 
 you mistype when you're trying to access 
 a attribute in a module for instance 
 collection i wrote named toppo 
 which is wrong instead of telling you 
 like okay yeah we don't have name topos 
 here 
 now we say oh maybe you mean named apple 
 right okay yeah nice i like that 
 and this also happens with like 
 variables for instance if you try to 
 write this partial black hole which is i 
 never get it right 
 then and you have a variable 
 correctly written and then you mistype 
 it in a variable then instead of telling 
 you yeah this variable doesn't exist um 
 at the end it tells you oh maybe you 
 meant like you know the correct spelling 
 of that nice uh so how how we do that 
 well this has a problem right because 
 like the problem is that if uh 
 well let me show you how we do that and 
 you will understand what the problem is 
 so for instance this is the idea the 
 first thing we did is that um when you 
 when you have an attribute error so for 
 instance in this case i'm trying to 
 access the attribute something on the 
 variable x which doesn't have something 
 and then we have in python 310 we have 
 placed two more special attributes on 
 the attribute error we have placed the 
 name that you're trying to access and 
 the object these two were not available 
 before and therefore the exception 
 itself the attribute knows the name that 
 you are trying to access inside the 
 attribute error and what object you were 
 trying to do so for instance you print 
 name an object the name of the attribute 
 is something here and the object is this 
 x over here okay nice 
 the problem is that at this point you 
 could say oh when we construct the 
 attribute error we can do this this 
 super fancy you know math scientist 
 computation and trying to find what is 
 the attribute that you may be trying to 
 access the problem is that this code is 
 valid like someone may be doing you know 
 an attribute access and then failing the 
 attribute access and the program can 
 keep running nicely so if you do the 
 computation at this stage the program is 
 going to be super slow because now 
 you're paying for computing an error 
 message that is never going to be shown 
 and that is the challenge the challenge 
 is like how do you do these nice errors 
 only when nobody cares about like when 
 people will care about the error and the 
 program won't continue so the way we do 
 that is that um we the the algorithm 
 that we're going to run is a world 
 distance so it's nothing fancy this is 
 as you can see like if it's in a slide 
 you don't need to understand what's 
 going on this is called a living strain 
 distance the actual algorithm that we 
 use in python is not livingston distance 
 it's a modified version uh inspired by 
 gcc and other 
 compilers that have thought about this 
 much more than us and the idea is that 
 you basically have a bunch of words 
 which are the attributes that are in the 
 object then you have the attribute that 
 you're trying to access and then you 
 find which is the one that is more 
 similar based on something called 
 a string distance so you can search this 
 in wikipedia it's not important for this 
 it's just that this computation may be 
 quite heavy 
 um so what we do here this is the basic 
 algorithm then we say okay we initialize 
 the current distance to minus one and 
 then we use the dir function over the 
 object just to give us all the real 
 attributes that is there then we try all 
 possible 
 attributes we calculate the word 
 instance we take the smaller one and 
 then we return this as the suggestion so 
 this is the idea obviously this is made 
 in c the code is insane 
 but you know in python it seems that is 
 even reasonable uh but this is the idea 
 right and the thing is that you know 
 like the problem is that that thing 
 needs to be faster still like if someone 
 is trying to access an attribute uh 
 raising the attributer and then doing 
 something that is legit and the program 
 continues cannot cannot be cannot be 
 slow not only cannot be slow but it 
 cannot be even a bit slower because like 
 people will care a lot i mean i don't 
 know if this is a pattern that people do 
 a lot but like they could perfectly do 
 it and you know like you need to care 
 about what's going on there 
 so the way we do that is that this is 
 sequel so don't freak out this is very 
 small so you don't need to read it but 
 the idea is that there is this function 
 inside interpreter called print 
 exception in c right and this is 
 executed when the exception has reached 
 the top level nobody has catched that 
 exception and we're just going to print 
 it this is the traceback that you 
 normally see so at that stage the 
 interpreter is no more the party has 
 closed you know everyone is going home 
 and then we are printing the exception 
 so at that point we can take a bit more 
 time to you know calculate stuff so if 
 you see this this sequel i have 
 commented on a bunch of things but what 
 it does it gets the exception then it 
 brings the exception file and line so 
 it's telling you where the exception is 
 happening then it's printing the 
 exception messages a bunch of things and 
 then we are adding this extra thing 
 called print exception suggestions and 
 print exception suggestions you know 
 like uh which is that line over there uh 
 so what so this this is basically the 
 code that i showed you except that it's 
 like a lot of secret that i'm going to 
 show but the main idea is that the way 
 we try to make sure that your programs 
 are not slow is that this only runs when 
 the exceptions are being printed nobody 
 has catched them the interpreter is 
 going down so at that stage we can take 
 a bit more time doing this computation 
 we also have like a lot of extra checks 
 like for instance if you have an object 
 that has six million attributes we only 
 take like a bunch of them also like if 
 the strings are very big we don't 
 compare super big strings because that 
 would take like a lot of time so there 
 is a bunch of extra things that we take 
 into account uh so this doesn't take 
 like forever but the idea is that that i 
 want to show you that even if these 
 improvements are quite quite cool um you 
 need to be very careful so they don't 
 impact like everyone right 
 cool so the last thing that i want to 
 show you here is like better trace by 
 comparison 311 which is something that i 
 worked together 
 with amara and baduham but is over there 
 so you can thank him also after the talk 
 and um and this is super cool this is 
 going to land well this lands already in 
 311 and we're going to show you like 
 what this means so in mind i have you 
 this traceback right in this trace but 
 you can see that you know you have a 
 bunch of mathematical computation like 
 you're subtracting two points and then 
 you're adding something else and the 
 error is oh no non-type object has no 
 attribute x so this means that one of 
 these guys over here is none but which 
 one is it oh you don't know but with the 
 new and improved uh um you know granular 
 messages then you get this nice 
 underlining telling you that guy is none 
 so you don't need to touch the 
 background you can just see it from the 
 traceback how cool is that 
 it's cool 
 awesome but wait wait it gets better 
 like what about this other error oh no i 
 have this gigantic json right and i have 
 like many levels of the json like abcdr 
 and then i get this or holy color saying 
 non-type object is not subscriptable 
 which one is none 
 or is this one oh nice you don't need to 
 touch the wires now you can see it it's 
 there 
 awesome and it works with everything 
 like it works with your libraries it 
 works with your code it works with 
 absolutely anything do you have this 
 weird like you know super mathematical 
 computation division by zero which one 
 is zero 
 is that one so it's awesome you can just 
 see it there it's very cool 
 um so how we do this so the way we do 
 this is that uh you know when you write 
 this code the python interpreter writes 
 a bunch of uh by calling instructions 
 and those vertical instructions 
 basically things like okay load this 
 name and access this subscript on the 
 name and a bunch of things so what we do 
 here is that we attach positions from 
 the code to every of these vertical 
 instructions so we know which which 
 chunk of the code generates every of 
 these bytecode instructions 
 you can access this thing in 311 for 
 instance using in the this module you 
 have this function called get 
 instructions and it will bring you a 
 bunch of instructions uh objects and you 
 can see that for instance for this 
 binary subscript which is basically are 
 the square brackets you can have this 
 new attribute called positions and 
 positions tells you like the line number 
 and the n line number because you know 
 you can write the 
 open square bracket in one line and the 
 closest square bracket in another and it 
 will tell you the column offset and the 
 end column offset so you can know 
 exactly which bunch of the code 
 associates with the bicone instruction 
 and then when the exception raises we 
 have this ridiculous amount of code this 
 is very ridiculous you don't need to 
 look at it uh but this takes into 
 account like you know this extracts the 
 the chunk of the code that is raising 
 the exception we'll re-parse that code 
 to be able to see oh actually this looks 
 like a you know a subscript or a binary 
 operation or something that we can also 
 add extra information um 
 we're very hard to make this right uh 
 and and it's very good code that is sql 
 so everybody hates it we have you in 
 like 
 a nice comment over there you can see 
 like the structure so you know like 
 someone could make their phd on this um 
 but the idea is that you know we put a 
 lot of hard work so you know you get all 
 these nice squiggles and we will tell 
 you exactly what's going on and the way 
 we do this then is basically you know uh 
 we have this this chunk of code then we 
 produce like the positions and we know 
 that every white construction uh you 
 know what positions they have uh once we 
 know the the the by the instruction that 
 has raised an error for instance imagine 
 that accessing a subscript because it's 
 known there is no there so this 
 instruction releases an error then we 
 repairs and we can use the ast of the 
 expression and the positions to rematch 
 and understand oh actually what what is 
 failing is a subscript and this is the 
 subscript and the one that is failing is 
 the last on the on the right and we're 
 using that we can actually point exactly 
 where the um where the expression is 
 failing exactly so we can also add this 
 extra contextual 
 different different kind of squiggles 
 pointing to it 
 very cool uh soon on 311. 
 awesome so last thing so how can you 
 help and i think yeah 
 so so as you can see 
 this is quite cool because like uh you 
 know this takes a lot of work but it 
 turns out that a lot of people are very 
 very excited about this uh like i get a 
 lot of people like coming and saying oh 
 man like i i love these newer messages 
 and interestingly what i found is that 
 uh you know we have been working very 
 hard on many other parts of the 
 interpreter like you know making python 
 faster or new modules or new apis or 
 like fixing all bikes but like by far 
 the thing that got most people excited 
 in my experience is this so we are 
 trying to i can tell you that we are 
 trying to put more effort on making sure 
 that you know the interpreter gets 
 smarter telling you errors 
 and hopefully in 3 12 you get even more 
 improvements but it will be good if you 
 give us a hand right so how can you give 
 us a hug cool so the first thing that 
 you can do if you want to get your hands 
 dirty 
 is that you may be able to say okay i 
 want to add a bunch of new syntax errors 
 so i wrote this this big big document in 
 the python developer's guide so it's a 
 dev guide the 
 python door or something like that if 
 you searching google dev guide python 
 you will you will find it and here you 
 have this this nice document called 
 guide to see python parser and you know 
 this is a very technical document so 
 this if this is not your cup of tea you 
 don't need to go through it but this 
 will go through like how the parser 
 works and like how you add new grammar 
 and a bunch of things like you know also 
 if you're doing these talks that there 
 is one every python when someone 
 modifies the language to add like pipe 
 operators or new lambdas or whatever i 
 have seen all of them i have even do one 
 myself obviously uh so you know you can 
 also read this and you will find how the 
 new parser works so you can implement 
 very funky new grammar um but 
 you can actually read it and at the end 
 you will find a section on how we add 
 new error messages 
 and that will explain you like all the 
 problems that you may have like how you 
 can test your own messages how to make 
 sure that your error messages are good 
 etc and etc uh actually a lot of people 
 have done that and for instance in 
 python 311 we have this is just a bunch 
 of them but there is more we have a 
 bunch of people just coming in and 
 saying oh i'm finding you know this this 
 program 
 a lot and this error message is not good 
 so they are actually suggesting or even 
 you know doing themselves like 
 pull requests against the python adding 
 uh new error messages so you know they 
 improve i have to say something here 
 this sounds very exciting and you may 
 have like a 
 nerve that you really really really hate 
 and then you spend like you know 10 
 million hours trying to fix the grammar 
 yeah so it raises a nice error and 
 unfortunately we need to reject your pr 
 the reason is that even if you know we 
 understand it takes a lot of time and 
 it's not easy and then you're very 
 excited 
 it may have side effects or it may be 
 making the parcel slower as you can see 
 as you saw before there is a bunch of 
 things to consider right and you can 
 have like weird surprises that you're 
 not maybe aware of so if you try to do 
 this thing we really really want you to 
 try and you know to help us it's just 
 that come with a clear mind and you know 
 be open because we may need to 
 unfortunately reject your suggestion or 
 modify it or change it and just because 
 these things are quite hard when you 
 consider it in one of the or not if not 
 the most popular language in the world 
 right there's a lot of users of the 
 language and if you get it wrong only 
 once you're going to have all of them 
 are at our doorstep with like tortures 
 and pitchforks 
 and uh and we are the ones that are 
 going to get the pitchforks right not 
 you so just you know we want you to so 
 this is not the turn you to do it it's 
 just that you know come with a bunch of 
 them put some some nice candles and then 
 open the pull request um but yeah that 
 you can do that but if you don't like to 
 get your hands dirty or you don't have 
 like c code or you don't like parsers 
 and grammars something that you can do 
 which is super useful as well is that 
 for instance if you are a teacher or you 
 use python um you teach people python or 
 you interact with python yourself a lot 
 or something like that and then you have 
 errors that you have seen people 
 struggle a lot or you struggle a lot 
 yourself with some particular kind of 
 errors even if is syntax errors or other 
 kind of errors you can open issues on 
 the python backtracker which now is on 
 github so you know you go to see python 
 repo and issues 
 and you can tell us hey i hate this 
 error can you help me and then we will 
 tell you like yes obviously sometimes we 
 will tell you no but um but mostly we 
 try to tell you yes 
 so that will be very useful why because 
 we as python developers uh like 
 developers of the language itself we are 
 quite biased towards like errors like 
 some errors are super super weird but we 
 have seen them so many times that we 
 don't mind them anymore like we know 
 what they mean right so like why are we 
 going to fix them but maybe you don't 
 right or maybe your your students don't 
 or maybe like i don't know uh do you 
 find something super super particularly 
 weird right so so for us it's very 
 difficult to identify and prioritize 
 these errors uh to know which ones need 
 to be fixed before right uh and with 
 your help we can we will be able to do 
 it if you tell us like which ones are 
 the worst um actually many many people 
 have done this and one of the reasons we 
 have prioritized these errors is because 
 people told us um you know that they 
 they are worse 
 so that's that's the whole talk uh so 
 the summary here is like you know peg 
 parsers are cool our messages are cooler 
 uh 311 is going to be 
 incredible if we manage to release it 
 because like if you have followed the 
 um the latest developments is getting a 
 bit difficult to release but we are 
 getting there uh and as you can see we 
 have put a lot of a lot of work to make 
 sure that you know your experience when 
 dealing with errors like when things 
 don't uh 
 don't work anymore is great and i 
 suppose that you know the moral of the 
 story is that if you are doing your phd 
 and then you find a bunch of syntax 
 errors that you cannot solve um you can 
 cry in a corner 
 alternatives you can you know 
 study a lot of python and parsers and 
 grammars and become a core developer and 
 then spend two years trying to 
 improve the parser change the parser one 
 of the biggest languages in the world 
 and then fix the error what about that 
 or you can wait for someone to do it 
 instead of you 
 i hope you have enjoyed the talk and 
 that's it 
 [Applause] 
 okay 
 so we're a bit ahead of the schedule 
 so we have time for plenty of questions 
 so i'd ask people in the room if you 
 have a question to just line up in front 
 of the microphone here 
 and for people online just to let the 
 online 
 organizer know that you have a question 
 so that they can pop it up on the screen 
 yeah go ahead 
 thank you for the talk and for your work 
 i was just wondering if python 312 will 
 write itself 
 well 
 no but like 
 but but python 310 is already writing 
 itself in some ways so for instance uh 
 the the parcel that we have 
 is called so 
 you know it's written is young what not 
 but we don't write the parser actually 
 what we do is something that actually is 
 only happening on research groups and 
 things like that because in the in the 
 wild you don't find this but what we 
 have is a parser generator so we have a 
 program that reads the grammar and then 
 generates a c parser right but turns out 
 that that parser can also read itself 
 and generate itself 
 so so in some ways python is already you 
 know generating itself which is quite 
 cool 
 thanks for requesting 
 do you have any questions online 
 no okay go ahead 
 again thanks for the talk and the work 
 it's great um i was wondering how you do 
 regression testing or how do you judge 
 the effects of a potential new error 
 message because uh to judge the effects 
 of a potential change on correct python 
 code there's a 
 10 million billion lines of correct 
 python code out there you can check but 
 do you have a corpus of incorrect python 
 code you have like a i imagine you have 
 individual tests but do you have a large 
 body of statistically useful incorrect 
 python code you can work from what an 
 excellent question so this is actually a 
 very very very hard thing to to solve we 
 we have things so the reason just just 
 an interaction why the this is a problem 
 so the reason this is a problem is 
 because what is valid python is a very 
 concise well it's not a small like 
 technical is an infinite amount of 
 programs like you can write infinite 
 amount of valid python programs but 
 there is much more constraints that what 
 is not python what is not python by 
 definition is everything else so so it's 
 very difficult to test like this other 
 infinity right like cardinality is a 
 left 6 million so 
 the problem is that we to do that um 
 what you need to test basically is like 
 okay in mind that you have a syntax 
 error that you want to add right and 
 then you know exactly the kind of code 
 that will fail there so what you do is 
 that you start mutating that string 
 slightly to see the syntax error still 
 happens and then you have a manual step 
 when you find like the biggest errors at 
 the beginning so you start to trim it 
 down 
 and then what you do after that is that 
 you analyze the resulting number this is 
 what i do right and we have a small 
 program that does this so you analyze 
 the resulting grammar to know basically 
 to do a bit of graph analysis over what 
 rules are going to be affected by the 
 new one that you are adding so you know 
 exactly how the syntax error may 
 propagate around 
 this is this is very 
 insufficient in most cases because again 
 the amount of invalid python programs is 
 gigantic and unfortunately we try to 
 find a corpus of invalid python programs 
 there is several that we have found in 
 research groups or in stack overflow 
 actually they have collected all the 
 questions in in stack overflow that are 
 about syntax errors but the problem is 
 that most of them are intention errors 
 so yeah or like missing columns so we 
 already know and those are quite easy to 
 do but like the the comma one that is 
 very hard and the problem is that 
 to understand all the ways like that is 
 like when i show you all the different 
 problems to understand all the ways this 
 could go wrong and the suggestion may be 
 incorrect it's quite hard and the only 
 way to do this thing is is trying to do 
 a bunch of graph analysis and trying to 
 find around because there is no way to 
 do fasters for this like because because 
 you cannot automatically check these 
 suggestions make no sense right um so 
 what we do is like a bunch of that and 
 then waiting for users to report oh what 
 a 
 ridiculous suggestion right what we do 
 as well is that the error doesn't say 
 this is wrong what we say is like 
 perhaps you forgot the comma right i 
 mean it's just perhaps right like maybe 
 maybe it's not so you cannot be super 
 angry if you say oh this suggestion is 
 wrong right because we say 
 perhaps 
 so you know that 
 thank you it's a very good question 
 all right i'm just going to check again 
 if there any questions online 
 no okay so please go ahead 
 uh thank you for the talk um i have a 
 question um 
 uh i have i have the feeling that in the 
 past few years couple of years there has 
 been more uh focus on user experiments 
 your experience on exceptions also for 
 example uh pip having better exception 
 messages now uh python 
 um i think uh what is what is your 
 thoughts on that like on when that 
 started to happen or um is it just 
 because for python is it just because of 
 the new uh uh pack parser or is there 
 something some other movement going on 
 that focuses on this ux on uh 
 exceptions right i can absolutely tell 
 you exactly what happened because i so 
 what happened is that someone complained 
 on twitter 
 uh 
 yeah it was uh anthony sotil and he said 
 like it was the error with the like the 
 end of file like you know you forgot to 
 close the parenthesis thing and he's 
 like oh this is horrible no no no no and 
 i say like damn okay let me fix this and 
 then you know i fixed it and i saw it 
 two people and people were incredible 
 and i said okay let's do more of this 
 and it turns out that pradium which is 
 uh the the maintainer that did the 
 improvements on people works on my team 
 and you know i was saying like oh people 
 like this thing so he's like okay let me 
 try that to peep so as you can see like 
 please don't complain on twitter that's 
 not the way to solve problems but like 
 as you can see like a small spark 
 followed by what i think is the most 
 important part a lot of the excitement 
 from users telling us we like this work 
 right like you know the other work that 
 you do is nice but like this is very 
 nice 
 so 
 that's the fuel of open source right 
 like we see our users excited about 
 something and then we put a lot more 
 effort right and then you know like very 
 smart people like what 200 and amar and 
 other people join the effort and we 
 start thinking about okay how could we 
 do more and more and more but yeah you 
 know if you back trace this thing to the 
 beginning it's just some people complain 
 on twitter 
 awesome 
 hi thank you for the talk so a question 
 about um 
 so python is still evolving and 
 the syntax is evolving and new pep gets 
 accepted and that changes the sense of 
 language so how does that affect the 
 work you've been doing and how changes 
 in the language need to be maintained 
 in terms of this right very good 
 question as well so so the the when when 
 we add new grammar in the language like 
 for instance when we add the 
 exception groups or we added 
 the match statements we normally work 
 with i mean the authors are normally 
 core developers in this case or a core 
 developer is the implementer so we work 
 with them to make sure that the new 
 grammar also have error paths like for 
 instance match statements have a bunch 
 of them 
 normally the first implementation 
 because this implementation are quite 
 big already 
 they have a minimal subset of them so 
 just a bunch of the obvious cases and as 
 people use them more and more and we 
 start adding more refine error messages 
 around but ideas that we normally 
 coordinate with the core developers or 
 sometimes it's just us our people are 
 excited about those particular subsets 
 and they say okay this is a very good 
 opportunity because there is little 
 error messages here 
 but there is another interesting case 
 which is that when new peps are added 
 several features that for instance the 
 new peg parser allows this concept of 
 soft keywords which is a 
 maybe a keyword maybe not like much 
 right like you can use much as a 
 variable as an argument but you can also 
 use it as a keyword 
 these are this this is cool because like 
 we don't need to you know forbid 
 everyone using much as a variable name 
 uh and it's a cool technology but the 
 problem is that this makes the parser 
 extremely more tricky around the soft 
 keyword because it means that the person 
 needs to 
 figure out more about that like needs to 
 repair that a bunch of times or maybe 
 like infinite by tracking because he 
 needs to just try everything and then 
 try without the soft keyword so audience 
 of keywords is very tricky and very 
 dangerous and what i have seen is that 
 there is a lot of people thinking that 
 now is three party keywords for everyone 
 um but that is complicated right because 
 like even if it's very exciting because 
 you don't need to add normally the cost 
 of like now people cannot write this 
 thing as a keyword then it turns out 
 that you know having a good analysis of 
 the grammar and impact on our messages 
 is important because adding yourself 
 keywords may invalidate a bunch of other 
 messages around the soft keywords like 
 you saw it in the match statement like 
 the comma error invalidated the match 
 statement right so so it's very tricky 
 to fix 
 and take into account those and the more 
 soft keywords you are the more tricky it 
 becomes so one of the things that we are 
 doing in the steering council and in 
 python dev in general is to be very 
 very careful when you know people 
 propose news of keywords because this 
 this cost needs to be taken into account 
 even if it's i mean you know like people 
 are super excited because now they can 
 propose new syntax but 
 uh this cost is not free on the person 
 and you know like at the end of the day 
 what do you want more you know grammar 
 or better error messages so it turns out 
 that this is a decision that you maybe 
 need to do right and and that's 
 one of the challenges that we have but 
 yeah very good question anyway 
 okay thank you very much uh let's give 
 pablo a warm round of applause and thank 
 him for the talk 
 so for next speaker you want to get set 
 up please 
 um 
 can you 
 come to the stage 
 okay 
 okay everyone we're going to get started 
 with the second presentation 
 so while the speaker sets up let me just 
 introduce justin mayer 
 who is a graduate of the university of 
 california berkeley and holds an mba 
 from the wharton business school 
 he describes himself as a serial 
 entrepreneur investor and advocate for 
 data portability and privacy and today 
 justin will be talking to us about 
 python packaging automation 
 so whenever you're ready the floor is 
 yours 
 all right thanks everyone um my name is 
 justin mayers i was just introduced i am 
 originally from los angeles california 
 but for the last few years i've spent 
 the nicer months in the italian alps 
 where i have been working on a project 
 called fortressa 
 which i think of as the app store for 
 open source 
 essentially the gist of it is that i got 
 tired of a lot of proprietary sas 
 products that 
 didn't have great data portability had 
 some other issues 
 and i see all these great open source 
 projects and decided that i wanted to 
 use more of them so i figured out a way 
 to automate the installation of those 
 and i'm now making it available to other 
 people 
 so if you see a great open source 
 project chances are good that you now 
 have a way to just open uh you know a 
 web panel tap on something have it 
 installed for you so i'm really excited 
 about it if you want to see how it works 
 please reach out i'd be happy to 
 demonstrate it for you 
 so um 
 let's see 
 aside from working on uh for tressa in 
 my spare time i maintained some open 
 source projects such as 
 pelican virtual fish and probably too 
 many others 
 the only way that i can do that and stay 
 sane is to automate some of the steps 
 that have to do with that maintenance 
 which is why i'm here to talk to you 
 today about 
 python packaging automation 
 before we dig into that raise your hand 
 if you've ever thought about publishing 
 a python package but haven't done it 
 okay yeah there's a few 
 how many people 
 are here have published a package to 
 pipi 
 all right a few a few more 
 how many of you sometimes feel that you 
 should publish more frequently than you 
 currently do 
 yeah okay pretty much everyone 
 um this by the way if you're not 
 familiar is the 
 python packaging platypus which is a 
 great little mascot it was introduced a 
 few years ago 
 so 
 one more question 
 or at least two how many folks use 
 poetry to publish 
 your packages 
 okay 
 and how many of you use something other 
 than poetry 
 all right so 
 more than more not than than poetry 
 that's good to know 
 so one question that i would ask is 
 you know why why package something you 
 know we we package our code because we 
 want to share with one another 
 we incorporate open source applications 
 into our 
 libraries and other software in order to 
 speed up our development time and 
 improve the 
 quality of our software 
 you know the average package 
 in the python package index or pi pi 
 relies on two or three dependent 
 packages and then those three 
 can also rely on two or three and so it 
 can have this cascading effect 
 the problem with 
 you know releases is that there are too 
 many steps and none of them are fun all 
 of them are tedious 
 you have to upload 
 update the change log you might have 
 version strings in more than one place 
 that you need to increment 
 you have to then commit and push these 
 changes test build publish 
 usually only a subset of people with 
 commit bits have the ability to publish 
 releases to uh pi pi 
 and sometimes that's you know one or two 
 people sometimes it's just a single 
 person and that can be a really big 
 roadblock to getting releases published 
 this is part of an open source project 
 readme that documents how maintainers 
 can release new versions of this 
 particular project 
 this screenshot shows five steps 
 there are 14 in total 
 and this is totally normal um you know 
 when i publish when in the past when i 
 would prepare and publish releases for 
 pelican 
 my list was longer than 14 steps 
 you know the funny part for this 
 particular project is that its purpose 
 is to automate github releases 
 so even people who are trying to 
 automate things for other people don't 
 always 
 have the ability to do it for themselves 
 so you have this checklist of steps you 
 hope that you get it right 
 you hope that you don't mess it up 
 this can be kind of stressful 
 and so it's easy to defer this 
 this chore it's easy to put it off 
 and then when you put it off and you 
 don't do it then there's this nagging 
 sense of guilt that you have like i 
 really need to 
 publish a release you know there's 
 all these new features that have been 
 added and there was that bug fix and 
 someone overhauled our documentation you 
 know i feel like i'm letting people down 
 and so it's not good for maintainers for 
 those reasons and it's also not good for 
 users because you end up with a slow 
 release cadence 
 bug fixes and new features are sitting 
 there in the main branch but 
 no one's really benefiting from them 
 because they're not in a shipped release 
 you know if the maintainer or the person 
 with the ability to publish releases is 
 on vacation then it can mean that 
 critical bug fixes 
 you know security fixes 
 are not released 
 very quickly 
 there are tools that exist to automate 
 this 
 i've never really found a great one 
 for me 
 so i think that to me the 
 the solution is to take this concept of 
 continuous integration and take it a 
 step further 
 you know we have 
 ci or continuous integration that runs 
 tests when people push code so why not 
 add a couple of extra steps and have 
 this continuous release process that's 
 fully automated 
 so how would that work 
 pull requests 
 in this model 
 can 
 and ideally should include a release 
 file that contains the changes inside 
 and this can have two pieces of 
 information one is 
 how big is this change you know should 
 we increment the version 
 you know major minor or patch depending 
 on how big the perceived changes 
 and then the second one is the 
 description of the change something 
 that's going to be used for the change 
 log 
 when a maintainer reviews this they see 
 okay tests have passed linters have 
 passed 
 the the code itself 
 meets the project standards 
 it's time to merge it 
 the code gets you know the the pr gets 
 merged and then this part of the 
 continuous integration 
 uses the release file to 
 increment the version number based on 
 whether it was major minor or 
 patch and then the 
 information about the change gets added 
 to the change log this gets committed 
 tagged 
 built 
 published 
 all 
 automatically and without any actual 
 manual interaction 
 so with almost zero human input every 
 code contribution results in a new 
 release in a matter of minutes 
 every new feature every bug fix can have 
 its own release without everyone having 
 to remember to 
 package and publish a new version 
 and this way if a bug is found it's now 
 much easier to trace it to a specific 
 release version because in theory you 
 have a new release for every bug fix 
 and you don't have to use this automated 
 system every time you know you can also 
 release new versions manually if you 
 want 
 and that can be something as simple as 
 taking a a new text file writing one 
 line at the top saying major minor or 
 patch second line this is what the 
 changes are 
 you can have bullets if there was a few 
 changes 
 commit push that's it your releases is 
 done you don't have to do any of those 
 aforementioned tedious steps 
 you can edit release files in a pr that 
 someone else has 
 contributed you can say okay 
 actually this is really more of a minor 
 change not really a patch change so i'm 
 going to change that part you know you 
 can tweak the description so you have 
 control over this it's not just 
 something you're entirely leaving up to 
 your contributors 
 but i think for me the best part about 
 this is that you know all contributors 
 get to issue their own releases 
 you know what better way to welcome new 
 contributors 
 than to reward them with a dedicated 
 release 
 composed entirely of their own work 
 there's something about that that i just 
 think is really interesting and cool 
 and part of the spirit of what open 
 source is supposed to be about 
 and i'm not saying that this concept is 
 necessarily right for every single 
 project 
 for some it may not be a good fit if you 
 write a library that's a critical piece 
 of internet infrastructure and you 
 it makes you feel squirrely it makes you 
 feel uncomfortable to know that 
 every time a pr is merged that contains 
 a release file that a new release is 
 getting published 
 sometimes it might be easy to push the 
 merge button and not realize that 
 there's a release file within so 
 depending on your comfort level with 
 this you either need to take a little 
 bit of extra care 
 or decide that you know what i think i'm 
 going to manage this a little bit more 
 manually and perhaps you know compose 
 and push the release file yourself while 
 still getting all of the other benefits 
 of that automation 
 and some people might say well this is 
 going to result in a lot of 
 things in the commit history or in the 
 release history i should say 
 you know we're getting a new version for 
 every little bug fix every little change 
 and you know and that's true if you take 
 it to its logical extreme 
 you could get releases for typos you 
 know when someone fixed a typo 
 not that you have to do that but you 
 could 
 and i would say you know even if you did 
 that would that be so bad you know is 
 that really a big problem but again 
 that's something you have over you know 
 you have control over that 
 so with all of these benefits in mind uh 
 you know i decided that i wanted to fix 
 this for myself uh you know i maintain 
 you know like as i said pelican uh you 
 know virtual fish 
 you know some django plugins 
 and i really wanted the users of my open 
 source projects to have the benefits 
 that i just described 
 so with some help from marco acerno and 
 patrick arminio who work on strawberry 
 which is a great graphql library for 
 python 
 i first added support for circle ci 
 and then travis and then right around 
 that time is when github actions became 
 generally available and i added support 
 for that as well 
 and that is primarily how i use it now 
 the configuration is pretty easy 
 i use poetry for 
 for all of these things so everything 
 you see here is going to be 
 poetry specific 
 this is a pi project file and we're just 
 defining the minimum configuration 
 required in this particular example 
 we're saying this is the name of the 
 project this is the name of the get user 
 that's going to be making the automated 
 commits 
 and this is the email address that that 
 user 
 should 
 email address that should be used for 
 that user 
 this is a little bit more involved 
 example you can see some other 
 configuration options 
 we are saying 
 okay the change log file is not the 
 default it's not 
 changelog.md in the root of the project 
 actually it's in the docs folder and it 
 uses restructured text 
 the change log header is not the 
 expected you know string of equal signs 
 we're using a different header so you 
 can see some of the things that we can 
 configure here including extra version 
 strings 
 this is a legacy this is actually for 
 pelican and it's a 
 it's a legacy project to the extent that 
 it was not 
 published using poetry from the 
 beginning and so there's a little bit of 
 things that i do to support the way it 
 was set up in the beginning 
 and one of the other nice features is 
 that you can append github contributor 
 information to the pull request which 
 we'll see later and so that is enabled 
 in this particular example 
 in terms of the configuration on the 
 ci system side 
 for github actions i've defined a 
 environment called deployment 
 and in that the deployment environment 
 i've defined two environment secrets one 
 is called 
 gh underscore token and the other one is 
 pi pi underscore password 
 and this is to automate the github 
 release and the publication to pi pi 
 respectively 
 the 
 last and 
 arguably most important part of the 
 process is the actual configuration in 
 your ci system 
 this is probably not very legible at 
 this 
 type size and my apologies for that 
 but the gist of it here is you can see 
 here in the um in a github actions 
 workflow that we've got a task or a job 
 called deploy 
 we are saying that if 
 test and lint pass then this should run 
 otherwise don't run it 
 we are also 
 requiring that this runs either on the 
 main branch or in a pull request not 
 generally for other pushes to other 
 branches 
 and then we start going and we are 
 installing some some basic dependencies 
 we're upgrading pip we're installing 
 auto pub itself 
 we're using 
 httpx to make some network requests 
 we're using the github release python 
 package to automate the creation of 
 github releases 
 we're checking to see whether there's a 
 release file i'm using the auto pub 
 check command 
 and if it sees a release file then it 
 knows that okay you know it's uh it's 
 game on we're going to go through the 
 rest of these steps 
 and and publish the rest of um 
 yeah the rest of these steps which is 
 again to summarize check for the 
 presence of the release file increment 
 the version in pi project 
 optionally including other files 
 prepending the new release information 
 to the change log optionally including 
 credit to the contributor 
 build the project the python wheel 
 tarball 
 commit and push these version 
 incremented files 
 create the release on github and to 
 publish the package to pi pi 
 release file as i said very simple two 
 pieces of information you have release 
 type and then either patch minor or 
 major 
 and then a description below that as to 
 what is in this change and that could be 
 a bulleted list it can be a single line 
 whatever you decide you want to be in 
 the change log 
 as this executes in github actions ci 
 you can see here that the tests have 
 passed 
 the 
 linters have passed the docks have been 
 built and only when all of those things 
 complete successfully do we see the 
 deploy job run 
 which in this case also runs 
 successfully 
 and when it does run then we can see the 
 output of 
 that on github side where 
 our git user has 
 used that authentication token 
 to 
 add everything that we want to this 
 release as the assets 
 we get the name of the project we get 
 the new version number 
 and a description of what is in this 
 particular release 
 and each 
 you know contributor as i said gets 
 their gets their own release this one is 
 this one is lucas um this is 
 a description of a change that he made 
 and we also described this was done in 
 pr number one and this is information 
 that was all added there automatically 
 by auto pub 
 and 
 i can't really explain in words to you 
 how satisfying it is to do this 
 compared to the way that i used to do it 
 before 
 it's uh there is a certain 
 magical feeling you know like it doesn't 
 seem like it's uh 
 like it should be possible to just merge 
 a pull request or or just push a single 
 commit and have all of these things done 
 it's like this 
 rube goldberg machine of domino's 
 falling and then it hits the ball and 
 then the ball goes and it when it all 
 works um 
 the way it does it's really incredibly 
 fulfilling 
 so as i said this is currently designed 
 to work with poetry but there are plans 
 to support other workflows so if you use 
 hatch or pdm 
 or some other kind of workflow to 
 publish your python packages 
 please reach out and and let me know 
 because 
 it's with that input that we can improve 
 auto pub and add support for other use 
 cases 
 one of the other things 
 that we would like to do is to list 
 reviewers and committers 
 as well as the pr author so that we can 
 get 
 because we often get you know pull 
 requests that have commits from multiple 
 people 
 another thing that would be really great 
 is to send 
 some type of announcement on twitter 
 after um you know after the new version 
 has been released as a way of you know 
 recognizing and thanking the contributor 
 for the time and effort that they 
 donated to the project 
 and i'd love to take that even a step 
 further and do this for say a release 
 announcement blog post and have that 
 fully automated and published without 
 having to lift a finger 
 so 
 as i said this is incredibly satisfying 
 for me it could be for you if that's 
 something that um that you you know if 
 you want to be able to merge a pr and um 
 you know have 
 the way that you feel about publishing 
 new releases completely changed by all 
 means please reach out let me know 
 i'll um announce on twitter when i've 
 published these slides so if that's 
 something you're interested in follow me 
 and you'll know when they're available 
 if you have any ideas or suggestions 
 please reach out or if you're here at 
 the conference in person just come and 
 chat with me thanks very much for coming 
 [Applause] 
 thanks very much uh any questions in the 
 room 
 yeah please go ahead hi uh so i would 
 like to ask how do you find uh version 
 strings incrementing because i noticed 
 you don't only support you know to set 
 up that pi file that you had there you 
 had other options so how does that work 
 and are any issues with that i'm sorry i 
 think i missed the first part uh how do 
 you find incremental version strings 
 oh how do i find and increment the 
 version strings okay so if it's a 
 poetry project for example 
 that's handled automatically 
 by auto pub by running poetry i forget i 
 think it's poetry version i think is the 
 command i forget the the exact sub 
 command 
 but you run that and then it will handle 
 based on 
 patch major or minor whether to 
 increment you know the patch 
 minor or major version number um and 
 that's again more of a semver philosophy 
 for people that are more into cal calver 
 and calendar versioning that's something 
 that i think we'd like to support as 
 well 
 yeah and then 
 the configuration in the pi project file 
 also allows you to specify other files 
 so 
 we have an example where it's 
 there's a you know a dunder init file 
 that has a version number in it and we 
 just specify the path to that file and 
 then it goes and looks for 
 a key that contains the word version and 
 then does the same 
 incrementing business that it did with 
 the pi project file 
 um hi i just want to say that it really 
 resonated with me and my company 
 actually figured it out with as you said 
 a rube goldberg machine with like 
 jenkins twine and bump version and we 
 wish 
 probably that we heard about your 
 project before but we still have a 
 problem um that probably also resonates 
 with you so we strongly believe in 
 december and we do these releases very 
 often and we treat every patch version 
 as pretty much nothing important change 
 you can always update to it so we pin 
 versions just to miners 
 but then let's say you have your 
 libraries for your company and you don't 
 want maybe to restrict the versions too 
 much uh because you don't want them to 
 the higher level reports to um you want 
 to actually restrict there but then 
 it can be crappy with the libraries that 
 you depend on they may not be so strict 
 with somewhere so what's your maybe um 
 gut feeling what's your advice uh what 
 how strong should the pinning be in the 
 library's level not on the like um 
 final 
 project level 
 what do you think about that sure and 
 that's an excellent question 
 you know i think everyone's going to 
 have a different 
 viewpoint and strategy as it relates to 
 how to treat 
 you know 
 version 
 dependency version specifiers 
 i do not work on projects that are 
 critical pieces of internet 
 infrastructure so 
 i take the yolo approach you know which 
 is i essentially to use a poetry term i 
 don't use carrot 
 uh 
 the little carrot you know 
 specifier that limits you to a certain 
 range i just say greater than or equals 
 to and 
 if something breaks it breaks and i will 
 go and fix it i have that luxury um a 
 lot of people don't have that luxury 
 uh you know hinek who's in the room 
 wrote a really great article called you 
 know semantic versioning will not save 
 you i highly recommend reading it it's a 
 great article it touches many of the 
 things that you're asking about and he 
 has explained this much better than i 
 could do in the time allotted but 
 you know the other thing that i will say 
 quickly is that particularly in the last 
 couple of years i've seen this plague of 
 restrictive upper bounds on version 
 numbers that causes some dependency 
 resolution conflict that i cannot 
 resolve and that ends up getting into 
 like wars between different projects 
 um not my favorite so you know i would 
 say that if you can avoid if you have 
 the luxury of avoiding 
 specifying 
 upper bounds on dependencies then by all 
 means do it other packages and other 
 people who use your software will will 
 thank you 
 and i'm sure that that could cause other 
 issues but as long as you're paying 
 attention hopefully those issues can be 
 worked out relatively quickly 
 thanks justin 
 quick question you mentioned that you 
 generate either minor patch or major 
 version based on the scale of the change 
 uh i'm curious to hear a little bit more 
 about that as it just the amount of 
 lines changed or maybe uh the semantic 
 commit yeah yeah that's not something 
 that is uh detected you know by by 
 autopilot that is something that is 
 specified by the person who's included 
 the release file so if you are making a 
 pull request on a repository 
 you are asked to do your best to come up 
 with 
 your 
 evaluation as to whether or not this is 
 a small bug fix 
 you know have you added some feature 
 that maybe warrants you know 
 incrementing the the minor version 
 is this a you know wildly backwards 
 incompatible you know change that 
 warrants a major version 
 these are things that you're asking your 
 contributors to determine 
 now as a maintainer you have the ability 
 to review that and say okay well i think 
 you've gone too high you've gone too low 
 and i'm going to tweak that before i 
 merge it 
 but ultimately it's up to 
 you know the contributor at some level 
 and then the final arbiter is the 
 maintainer that is doing the merging 
 to make that determination and decide 
 how to increment it 
 right uh any more questions in the room 
 or online 
 hi 
 thanks for your talk um i have one 
 question what happens to the release 
 file after it's been merged 
 it's a good question i forgot to mention 
 that part thank you for asking 
 it is deleted as part of the 
 as part of the process 
 once everything is done the release file 
 leaving it around would cause problems 
 as you can imagine 
 and you certainly don't want to have you 
 know multiple releases happening with 
 the exact same change 
 so it is simply deleted and 
 yeah you can usually tell 
 you know when looking at the repository 
 you know okay there's no release file 
 there so everything is gone as as 
 expected and 
 um i can't really think of any 
 cases where it's been left behind 
 due to some problem it seems to be 
 deleted pretty consistently 
 okay it's time for another question if 
 anyone has one 
 if not then let's thank justin for this 
 excellent talk 
 yeah really great questions everyone 
 well done 
 okay and then uh we'll have one more uh 
 talk this session so the speaker can 
 come up and start setting up if they 
 like 
 shared interests having shared sense of 
 humor with people i've never met um 
 is really really lovely and of course 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 so 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 so 
 [Music] 
 so 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is uh tremendously okay 
 everyone we're going to go for our final 
 talk of the session 
 so our final speaker is disconnected 
 who's a graduate of the university of 
 science and technology in krakow and 
 currently works as a security engineer 
 at trail by of trail of bits so he's 
 going to be talking about cython bugs 
 and risky features so the floor is yours 
 hey i'm disconnected and 
 as you could hear i will be talking 
 about c python bugs 
 so a few words about me i work as a 
 senior security engineer at 12bits uh 
 turtle business company uh where we 
 perform security audits for our 
 customers and also do a lot of security 
 research in blocks of blockchain and 
 cryptography and like application 
 security 
 space i also play capture deflect 
 competitions uh so those are uh security 
 uh competitions where you play as a team 
 and like solve some security challenges 
 and i do a lot of low-level stuff and a 
 little bit of reverse engineering when i 
 have time and i also contribute to some 
 open source projects i also have a blog 
 on the internet but it's not very active 
 yep 
 so a quick question first uh who has 
 ever been on this website 
 raise your hand 
 okay lots of you that's good um so this 
 is the python's back tracker 
 and it looks like this or maybe looked 
 like this because currently it says that 
 you know it migrated to github 
 and it's currently read-only 
 but yeah here are some some recent stats 
 from it well obviously it's closed 
 already so 
 uh the starts are ending when it closed 
 but as you can see there are like maybe 
 around 60 to 80 
 bucks that are being opened opened on 
 each month and 
 sometimes more more of those are closed 
 uh sometimes less i mean in terms of 
 numbers are closed but there are still 
 plenty of bags that are open for like a 
 lot years 
 um so let's go to those backs 
 the first one i want to 
 show you is about the redline module 
 and the the problem is that redline 
 module is loaded in interactive mode in 
 python and this is an issue that was 
 reported in 2011 and it's it also like 
 exists in python two and three 
 um 
 and let's maybe see how it works so 
 uh the problem with with uh redline is 
 that redline is a library that is being 
 used for 
 well reading lines and 
 those you basically read lines whenever 
 you type something in the interpreter 
 right so libra lib read line is a 
 library written in c 
 that is being used by c python whenever 
 you use your interpreter and the problem 
 with it is that 
 if you have something some file like 
 this written in c 
 um 
 where you well include some stuff then 
 you create a function 
 and you well have some content here like 
 that prints some hacked and then does 
 some some fancy stuff 
 and you uh add this attribute 
 constructor here 
 and now if you compile it properly with 
 like into a search library 
 that you'll call leapreadlinesso 
 now if you open python 
 i can maybe also open another console 
 with 
 a netcat 
 oh wait 
 minus l for listen 
 yup so if you now open python after we 
 have compiled this library in c 
 so now you open python interpreter okay 
 it did not work wait why 
 it should have been working 
 oh sorry it shouldn't be read line as so 
 it should be redline so right 
 so now if you open python it basically 
 will execute whatever you had in this 
 constructor function 
 uh in this shared library so 
 when can this actually be a problem uh 
 this can be a problem whenever you are 
 an admin you login into your server and 
 then you go to some uploads directory 
 and you want to for example process some 
 files 
 uh in python interpreter and someone 
 uploaded you this redline so uh library 
 then something like this can uh well 
 trigger and execute 
 and it's 
 likely unwanted uh someone could say 
 it's a feature 
 by the way 
 it's maybe not really well seen here but 
 in this constructor i have done this 
 and this is called a reverse shell 
 so i'm invoking a bash process here so 
 that it will basically spawn bash and 
 forward its std and sdg out 
 to this tcp socket by the way this def 
 tcp is a magic path supported by by bash 
 uh so on the other console i actually 
 have this shell being spawned uh well 
 the the python interpreter connected 
 here and now i can execute some commands 
 so this you know this could be an 
 attacker server on the bottom and on the 
 top it could be the 
 admin server right 
 um 
 yeah so this is this is really weird 
 this shouldn't really work like this 
 uh 
 yeah uh and there is an another catch uh 
 so we can also investigate how this 
 works uh more or less 
 if only i will close it okay i close 
 this 
 okay let me do 
 so you can investigate it using s trace 
 on linux asteroid asteroids is a tool to 
 basically trace system calls on linux so 
 there is this open add system call 
 whenever 
 you know a file is being opened 
 and you can do something like this i 
 need to forward std error into std out 
 because s trace is 
 printing things on std error so if i 
 launch ester is like this it will 
 basically show me all the files that the 
 python interpreter has opened with this 
 open at cisco there are also other 
 ciscos like open but we don't really 
 care about them 
 um but i also want to grab this results 
 uh for 
 uh for looking into 
 dot so so i only want to see whenever it 
 loads like shared objects so dynamically 
 loaded libraries in c 
 so if we do this we can see that this uh 
 redline so is being loaded here right 
 and some other libraries that are 
 standard libraries used by c programs as 
 c python is a c program 
 if i type something in this interpreter 
 and press enter there are much more 
 libraries that are being loaded 
 which means that you know 
 the interpreter first loads some 
 libraries 
 and then it will load even more of them 
 whenever you will actually type 
 something in and press enter 
 so as you can see here are some weird 
 some some a lot of libraries are there 
 right and for example there's this bz2 
 lzma hash leap there should also be like 
 ssl library loaded json library so it 
 turns out that those libraries can also 
 be loaded from the current working 
 directory 
 which means that if we come back to our 
 readline example 
 i can remove this one because this one 
 was really not not really used and 
 rename it to for example json.so it 
 could also be the longer name that we 
 have seen in s trace 
 and now type python3 you know nothing 
 happened right the payload did not get 
 executed i mean the malicious code but 
 if i type something in the interpreter 
 will load the code and now it will 
 also invoke 
 this malicious library 
 uh yeah and 
 so there are a few libraries that works 
 like that like that uh as i said for 
 example the bz2 lzma json ssl 
 um 
 yeah so can we actually mitigate this 
 uh well the answer is yes 
 and we can look over the c python source 
 code for the function that actually 
 imports the redline module it's called 
 pi min import readline and we can see 
 here this pi import import module 
 so this actually also this i think this 
 will also try to load redline.pi i'm not 
 sure uh someone should probably try it 
 uh but the thing is that you know if 
 there is an 
 so library uh that looks for python as a 
 valid shared object then it will load it 
 from current working directory 
 and there are some like if conditions 
 here that you know we can skip this 
 loading of readline module and one of 
 this is this 
 config isolated and that's called an 
 isolate mode in python and if you look 
 over the python documentation or you 
 know python help 
 you will see this 
 minus i 
 where it says that it will run python in 
 isolated mode what it means it means 
 that it will also imply minus e and 
 minus s 
 because there are two separate flags for 
 the two different things but basically 
 this isolate mode 
 uh will never add the current working 
 directory into your sys.path 
 so it might be a good a good idea to 
 actually alias your python interpreter 
 like you know alias python 
 uh python minus i at least for your root 
 user because you never want to 
 compromise the 
 user well others as well of course and 
 now if you do you know uh 
 okay python3 won't really okay so python 
 free 
 do i have an alias for python free now 
 or did it just work because python 3 
 links to python 3 
 let me maybe 
 close this console and try again 
 okay so python 3 oh wait it's executing 
 this palette here so if i do python for 
 free minus i and then type something in 
 nothing happened 
 it didn't really load this library 
 right now 
 and by the way this library should of 
 course be also loaded with python 2 but 
 it doesn't work but if we would change 
 it to 
 read line so and the python now it's 
 loaded in python 2. so this underscore 
 json underscore bc2 only works in python 
 3. 
 but readline so works in both 
 yeah so that's one way to mitigate this 
 but actually there was a full request on 
 on on may 
 uh about fixing this uh and it's already 
 merged 
 but where the hell is merged i mean in 
 which python versions does it is it 
 fixed 
 uh so in github if you go to like the 
 request you then have this like match 
 comment on the bottom you click on this 
 and then you can see the actual versions 
 it's merged in so it's it's merged into 
 3.11 but some like better versions 
 because 3.11 is not released yet 
 so i suppose this will be fixed in 3.11 
 but until then it might be good to use 
 this isolite mode for this 
 okay so let's maybe look at another 
 issue that is there 
 this another issue is called well 
 there's a github sorry the the back 
 tracker issue for this and this is 
 called duplicate and remove code 
 execution in pth files 
 which aka stands more or less for 
 code execution whenever you install a 
 package and then launch a python 
 interpreter and not even import this 
 package 
 and it was reported in 2018 
 and thanks to r2 chairpeal for for this 
 one because he 
 noticed me about this one 
 but what are the pth files files 
 um 
 it turns out there is of course a 
 documentation page for it in the site 
 library or module so the the pdh files 
 are basically path configuration files 
 and you know they can exit in some 
 directories that are mentioned in the 
 documentation and the contents of this 
 file is are additional items 
 to be added to 
 sys.path but that's not everything if 
 you go further it says that you know 
 blank lines and lines beginning with uh 
 with commands are skipped okay 
 but lines starting with import followed 
 by space or tab are 
 executed 
 are executed lines you know starting 
 with import so first it says that the 
 pth files are configuration files where 
 you basically add something to cispath 
 and then it says that you can also 
 execute lines starting with import 
 and there's a note that 
 an executable line in pth file is run at 
 every python startup regardless 
 whether a particular module is actually 
 going to be used so you know you you 
 start python you don't import a module 
 but the pth files are 
 uh the lines that are executable are 
 executed 
 uh 
 there is an explanation why why it's 
 there the primary intended purpose of 
 executable lines is to make the 
 corresponding modules importable because 
 you might you may have some kind of like 
 import hooks or adjust the path 
 environment variable or i mean it may be 
 required for for your module so that's 
 that's the reason why this feature is 
 there but this feature is a bit 
 problematic 
 so if we would like to test this feature 
 uh 
 or a bug or maybe just not a great 
 design 
 we can install this library beep install 
 delivery method it's written by archer 
 by the way and you can see it on github 
 but i would not really recommend you 
 doing this but you know we can do it 
 here 
 um 
 so yeah now i'm on directory upper so 
 there is no this so there is no so the 
 leap read line issue is not there 
 anymore 
 so if i do pip install delivery method 
 uh i'm installing this actors package 
 and now if i type python3 
 you know there is some payload delivered 
 print that is going on here 
 okay so how does this work 
 we can actually see the packages 
 contents if you do pipshow files 
 and the package name 
 and by the way this also executes the 
 payload 
 um and you know the the package is 
 installed in this in this directory and 
 here are all the files that are in this 
 package so there is this aaa underscore 
 delivery method.pth file there so let's 
 look at its contents um 
 yep and if we go to this 
 file it basically does import sys and 
 import delivery method 
 okay so what does import delivery method 
 do because that's the package right 
 so the delivery method pi is also there 
 and it just prints this payload 
 delivered so this is how it works 
 uh but it's a bit more scary because um 
 you know they said that the python lines 
 here are executed 
 if they begin with import so can i do 
 this 
 print something 
 and you know if i save it it should just 
 now work 
 and as you can see i'm i 
 printed asd there in this pth file so 
 it's not really a dot py file 
 but a pth file and some lines of its are 
 executed 
 actually not all of the lines because if 
 i would not start align with import but 
 if i would start it with just print it 
 would not be executed 
 because you know that's also what the 
 documentation said that the line has to 
 start with import 
 uh so if we go to the 
 uh to source code how it works there is 
 this add package function that is being 
 responsible for processing this pth 
 files 
 uh within the site packages directory 
 um 
 and you know it opens the 
 the file and then enumerates over its 
 lines and if the line starts with with 
 command it's just continues but if it 
 starts with import or import tab or 
 import space 
 it will execute design with exec 
 so this is how it works and 
 so 
 you know they said that some some 
 modules may be using it right um and 
 they should use it for they should use 
 the pth files basically to add to 
 cispath or maybe to import something 
 but there's this 
 an unintended 
 feature that you can execute code as 
 well 
 so let's use let's see some packages 
 that actually leverage this feature or 
 maybe a bug so for example the pi test 
 cuff package it does something like this 
 in its pth file uh and you know it's 
 it's it's uh it's a module for pi test 
 to to get code coverage uh from your 
 tests and so it first imports os and cis 
 and then executes some code uh if some 
 like environment variable is there then 
 it will import in it and initialize 
 something 
 uh it seems this is some something 
 related to like sub-process coverage no 
 idea what's what's that for there but 
 yeah 
 another example is the hunter module so 
 hunter is some module that can be used 
 for tracing your python code and it also 
 executes some code uh even simpler right 
 it just executes some some 
 underscore private method from from the 
 from its own 
 module um so can we actually prevent 
 this behavior 
 because it's a bit creepy or scary 
 so there was this type 648 
 that was proposed 
 some time ago 
 and it's actually uh 
 it says that you know extensible 
 customizations of the interpreter at 
 startup they wanted to improv improve 
 this uh this thing 
 uh maybe not necessarily disabled 
 completely but uh definitely like 
 make it better 
 but its status is rejected and 
 it got rejected because it has a limited 
 number of use cases 
 and further complicates the startup 
 sequence 
 okay 
 there there's another 
 way we can do it we can use the isolate 
 mode again here so if i go back here 
 uh i have this 
 uh wait where is this module did i 
 remove it oh i 
 i need an import key right 
 uh okay so this is being executed but if 
 we do python three minus e minus iso 
 isolated mode this is not happening 
 happening anymore 
 um so this is how we can mitigate it 
 but yeah note that this bug is about 
 deprecate and remove code execution in 
 pth files so they don't really want to 
 execute all the code 
 they want the cis path 
 append that feature being there but they 
 also want the import feature being there 
 uh so 
 likely the pth files are going to stay 
 there 
 but they don't want this like any code 
 being executed in there there was also a 
 proposal to skip lines 
 that have you know 
 this not call on i don't remember that 
 yeah 
 character in it but it was not really 
 implemented 
 so we will see how it goes you know it's 
 already four years since it was reported 
 but it's still there 
 the next issue is about socket inet 
 add-on function 
 and it has some parsing issues on some 
 leaps versions 
 and i reported it in 2019 it's still 
 there um 
 but yeah let's see at the documentation 
 for this function so socket in atom is 
 actually like function that is taken 
 from from libsy 
 from the c library 
 and what it does it's it's converts an 
 ipstring ipv4 
 address from you know 
 its string representation to the 32-bit 
 packed binary format so how does this 
 work uh if i do python 3 or item here 
 import socket socket inet aton 
 and do this 
 you will get the binary representation 
 for this ip address 
 there are also more features into it it 
 also accepts strings with less than 
 three dots 
 like you can have an ip address like 
 this 
 and you know it will map 
 in a weird way you can even have this 
 you can even have some fancy number uh 
 like this this is treated as an ip 
 address by the way at some point web 
 browsers also accepted this i'm not sure 
 if they still do 
 uh but yeah it could sometimes allow to 
 like bypass some you know ip validation 
 where ip was validated by just a string 
 yeah and 
 there are some other weird things into 
 it and by the way if you pass in 
 an incorrect ip like this or maybe 
 like this 
 oops 
 why did it work 
 this is not a valid ip address here 
 but it actually worked and 
 you know this is something unwanted 
 especially if you kind of you may expect 
 that if you use this function that it 
 will properly 
 uh like validate your ip address if it's 
 a valid ip address 
 uh but apparently it does not 
 and now imagine such code on production 
 where you are taking the ip string from 
 some requests and then you do an if 
 condition or maybe a try accept 
 uh because well it it throws an 
 error here an exception and you do 
 something like this or a system being 
 blah blah blah 
 so where could such a code appear 
 well maybe in routers and this was 
 actually the case 
 but it was not really in python it was 
 in c like there was a c code that used 
 this function 
 uh and you know if you have something 
 like this or is the system pink plus the 
 ip string 
 then you can bypass the command here and 
 you can execute arbitrary code whenever 
 you pass and malicious ip address 
 and this was found by blasti 
 for whom i also checked this issue in c 
 python 
 so i looked into c python how it uses 
 socket i net atom and by the way it's 
 it's very important that this function 
 is broken only in the glibc 
 implementation 
 uh at least i believe i'm not sure why 
 exactly we are getting here this on mac 
 so maybe it's also in the 
 uh 
 in the llvms implementation as well but 
 for example if you use muscle uh or 
 microelepsy it won't be there i mean 
 this won't really be supported on those 
 weird on those other versions 
 um 
 yeah so there are the differences in 
 lips implementations 
 obviously 
 so how it's used in in python so there 
 was this issue within the ssl.match 
 hostname function in c python 
 where if you did something like this so 
 you want you wanted to match a hostname 
 for a given certificate 
 that should you know match a given ip 
 address 
 uh it was it was matching it 
 so this could actually be a you know a 
 security issue because you may want to 
 do some ip filtering or match the 
 well the certificate's hostname 
 but we didn't found any in a case where 
 it was actually exploitable 
 where someone could actually leverage 
 this and do something malicious 
 but it is already fixed and in this ssl 
 library 
 the the pull request is merged 
 but i also found another case in the 
 request library 
 so i guess everyone knows requests it's 
 library for like sending http requests 
 um but the thing is uh it also has some 
 like utility functions so for example 
 you can find out if a given 
 uh ip address 
 belongs to a given network or 
 and or if it's an ipv4 address and so on 
 and you know it's broken here um 
 as you can see i reported it 
 some time ago but 
 nobody cared and so it's there so maybe 
 don't really use those functions 
 [Music] 
 and 
 another thing i wanted to show you is 
 the script.script 
 function 
 on mac os 
 so this script dot script function uh is 
 basically broken on mac os and we can 
 see it here if we import crypt 
 maybe let's do it in uh 
 in ipython 
 yeah so first of all let's see the 
 documentation string for it so the 
 crypt.grip 
 is supposed to return a string 
 representation 
 uh representing the one-way hash of a 
 password with assault prepended 
 so 
 maybe let's see how it works on linux 
 first 
 [Music] 
 no my payload is still executing here 
 so if i do something like this 
 and just to remember the first argument 
 is the 
 word so a password and then you press in 
 assault which actually 
 uh 
 it uses some some method that you 
 specify uh there 
 yeah so if we execute the script.script 
 like this 
 oops wrong 
 yeah so if we execute it like this we 
 are getting uh 
 the the password hashed 
 we have a given 
 hashing method there's a default one 
 and the salt is prepended here somewhere 
 here 
 so the salt is 
 this is actually the salt whatever is 
 between the two dollars 
 and you know the salt is randomized and 
 then you have the hash 
 of that password with this salt with a 
 given method and by the way you can find 
 out this method with like man five crypt 
 and you can look for like dollar six for 
 example and the large six 
 corresponds to shaft 512 crypt so chatu 
 with 500 bit output 
 and yeah there's the format as well for 
 this but if we execute it in macos 
 what happens 
 um 
 it gives us some weird output 
 um 
 and you know we don't really see any an 
 assault being prepared here even no 
 method so what is going on in here the 
 thing is that the script module uh 
 wait i need to do two asterisks here or 
 not 
 yep 
 it has this dot methods member which 
 tells you what are the crypt methods 
 that you are supporting 
 and on mac os there is only one method 
 here 
 on 
 uh 
 on linux you will have much more of them 
 so as you can see it's basically using a 
 different default method and you can't 
 even use any other method that is there 
 so on linux you can do something like uh 
 abc and then probably crypt method 
 crypt i believe and you will get the 
 same output as on mac os right uh 
 so this is a different crypt method i 
 don't really really remember which one 
 is that but it's probably not very 
 secure if it you know uses only this 
 amount of bytes 
 uh for for hashing right 
 it's probably brew table uh like you can 
 brute force it uh but on macos you can't 
 really do 
 you know other methods because you don't 
 have them supported so if you try to 
 some do something like uh wait what was 
 the name 
 like this 
 it 
 oh wait it actually worked 
 oh so this is even more interesting 
 because 
 it 
 worked only partially because as you can 
 see the output is still truncated here 
 so it's even more broken because you are 
 getting now something that's it's 
 supposed to be hashed 
 but you know 
 you're only seeing part of it of itself 
 and the salt is uh 
 it's for some reason constant for a 
 given input 
 or maybe it's 
 wait maybe it's still using the old 
 method i'm not sure 
 but it's basically broken so you should 
 really not use it uh if you want your 
 code to be you know cross-platform 
 um 
 and uh if you go to the crypt function 
 script libraries uh documentation it 
 says that you know it's deprecated since 
 3.11 
 so uh 
 there there is this pep 594 that details 
 some alternatives but you should 
 definitely use an alternative which is 
 using harshly module instead 
 uh 
 because why would you use the crypt 
 method which is broken basically 
 and that's all that i wanted to show you 
 so for a 
 quick summary uh be careful whenever you 
 are using you know python invoking 
 python interpreter in random directories 
 where there may be some files that you 
 are not aware of what are those 
 because there is this library library 
 line so and some other sos or shared 
 objects that may be loaded 
 i haven't really checked whether this is 
 also about like mac os or windows but i 
 suppose suppose it's probably yes 
 uh but it's going to be fixed in python 
 3.11 and you can also use isolate mode 
 so it may be good to do this alias here 
 um then there's also this pth files so 
 path configuration files uh that may 
 execute code on each python startup so 
 isolate mode helps as well here but 
 other than that then there is no 
 solution yet 
 then there's this socket init atom that 
 you should not really use so if you want 
 to parse an ip address you should 
 probably use some ip address module 
 instead of just a pure lipstick function 
 because even though you know 
 you may want to use something more low 
 level and probably faster 
 it doesn't really work properly as you 
 can see or 
 it's supposed to work properly because 
 like the documentation states that uh 
 those functions are like just 
 dispatching the calls into leap c and 
 whatever leaps if does is you know 
 supposedly the correct 
 solution 
 uh but 
 i wouldn't say so 
 um and you know the request module has 
 distilled this back when when they use 
 this socket 
 inaudib and there is the script script 
 being broken on mac os 
 uh and if you want to like see the 
 slides from the presentation there is 
 the link at the bottom that you can use 
 and it has also that the code for demos 
 so if you have any questions 
 i'm happy to answer them thank you 
 [Applause] 
 okay 
 please line up if you have questions 
 is that anyone online with a question 
 thank you for your talk i definitely 
 learned a few things 
 i wanted to ask about the first bug uh 
 is it because it's on the python path or 
 is it because in the current working 
 directory 
 yeah so it's a great uh question uh we 
 can actually go to the pull request that 
 fixes it because that's probably the 
 easiest 
 wait i didn't link it here so we can 
 probably do something like uh oh i have 
 it or a link to it here 
 um 
 yeah so if we go to how it's how it's 
 being fixed 
 uh yeah i need to make it larger of 
 course 
 they basically moved to this import for 
 the 
 for they basically moved this call to pi 
 main import gridline 
 to an earlier place uh in the code 
 and you know this is because 
 here i i believe here or maybe some 
 somewhere between those two uh 
 they are adding the current working 
 directory to the syspath so yes indeed 
 this is 
 exactly it 
 uh that's why the module is imported 
 because the current working directory is 
 on the syspath whenever it's being 
 imported and this 
 you know they made this unintended 
 mistake uh that allowed for this 
 behavior 
 but that that probably means that i 
 could simplify like the code by just 
 like putting some python there i don't 
 need to compile c extension probably i'm 
 not sure we can actually check this out 
 very fast 
 i think it didn't work back then but 
 wait did i name it so 
 sorry guys 
 uh yeah so this is how it looks and 
 yeah it actually it actually executed 
 but now it's 
 now it gives you this attribute error 
 here 
 that you broke the redline module 
 so my question is if they just move the 
 importing the red line only does it fix 
 the 
 underscore json and other 
 such libraries 
 as well 
 that's a good question and you know if i 
 would have pi end ear here i would 
 install 3.11 and test it out 
 but i don't 
 uh i could 
 probably maybe do something like 
 let's see what's the network here 
 if i have network 
 i have network but it is probably too 
 slow 
 oh wait i need to stand 
 this will take a bit but i can do it 
 maybe 
 like this 
 oh i don't have 
 okay different machine 
 oh maybe there is no image for python 
 3.11 yes 
 maybe 
 well we can see it in docker hub 
 if they have it here 
 because that would be the fastest way to 
 check it out 
 there is some python 3.11 
 you should always be right 
 uh 
 yeah i miss python right thank you 
 i probably need to launch sh or maybe 
 just python because maybe this i will 
 see if this image has bash inside 
 they also don't have a vm there so i 
 would need to do something like 
 this in order to test it 
 wait i well i would actually need to 
 compile something 
 let's see if we can do it very fast 
 right gcc is installed there 
 so now we need this maybe install vm 
 again 
 if there is another question i can maybe 
 answer one first one but uh in the 
 meantime 
 because 
 yeah i was wondering if you use 
 minus i 
 is it python still very useful can you 
 use 
 virtual environment still or 
 that's a good question um we can see 
 i should have an environment here yeah 
 it is there in this environment i can 
 import phone whatever that is by the way 
 so if i do python minus i and import 
 phone 
 it still works 
 the thing is that you won't be able to 
 import whatever you have here so if i 
 have a you know module like a 
 here in my you know current working 
 directory i can't really import it and 
 normally i would be able to 
 so that's the 
 issue here that is happening 
 [Music] 
 yeah so coming back to this 
 sorry 
 i am in docker 
 this this this shows me that i am in the 
 docker container 
 uh sorry it's not supposed to be leap c 
 it's supposed to be json or so 
 ah so maybe it's fixed 
 maybe because i don't know 
 oh wait uh yeah we have to write 
 something for jason so it seems it's 
 probably fixed 
 uh 
 yeah you know there are only one python 
 here so it seems it's fixed 
 but you never know because you know this 
 behavior is 
 hard to detect basically 
 uh maybe if has traced well that's maybe 
 not as trace it here 
 um 
 yep any more questions 
 any questions online 
 no 
 right 
 anyone in the room still have anything 
 they'd like to ask 
 or any comments 
 well if not let's thank disconnected for 
 this fantastic talk 
 here 
 and i believe that's the end of this 
 session so thank you very much for your 
 attention and i think if you have any 
 more questions for any of the speakers 
 you can find them around today 
 in one word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 [Music] 
 [Music] 
 transcode is a hackday centered on the 
 transit non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 um 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is uh tremendously important 
 because it gives us 
 a space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends with family but we're 
 in a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 um is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how imnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 perfect 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun open minded and transparent 
 connections 
 keep it simple 
 [Music] 
 um 
 [Music] 
 um 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because it gives us a space to 
 be among our those that are like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i've really loved about today 
 is meeting people of sort of different 
 ages different life stages 
 and in my personal life i've got a lot 
 of trans friends with family but we're 
 in a little bit of a bubble and just 
 being able to geek about geek out about 
 sort of shared interests having shared 
 sense of humor with people i've never 
 met 
 is really really lovely and of course 
 getting to nerd out of our code 
 um nitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive 
 rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because 
 it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here and i think it's also 
 important because it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends with family but we're 
 in a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 [Music] 
 transcode is a hecta centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build 
 community feel a little bit less alone 
 so transcode is tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd out of our code 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 perfect 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 um 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because it gives us a space to 
 be among our those that are like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd out of our code 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 so 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 so 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is a tremendously important 
 because 
 it gives us 
 a space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here and i think it's also 
 important because it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually take 
 the next step and come out and be part 
 of this wonderful community that is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages and in my personal 
 life i've got a lot of trans friends 
 with family but we're in a little bit of 
 a bubble and just being able to geek 
 about geek out about sort of shared 
 interests having a shared sense of humor 
 with people i've never met 
 is really really lovely and of course 
 getting to nerd 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose ready to find yours 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections keep it simple 
 [Music] 
 so 
 [Music] 
 so 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build 
 community and feel a little bit less 
 alone so transcode is tremendously 
 important because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd out of our code 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits find out how umitza 
 can give you complete control and 
 insight across your technology 
 portfolios book a live demo today at 
 umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 curve 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 um 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because 
 it gives us 
 a space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends with family but we're 
 in a little bit of a bubble and just 
 being able to geek about geek out about 
 sort of shared interests having a shared 
 sense of humor with people i've never 
 met 
 is really really lovely and of course 
 getting to nerd 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 so 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 mhm 
 so 
 [Music] 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here and i think it's also 
 important because it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages and in my personal 
 life i've got a lot of trans friends and 
 family but we're in a little bit of a 
 bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having a shared sense of humor with 
 people i've never met 
 is really really lovely and of course 
 getting to nerd 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections keep it simple 
 [Music] 
 so 
 [Music] 
 [Music] 
 transcode is a heck day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is uh 
 tremendously important because it gives 
 us a 
 space to be among our those that are 
 like us 
 which in my case is very rare so i 
 really appreciate the opportunity to 
 meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 uh something i've really loved about 
 today is meeting people of sort of 
 different ages different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits find out how umitza 
 can give you complete control and 
 insight across your technology 
 portfolios book a live demo today at 
 umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 okay 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 so 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because it gives us a space to 
 be among our those that are like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends with family but we're 
 in a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd out of our code 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 so 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 um 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages and in my personal 
 life i've got a lot of trans friends and 
 family but we're in a little bit of a 
 bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd out of our code 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 what does channel mean to you in one 
 word people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 transcode is a heck day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is uh 
 tremendously important because 
 it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare so i 
 really appreciate the opportunity to 
 meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 the trans community 
 something i've really loved about today 
 is meeting people of sort of different 
 ages different life stages 
 and in my personal life i've got a lot 
 of trans friends with family but we're 
 in a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd out of our code 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 perfect 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 [Music] 
 do 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because it gives us a space to 
 be among our those that are like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd out of our code 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 so 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is uh 
 tremendously important because 
 it gives us 
 a space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble and just being 
 able to geek about geek out about sort 
 of shared interests having a shared 
 sense of humor with people i've never 
 met 
 is really really lovely and of course 
 getting to nerd 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 so 
 [Music] 
 transcode is 
 [Music] 
 so transcode is tremendously important 
 because it gives us 
 a space to be among our those who are 
 like us 
 which in my 
 come out to see that there is a safe 
 space for them so that they will 
 maybe eventually 
 take the next step 
 uh 
 [Music] 
 is 
 [Music] 
 five key benefits 
 find 
 [Music] 
 out today.com 
 [Music] 
 so 
 [Music] 
 bloomberg the success of our business 
 expert relies to answer the world's most 
 complex questions 
 [Music] 
 um 
 connections 
 [Music] 
 so 
 do 
 do 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because 
 it gives us 
 a space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble and just being 
 able to geek about geek out about sort 
 of shared interests having shared sense 
 of humor with people i've never met 
 is really really lovely and of course 
 getting to nerd 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitsa.com 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive brother 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 hello everybody 
 uh first day of europe python 
 post lunch how are we all doing 
 yeah excellent 
 all right cool yeah let's keep this 
 postland energy up 
 so this is the 
 c python uh developers discussion i'm 
 going to hand off to lucas who's going 
 to lead the panel discussion 
 sir 
 hi there uh so change of plans like it 
 turns out this this um slot is after 
 lunch but before coffee so we're gonna 
 be all asleep so it'll be too boring for 
 us to talk about python so instead we're 
 gonna be doing like a piano competition 
 between those people here 
 um no like there's going to be a 
 court of panel uh i'm mukash i'm the 
 core developer in residence also called 
 the uh janitor of the core team uh which 
 is why i'm just talking asking questions 
 they're going to be answering uh we have 
 with us 
 steve dower mark shannon pablo galino 
 salgado batu hantaskaya kenjin and eric 
 katrial um 
 the thing is this like i would like you 
 to be involved in this panel we're not 
 going to talk amongst each other what i 
 would like you to do is just ask 
 questions which you can do here and if 
 you're watching this remotely where's 
 the camera here 
 you can also ask questions so do 
 and if you do like we're going to pass 
 them on to the team so they can answer 
 and before you start lining up like let 
 me just warm up 
 the thing by just asking a question to 
 everybody here 
 hi 
 can you tell us something about yourself 
 and the area of python that you are 
 well responsible for 
 sure my name is steve dower i'm 
 originally from australia but i live in 
 scotland these days because it's so 
 awesome there and i love it um within 
 python i mostly focus on windows related 
 things and i'm also really um yeah 
 trying to try to spend more time 
 carrying for the security side of things 
 and also in bedding 
 okay i'm mark shannon i live in the uk i 
 was born in uk as well so i haven't 
 moved very far at all 
 uh i'm the tech lead of the faster c 
 python team so making python faster 
 i'm pablo alindo 
 i come from spain i live in the uk now 
 i'm released my year of 310 311 i'm also 
 in the student council for 
 these past two years 
 and i work mainly on the parser and the 
 dc out of the compiler as well 
 yeah my name is botswan i come from the 
 southern part of the turkey 
 i mainly work on the parser and the 
 python compiler 
 as well as some other libraries like asd 
 and tokenize and such 
 hi i'm ken 
 i'm from singapore and i work on typing 
 and i also help make python faster 
 hi i'm eric cottrell i'm based in london 
 i 
 i work on an interpreter i implemented 
 exception groups and accept staff for 
 311 and then worked on a number of other 
 projects related to exceptions 
 and 
 recently i joined the fastest c python 
 team in microsoft so i'm working with 
 mike shannon a lot 
 all right cool ah nice to meet you all 
 the mic is there if you do uh have 
 questions to ask us um if you don't so 
 far um i do have one for you like do you 
 remember your first contribution and 
 when you started contributing to python 
 oh first contribution i remember my 
 first bug report because 
 uh just because it got fixed so quickly 
 by this guy named benjamin peterson 
 and it was years and years ago which 
 probably meant he was about six at the 
 time i think but it was definitely him 
 that fixed it but i i was just really 
 impressed with like 
 a project that that i had 
 downloaded and was using for free i was 
 and found something that didn't quite 
 work i posted the details and about six 
 hours later 
 the this person who i didn't know at 
 that point it's like it was just a name 
 came up and said yeah this is fixed and 
 eventually i met him years later i'm 
 like aren't you still in high school 
 yeah yeah he was but i think my first 
 first contribution 
 uh i came into this weird because i kind 
 of came in like 
 i i you know i already work at microsoft 
 i already know windows well can i help 
 with the installer 
 and about 
 two days after i kind of suggested that 
 the person who maintained the installer 
 at that point said i i need to step back 
 from this 
 and so everyone kind of found me again 
 as like yes the job's yours go for it 
 um 
 and yeah the rest is rest is a lot of 
 work i mean history rest is history 
 mark 
 uh i don't remember my first 
 contribution but i do remember my first 
 bug report like steve uh i think it was 
 to do with edition 
 now in python 
 the way edition works is you get the 
 dunder ad and then there's a dunder r ad 
 and i remember there was something wrong 
 with that but i can't remember what the 
 what actually it was i think was mark 
 dickinson fixed it and again i was 
 impressed with how fast it was fixed 
 uh first contribution i actually looked 
 this up recently and i've forgotten 
 again 
 memory leaks 
 [Laughter] 
 i think my first contribution was some 
 some documentation thing but i i was 
 checking the other day and i think i 
 have the dubious honor to be the core 
 developer that broke all the billboards 
 uh in the least amount of pr's 
 my my third my third coming is merchants 
 in python broke everything and my fourth 
 fix everything so 
 it's fine 
 add one oh yeah i made like a couple 
 feature suggestions before i started 
 contributing i never like you know 
 made that suggestions a reality because 
 they were like dumb stuff but my first 
 contribution was something around 
 which is not deprecated but i made some 
 like tiny change in there 
 ken 
 my first contribution was in 
 pickle but that pr was never merged even 
 till today so i kind of gave up 
 i gave up on that part of c python um i 
 later found 
 an undocumented part of c python that 
 people wanted documentation being 
 wanted someone to write documentation 
 for so i'm not sure you've heard about 
 it it's pep 604 union type syntax um 
 basically means in typing you can have a 
 union by saying typing.union and then 
 the types in 3.10 you can say 
 the type then have the pipe operator 
 to 
 say you want to create a union and i 
 wrote the documentation for that as my 
 actual first contribution 
 eric 
 my 
 the first time i checked out 
 the python source code i was working at 
 bank of america 
 and i was maintaining a we had a system 
 that um a huge system written in python 
 with extensions and so on we were 
 upgrading it from three seven to three 
 eight and one of our unit tests sig 
 faulted 
 and when i looked at that test there was 
 a comment there saying that 
 that test 
 tests or some bug that existed in python 
 2.6 
 so that that's some case that used to 
 crash in 2.6 and 3.8 it was crashing as 
 well and we had a test and 
 the c python um 
 test tweet didn't so i i reported that 
 there's been a regression there 
 and 
 so i got a 
 a checkout to kind of get bisect and 
 find out 
 which commit it was and it was a change 
 in in the garbage collectors trash can 
 mechanism that 
 brought back 
 an old an old bug if you have a a very 
 very long linked list and then you kind 
 of decorate the first item then the 
 whole list needs to be decreased so 
 there's something that makes sure that 
 the garbage collector doesn't recurse 
 too deeply 
 and there was a bug there 
 all right um so now let's start answers 
 from the other side of the chair of the 
 table uh so like back then like did you 
 already think about like oh like i'm 
 gonna be contributing more than just 
 this one thing or like you know like how 
 did it how did it pass that you're a 
 core developer now 
 how did it happen 
 so 
 oh yes let's start from this end of the 
 table 
 i i i was i was just trying to get us on 
 3 8 um and then actually my manager at 
 the time said you know what 
 you know you got in touch you you're 
 talking to them so why don't you spend a 
 day a week working on python 
 this was during lockdown 
 we were working at home and it was all 
 fine 
 um and so he said it there a week he 
 didn't say which day 
 every day is a day you know 
 it's very confusing in lockdown it's 
 like you know groundhog day so every day 
 i 
 i think it's my python day 
 and um 
 long story short i work for microsoft 
 full time working on 
 python yeah 
 cool can 
 yeah so 
 at the start 
 because i was working on typing 
 i was noticed by guido and he decided to 
 start mentoring me 
 later on i decided to branch out to 
 other areas of c python and fortunately 
 enough 
 pablo started mentoring me also 
 so that's how i eventually became a call 
 developer 
 yeah 
 so i was like really enjoying playing 
 with python internals you know at that 
 time and then i started sending a few 
 pr's to lip23 asd and that sort of stuff 
 it it went very slowly 
 and you know i was doing like very low 
 amount of prs you know just 
 picking stuff 
 up for myself or just checking up the 
 buck tracker and one day i see like an 
 email in python though from pablo on asd 
 on parse you know i'm going to add this 
 what do you think and i sent him an 
 email okay can can we work this on like 
 can we work together on this and he said 
 yes and then we started like and 
 we we had like an informal 
 mentorship which evolved like a formal 
 mentorship and that led me to become a 
 core developer 
 thanks pablo 
 hello i see after i reached the pinnacle 
 of my career breaking everything i said 
 wow breaking things is cool 
 how many things i can break um i i think 
 actually at that time 
 like when actually i broke everything i 
 was talking with victor stinner he saw 
 another developer um 
 and he actually says 
 you're good at breaking things what 
 about if i mentor you do not do that and 
 and i say oh that would be very good and 
 you know he's french i know spaniard so 
 apparently we we go together 
 um and yeah it's been been 
 quite a ride 
 yeah mark 
 uh 
 well i was working on i actually did a 
 phd in um implementation of virtual 
 machines for dynamic languages so 
 working on c python or 
 ruby or something kind of was a 
 natural follow-on uh and python was just 
 the best choice 
 it's the best language and it's also 
 most interesting and challenging to 
 optimize so all around the best option 
 oh steve yeah yeah like i said i had 
 this this wild idea that i could make 
 one contribution and improve something 
 and then walk away and it would just be 
 better um and it turns out that no 
 you're not allowed to walk away 
 it's yours and there's always more ways 
 to keep making making things better so i 
 you know i didn't intend to kind of find 
 a full-time commitment but but i found 
 it and as long as there's more to do 
 then i'm you know i mean 
 yeah very cool we have a question from 
 the audience 
 hi i'm jolt um let me turn the heat up a 
 little bit and ask this question 
 so what do you think of auto formatters 
 and when and if they see python 
 can i break them 
 i actually did 
 he knows it yeah yeah go ahead 
 i mean 
 i don't want to answer the question 
 necessarily 
 oh you already started so 
 how much hate can i take 
 a lot look at the room do you like black 
 i break it 
 yeah 
 there are some fans nice 
 it's true like i mean out of the joke 
 like when we um like when when lysandres 
 guido and myself wrote the new pack 
 parser 
 one unintended consequence is that we 
 break black because 
 the technology that black was using and 
 many other tools was based on the old 
 parser and in the new parser we can do 
 all these funky things 
 um 
 and uh yeah but then but duhan found how 
 to do a bunch of hacks 
 and now black survives with lollipop 
 sticks and glue 
 and 
 yeah at least until 3 12 and then we'll 
 see what you come up with 
 more lollipop sticks 
 but it works i mean who cares how 
 how it works right so pablo broke up an 
 auto format like anybody here that like 
 you know has strong opinions on other 
 formatters besides me 
 i i love 
 having a formatter that doesn't lead 
 so so within microsoft where i work i i 
 spend a lot of time trying to help a lot 
 of teams successfully use python and for 
 a long time the first question they're 
 all like 
 which rules in in you know other linters 
 should i enable to help us get our style 
 right and it's it's actually really nice 
 to just be able to say just use black 
 and and like all of these arguments and 
 debates just no longer exist and i'm not 
 stuck maintaining like a 300 page long 
 style guide 
 so i like it from that point of view 
 any counter argument but 
 another country argument but like i was 
 going to give an example uh so when i 
 like write like i don't know something 
 bigger than like 100 lines of code in c 
 python i just put it to another file 
 format it with black and then paste it 
 back i don't know 
 because it is the easier way and it 
 looks good so i i personally would love 
 to have black but you know there are a 
 lot of other challenges so yeah 
 i'm going to say that 
 yeah so sorry like bad audience for for 
 actually turning the heat on this 
 particular question but we have another 
 question so so another try i was 
 actually wondering if you would be 
 discussing black for c code 
 given that most of python obviously 
 python's written in c but my question is 
 nevertheless so first and foremost thank 
 you for your contributions 
 uh i'm thinking about 
 getting out of the python ecosystem and 
 the packaging problem let's say 
 and say embedding 
 and that's 
 in the industry a solved problem with 
 containers on the server side let's say 
 we can solve it easily when we talk 
 about deploying a python application to 
 common users 
 on the desktop or mobile you'll be 
 talking about that tomorrow 
 the challenge is i think it's still open 
 and nowadays if i'm not mistaken 
 we are distributing uh an embeddable uh 
 see python distribution for windows only 
 uh if i'm not mistaken it does not 
 include the central library so it 
 requires some effort from packages 
 what about 
 mac 
 what about linux i know these are 
 different technical challenges they're 
 more like 
 building and linking challenges and 
 packaging issues more than the core 
 language 
 but they're as important as the language 
 itself if we can't 
 deploy uh software to end users and of 
 course the future is mobile so the 
 question stands so 
 how can we reach a deployable embeddable 
 out of the python ecosystem because end 
 users don't care uh the about the 
 technology that the software is built on 
 okay 
 anybody wants to take this 
 um well i mean the web assembly work is 
 kind of key here i think 
 especially for if it's mainly ui stuff 
 then you know we're walking at human 
 speed and the performance hit you get 
 from the web assembly translation is is 
 not really an issue 
 and then you just bundle it with the you 
 know like any as you'd bundle the 
 javascript app for the 
 for the device uh if performance is an 
 issue though then then yeah 
 those are problems 
 yeah i mean as as the person who put 
 together the embeddable district for 
 windows it was possible because of the 
 way windows does its binaries and and 
 does kind of 
 uh how it finds the the other binaries 
 at runtime and it's a system that just 
 doesn't transfer to mac and linux so so 
 yeah i did it for windows because that's 
 my area and it was easy and i knew how 
 to do it and i kind of said well you 
 know the mac and linux experts can 
 figure it out over there and and some 
 people have some people have so there's 
 a project out there that's um was it 
 static python or python static builds or 
 something there's a couple of attempts 
 out there to make 
 relocatable python builds the challenge 
 is it's not just in python at that point 
 it's pulling in more dependencies and 
 you get a bigger thing but there's 
 definitely work going on for that um but 
 yeah as mark says i think the the web 
 assembly and the fact that that largely 
 runs on already 
 designed to be portable 
 uh machines 
 means we can 
 kind of once go through cpython and say 
 well guess what subprocess is no longer 
 available everywhere 
 because we support webassembly now so 
 you can't assume that you can start 
 another process and run it 
 and once we actually go through and do 
 that cleanup then it becomes a lot 
 easier to to make kind of the more core 
 pieces more portable 
 because if you've ever tried to write 
 code that launches a sub process that 
 does spawn or exec 
 across all three platforms you've failed 
 uh if you have succeeded come and find 
 me 
 but but 
 probably not 
 i think one of the other challenges that 
 that you will find and 
 it's quite 
 like we are absorbing it into c python 
 because like okay it's python but like 
 compared to other languages that should 
 have this support like lua for instance 
 this is one of the examples that people 
 bring like look it's super easy to 
 invite like see python is playing very 
 much deeper into their ecosystems for 
 instance cheryl c extensions are cell 
 objects and now you have to play with 
 the rules of l files in linux and mac os 
 module files and whatever windows does 
 and the thing is that 
 those have 
 much bigger constraints like for 
 instance 
 you cannot just load a share object from 
 from the same file so you will never be 
 able to have at least in vanilla libsy 
 linux and single file that is your 
 application that is what a lot of people 
 will want because you cannot just say oh 
 my extensions live inside myself and i 
 will load from memory right that cannot 
 be done um like google does this but 
 because they fork leap c and they have 
 their own funky um 
 you know deal open from memory whatever 
 but normally you cannot do that right in 
 a portable version and this is as a 
 consequence that we just expose more 
 stuff and we are much more flexible so 
 um and and i think the other 
 applications that you were mentioning is 
 pi installer and bigware has some 
 briefcase thing yeah 
 by has had some tooling for it um 
 there's definitely because of some 
 gregory um 
 [Music] 
 gregory saw that's it has the the 
 project i mean they were 
 like 
 relatively well i think 
 they do work well but it requires kind 
 of owning your entire application stack 
 you take responsibility for a lot more 
 um i would definitely say if that's an 
 area that you're interested in making 
 work well across platforms check out 
 blender check out obs studio because 
 they do this already and they are 
 multi-platform 
 uh to varying extents 
 uh you know in the feature set but 
 people can do it but it is considerably 
 more work than than simply saying you 
 must have already installed python so we 
 can use it 
 all right thanks another question from 
 the audience please 
 hi my name is pavel um 
 do you think python is going in the 
 right direction 
 in terms of like new features being 
 added 
 and 
 regardless of that what should be the 
 direction for python 
 who wants to take this 
 student council member i mean it would 
 be weird if i say no right 
 i mean i think it's going in the right 
 direction in the sense that 
 you need to understand there is no a 
 direction 
 because python right now being one of 
 the most popular languages by certain 
 ways of looking at this 
 has a super different use base right and 
 what you may think is important and nice 
 and small and super my language fits in 
 my head or whatever like you may have 
 like another big user group that doesn't 
 think like that right like for instance 
 the people that are very excited about 
 typing normally don't play well with the 
 people that are teaching python because 
 like you know they 
 normally look at types and say why is 
 this right but it turns out that um 
 those people then go to other places and 
 then they change their views and now 
 they think like and typing is just an 
 example here that it's awesome and they 
 want to learn it right so so there is 
 many different 
 user groups and there is many different 
 needs and um for us we cannot just say 
 oh the direction is this one and this is 
 the one that we're going to follow like 
 we need to take into account every time 
 we take decisions that normally affect 
 the whole language 
 all everyone and it's always a difficult 
 balance and 
 the thing about balances and compromises 
 is that there is nothing that is going 
 to make purely one user group happy 
 because you know like this time we 
 reject this 
 super complicated typing feature so all 
 the people that think that we have too 
 much syntax are happy but then the next 
 day we accept something else uh 
 because it's very useful for the people 
 like for instance section groups right 
 because it's going to be super useful 
 for people using async i know and in 
 normal that if you don't do a sync you 
 say like oh wow this is insane like why 
 will anybody complicate the language now 
 i need to learn about all these many 
 things but um so this will happen with 
 like big languages and python has 30 is 
 a 30 year old language right so like we 
 we are accumulating a lot of this 
 um so yes i i personally think we are 
 doing at least we're not doing a 
 horrendous job and um and 
 the key here is that we don't look at 
 any direction we look at our community 
 and our use base and then we try to do 
 our best for the future of the language 
 not only of the implementation 
 all right anything to add 
 yeah i mean the ideal python is one that 
 has all the features you need and none 
 of the features you don't but um and 
 consequently you know whether a new 
 feature is accepted depend is good it 
 depends on whether you want it or not 
 but it's kind of hard just to 
 i mean 
 you kind of want a sort of coherent 
 vision of where the language was going 
 but unless you're omniscient that isn't 
 going to happen so 
 it's kind of a 
 you know many minds is the best 
 approximation to sort of a perfect mind 
 so yeah this sort of 
 community sort of decisions and so on i 
 mean 
 i i mean my worry is that features are 
 accepted 
 or rejected to a certain degree and sort 
 of like who shouts the loudest 
 um 
 so 
 i think probably having more 
 you know if even if you're sort of like 
 you have an interest in python which i 
 assume you do otherwise you wouldn't be 
 here you know if there's a 
 pep and you think about it it's like 
 well i don't like that for a reason or i 
 do like it or whatever i mean you know 
 say something so at least be sure of 
 like stand up and be counted 
 cool 
 thanks before we move on to another of 
 those questions like do we have any from 
 the remotes okay no 
 carry on please 
 so i think it's pretty well established 
 by now we won't be seeing a python 4.0 
 anytime soon but if you had a choice 
 where would you like to horrendously 
 break backwards and compatibility 
 okay 
 everywhere all at once 
 because if like python 4 is such a 
 drastic thing we're not even imagining 
 it 
 and 
 you know if it was then it would be such 
 a new thing that like 
 only the pure python code would survive 
 because 
 like we're never gonna do it 
 and it would have to be like world 
 ending to do it and so everything just 
 gets destroyed 
 we re-ride and rust probably 
 eric do you have an opinion on what you 
 want what would you want to break in 
 python if you could 
 um yeah personally 
 i would like the guild to be gone and i 
 think that's a pretty um common request 
 but i'm not 
 i don't think that we're warrant a 4.0 
 i think it depends on what how we 
 approach that problem 
 all 
 right um 
 well 
 yeah there are the big things like the 
 gill and and the things that we all know 
 about from the point of view of someone 
 who 
 worked intensively on exceptions um for 
 about a year 
 there are a number of 
 things in exception chaining that are 
 not 
 there are some edge cases that i would 
 iron out i would change that mechanism 
 in a way that is probably very hard to 
 do now 
 [Music] 
 and 
 i think there are a few issues around 
 scoping of variables that are a bit 
 weird 
 that 
 i would tidy up 
 all right here we have another question 
 hi 
 um speaking of new features um some 
 other languages have the concept of nil 
 coalescing and not no aware operators 
 there have been some attempted steps for 
 python for non-wear operators 
 what are your views on that because 
 personally i would really like to see 
 them i really like them in other 
 languages 
 yeah i mean i i withdrew the pip that i 
 wrote on that um so i'd like to hear 
 other people's opinions before i explain 
 my reasoning 
 i don't have a strong opinion on this 
 matter 
 so so for people who aren't familiar 
 with that the the idea you may have seen 
 it i believe it was added to javascript 
 recently it's been in c sharp for a 
 while but essentially if you have a 
 variable and you're going to do like 
 variable dot attribute 
 then you need to do a nunchuck first you 
 need to say if this is none i don't want 
 to do that attribute because i know it's 
 just going to fail and so the idea is 
 you have a special operator a question 
 mark dot where if the value is 
 i'll say if the value is none but that 
 was a point of contention if the value 
 is none then don't bother looking at the 
 attribute just just return none 
 essentially so it's like if the if the 
 value is none give me done if it's not 
 none look up this attribute 
 and what it lets you do is it lets you 
 create like long chains of 
 um like looking up attributes on 
 attributes on attributes and attributes 
 without having to have this really long 
 chain of is this one none is this one 
 none is this one none is this one none 
 and so you can get in in that situation 
 you can get kind of a nice single line 
 expression that handles all of that 
 the coalescing operator is a question 
 mark question mark typically that says 
 if the value on this side is none give 
 me the value on this side in python we 
 often use the or operator for that which 
 says if this value is false or looks 
 false give me the value on this side 
 and that was 
 also an interesting discussion because 
 none looks false so if you have none or 
 some other value you'll get the other 
 value um 
 the reason i eventually kind of withdrew 
 that is i had i had a really interesting 
 discussion with raymond hettinger 
 um at one of our core dev sprints 
 where where he basically 
 laid out it's like 
 but the features that go into the 
 language actually change the way people 
 program and it has far more of a flow 
 and effect than just how that particular 
 thing gets written it's going to affect 
 how the rest of the code is written so 
 for example right now 
 if you're going to append a value into a 
 list 
 you may check that it's you're not 
 appending none and you'll say if i have 
 a good value i'll put it in the list 
 but if you know that when you go to get 
 values out of the list you're going to 
 non-coalesce everything you're not going 
 to be worried about that and so you'll 
 happily throw you know garbage values 
 into a list and then they get carried 
 around passed around and and show up all 
 over the place and they may get 
 serialized and pickled and and all sorts 
 of stuff because when you come to use it 
 that's when you know you're going to 
 handle it and 
 and basically you know i had this 
 conversation i thought about it some 
 more and i'm like i don't want to 
 encourage that kind of coding in python 
 i don't think that 
 um 
 like i think being able to trust the 
 value that you have been given wherever 
 it came from is kind of a core part of 
 python and we don't defensively double 
 check everything before we use it 
 because we we have kind of the the code 
 laid out in a way that you know we check 
 it when we first get it and then use it 
 and that gives us nice kind of straight 
 line readable code that doesn't have 
 conditions and checks and exception 
 handling all over the place apart from a 
 few specific things we know about so i 
 didn't like the idea of 
 if i get this feature in 
 going to start 
 putting nuns in lists everywhere and you 
 know instead of one two three we'll have 
 one none none none two none none none 
 none three because that 
 yeah so i didn't like the the 
 implication of what what coding might 
 turn into with that feature there so 10 
 years back i had like a lightning talk 
 at euro python it was in florence at 
 that year 
 about how i regret nothing and you 
 cannot judge me like with like bad 
 examples of bad things i did with python 
 one of which was implementing the null 
 pattern which is kind of non-coalescing 
 uh but like going further so like 
 replacing uh dictionaries with null 
 dictionaries that also allow you to like 
 you know find keys that are not there 
 without raising exceptions and so on and 
 so on so i just like did my lightning 
 talk it had memes in it so people 
 laughed you know we left florence and 
 now 10 years later this null package 
 that still is on pipe eye gets like some 
 scary number of downloads 
 meaning like somebody is using it 
 so yes like hiram's law like every 
 observable uh part of like you know a 
 system is going to be depended by 
 somebody so 
 we have to be careful about what we add 
 because we can never remove it uh 
 afterwards 
 if i can add on another recommendation 
 like that as well don't use his package 
 uh but but there is so there are match 
 statements now which i believe will 
 handle this properly 
 where if it has you know if one 
 attribute is none and you're trying to 
 match longer than that then it's just 
 going to say it doesn't match and it 
 won't be an error so match statement is 
 a is a good way to do this i believe i 
 haven't tested that one but there's also 
 a package out there called glom 
 which 
 effectively lets you write the lookup 
 pattern as a string 
 imagine that it's like regular 
 expressions but for navigating object 
 hierarchies that's a really neat way to 
 do it because that lets you have 
 you know all the control to say look up 
 this expression you know and its 
 attributes and indices and parameterized 
 and and all of that cool stuff but 
 handle it in this way if this bit hasn't 
 worked out so that's a neat way to kind 
 of compress all of you know what might 
 be 30 lines of ifs and and accept key 
 errors and everything to make that night 
 you know nicer to use 
 cool 
 anthony has a question 
 um will we see a jit and see python 
 and if we will what would it look like 
 and what would the boundaries be 
 anthony wrote a jet for a person i'm not 
 i'm not selling mine i'm just stopping 
 stole pigeon what is that 
 mark 
 eric what was the question 
 will there be a jet for python and how 
 will it look like in c python see python 
 yes will there be a jet a jet oh oh mark 
 yeah go ahead 
 [Music] 
 so 
 uh 
 if jit is a general magical term for 
 makes it go faster then we've already 
 got one because it's already faster 
 if you mean specifically do we have 
 something that translates 
 uh something the byte code into machine 
 code at 
 uh 
 probably 313 maybe 314. 
 how would it look like like how a little 
 bit different it looks like a big pile 
 of c code 
 [Laughter] 
 how will it look how long have we got 
 uh we've got half an hour okay 
 right so 
 so there are two types conventionally of 
 just in time 
 compilers one is tracing which is what 
 pi pi does 
 and the other is method of time which is 
 what the jvm does and a whole bunch of 
 other examples 
 um 
 pidgin 
 and cinder 
 and piston 
 are all method at the time jets 
 pie pie is a tracing jet 
 basically the difference is tracing and 
 method time is what region of code you 
 choose to compile as a single unit 
 pipeline looks for 
 loops although it can handle cases where 
 it can't find one 
 and tries to 
 compile basically just the loop and that 
 will in line some function calls within 
 it 
 the method time just compile the whole 
 function 
 um 
 neither are ideal 
 but the problem with any sort of dynamic 
 optimization is you need to do it 
 quickly and you need to do it only 
 knowing the past you can't know the 
 future obviously so you have to make 
 guesses as to what sort of are good 
 regions to compile 
 there is 
 approaches that use smaller regions 
 basic blocks which are basically just a 
 few bytecodes in a row 
 uh hhvm which is a php compiler facebook 
 does that 
 and 
 the 
 yjit which is i think a rube part of c 
 ruby 
 um 
 done by shopify 
 does what's called basic block 
 versioning which is just runs a basic 
 block which a basic block is a unit of 
 code without any branches in it um at a 
 time 
 and those are 
 simpler and also sort of promising 
 because 
 they're smaller units of compilation 
 which means lower pauses 
 and 
 they're much simpler to handle because 
 there's no flow control issues within 
 the units of code so we'll probably 
 start with something like that 
 um 
 hhvm also then does tries to form larger 
 regions of code once it's the 
 the tracelet which is a small basic 
 block type 
 units of compilation have sort of 
 got themselves hot 
 you might try and find a larger more 
 region which would probably look 
 something like a method with a few in 
 lines 
 um 
 method time again you can inline stuff 
 there's loads of ways doing it so we'll 
 probably start simplish 
 um 
 now because pythons are such a dynamic 
 language 
 most of this much of the speed up even 
 for converting to machine code is 
 actually just removing some of the 
 dynamic stuff and 
 so 
 things like what's called guard 
 coalescing which is 
 if we expect something so suppose you 
 look up the length of a list we have to 
 look up the global variable then and 
 then we 
 then we check that it is in fact the 
 lend function and then we check the type 
 as a list and then we compute the list 
 of it 
 we can expect a lot of those things 
 currently with the optimizer we have in 
 c python 311 
 we'll essentially be doing those checks 
 for each byte code it's still faster 
 than just not doing the checks at all 
 having overly general code but we are 
 doing quite a lot of repetition as we 
 optimize bigger regions we can start 
 removing those checks 
 if you know you can have a just-in-time 
 compiler 
 you can generate a sort of intermediate 
 representation which is a sort of lower 
 level than by code perform that analysis 
 remove those checks and then generate 
 machine code 
 but as part of my phd what we do i did 
 was 
 do that and by code so actually you can 
 do those stuff and still interpret the 
 output and that still gives you a speed 
 up so that's the sort of next step so 
 probably something like that will show 
 up in 312. 
 and then 
 depending on how well that works we push 
 that further or if that 
 shows the potential for the optimization 
 but doesn't give the speed up and the 
 reason that might happen is that 
 we trade removing one overhead for 
 another 
 basically because we're lowering the 
 code we have more overhead of just 
 managing in smaller bytecodes and doing 
 more interpretive stuff 
 even though we have to do less sort of 
 dynamic lookup 
 if that works we'll push that further if 
 the speed up sort of is none then that 
 becomes like a we just keep that as a 
 sort of like a hold as a 
 that's our intermediate step for the 
 just in time compiler but either way 
 yeah 
 we would expect a 3 13 3 14 had safe but 
 the important thing is being like that 
 the client code the user code stays the 
 same you don't have to change your code 
 right like it's still just just like 
 that dynamic like from the view of it 
 right like as it was before yeah 
 so mark that was a yes 
 uh yes that was a yes that was a yes yes 
 i mean it's important to also understand 
 that the cost of the jit is not just 
 writing it is 
 it's a balance right like like the digit 
 normally makes for instance startup is 
 low so it means that if if you always 
 have the heat activated or i mean most 
 deets right 
 um like it means that you if you have a 
 comma line application it's going to be 
 slow like for instance pi by is lower to 
 start on c python uh pie pie is just 
 slower than c python in if you remove 
 the if you turn off the gins pipe it's 
 considerably slower than c python it's 
 slower to start because it's just slower 
 um 
 there's no reason why 
 having a jit i mean 
 it bulks out the code so the interpreter 
 might take a fraction of a millisecond 
 longer to to load but if you don't use 
 it it shouldn't really affect the code i 
 mean a lot that like java applications 
 are deemed to be slow start because the 
 jvm is huge and does take a long time to 
 load but there's also the issue of just 
 perceived slowness if you're used to it 
 being fast because it's a just-in-time 
 compiler it will seem slower at startup 
 and just to be fair to piper they're 
 they're slower until the jet kicks in 
 and when the jet kicks in it's right 
 significantly faster 
 it depends of what areas do you care 
 about like you may not care about that 
 your application will be very fast but 
 you want your command-line application 
 to be snappy also the bargain is 
 interesting because like when you have 
 the jit and then you start debugging 
 your applications throughout the wager 
 or you just attach 
 like gdp or something like that you need 
 to either 
 like 
 return the um uncompiled version or now 
 you need to make sure that your jit has 
 frame pointers so gdp can backtrace 
 through the through the compile code so 
 it's not just the jit it's all the 
 machinery around it and making sure that 
 the experience doesn't get worse yeah 
 all right 
 if i can add a comment on on the jit 
 topic yeah there are also like two 
 problems first of all is that if you 
 start with jit you will basically go 
 infinitely deep with it because well you 
 can optimize everything until 
 probably and spend infinite amount of 
 money and time on it that's basically 
 what chromium did they like spent 
 really millions of dollars on like 
 making turbo fun that's their jit they 
 have like super fast and like make 
 js efficient and you can even go 
 so much deep that you can even like look 
 at the ranges of the values that are 
 being returned from functions so for 
 example in javascript if you are doing 
 something like string dot index of some 
 character in the string you know this 
 can return either the index or 
 or a negative value and the jit can like 
 know that this function always produces 
 values from minus one to some maximum 
 string length value and it determines uh 
 like how this result is then used and 
 like can optimize if conditions 
 uh so that's the the big issue there 
 that you can basically go infinite deep 
 with it and uh the second thing is like 
 security like as you said you may have 
 also bugs in jit and that's the thing 
 that's happening in chromium for example 
 and firefox and uh 
 the webkit the safari one as well and uh 
 if you start with gt you will you may 
 end up with some like very uh 
 hard to detect issues and uh hard to 
 debug as well because well gta code is 
 not necessarily easy to debug so if so 
 maybe that's my small request if you go 
 with the jit approach maybe try maybe at 
 least think about going to rust with it 
 because that would probably be 
 at least more secure than using c for it 
 but yeah 
 thank you 
 i guess once you generate machine code 
 like it doesn't much matter like whether 
 you generated it with restore would see 
 but like i i see what you're saying and 
 this is for example one reason why apple 
 just kind of just doesn't allow you to 
 use gta code like on ios 
 uh yeah because like 
 there can be holes in it we don't know 
 do we have any questions from okay 
 let's let's have another from here 
 thanks i was wondering if you could 
 share some ideas of uh the faster c 
 python project that you 
 are thinking to explore 
 oh so besides legit besides 
 you have a talk on this right yeah yeah 
 come to the talk tomorrow 
 yeah great yeah thank you thank you the 
 talk is kind of mostly about what we've 
 already done rather than what we're 
 going to do but it does cover what we're 
 going to do perfect i wasn't playing out 
 all the conference already so that's 
 good then yeah yeah 
 if we do still have talks like for for 
 those of us who didn't have one yet like 
 come to our talks yes 
 you'll learn stuff like mine is on ios 
 yeah 
 let's have another question 
 core developers are also humans 
 uh controversial opinion 
 which aspect of your work with python 
 filled you with joy like what's a good 
 day for you 
 let's start from that end of the table 
 eric 
 oh wow 
 um 
 yeah 
 wow it feels like i need a really good 
 answer for this 
 um 
 okay 
 when i started 
 kind of when i took the role i had at 
 bank of america and i was 
 looking after a library that about 4 000 
 people were using it would blow my mind 
 that i'm writing code that 4 000 people 
 are using 
 and 
 now 
 i work on python and i think when i 
 commit code i sometimes think how many 
 times a day will this line of code run 
 you know it could be like one or two 
 lines in a pull request and and i think 
 and that that totally blows my mind so 
 it's the impact 
 um 
 when i take a step back and think about 
 you know the context of what i'm doing 
 otherwise um 
 uh 
 you know it the team is is is 
 you know it's an extremely strong team 
 of of 
 software engineers and it's just 
 fantastic to be working with people like 
 that 
 and there's there's an incredible amount 
 of collaboration and respect and 
 energy 
 that 
 i think 
 we kind of pushing each other forward 
 ken there's a lot of like uh 
 well joy in typing right 
 yeah can you talk talk something about 
 like what you make what makes you tick 
 okay yeah so um 
 kind of like how eric mentioned about 
 the impact um when i first started on 
 typing i thought that man this is just 
 something that people use for 
 annotations 
 then one day um 
 there was a button typing that was 
 caused by i think me 
 and suddenly like i have 15 messages on 
 that pr like complaining about the bug 
 and people from numpy pandas and other 
 libraries were just like blasting my 
 inbox and that was meant and i realized 
 that 
 like oh typing is actually pretty 
 important 
 and it's used by a lot of people 
 so um 
 like 
 it's just yeah pretty mind-blowing that 
 so many people use the code that i write 
 another thing is that um 
 the typing sorry the people behind c 
 python so the core team has actually 
 been quite inviting because i'm actually 
 one of the newest call developers here 
 on this panel i'm not i haven't been a 
 call developer for that long and 
 most of my experience 
 has been that people are quite welcoming 
 to me 
 on my journey to become a call deaf 
 anything to add anybody else 
 i i i have a story uh yeah go ahead with 
 your story and i didn't know if everyone 
 had a high point or did you just know 
 that like 
 he doesn't like doing it is that 
 you don't want public to tell us this is 
 high quality no i just opened up like 
 you know 
 anybody that wants to share the 
 reconnaissance 
 yeah so so yeah uh it's a great question 
 as everybody said you know that the 
 impact is just amazing because you know 
 the code you wrote is like used by 
 hundreds of thousands of people 
 uh i i felt this when i was like you 
 know doing some minor 
 argument parsing improvement on print 
 function you know like the print is like 
 the core of the language and like i was 
 touching that but it felt amazing but 
 what what 
 what i really enjoy is seeing people 
 like 
 uh 
 seeing 
 people like the features that we put so 
 much effort in like the new era messages 
 that pablo and i and others are doing 
 you know people are sharing it they're 
 saying oh this saved us ours and ours of 
 debugging okay that's like 
 that that's really 
 uh that really makes me happy 
 um yeah if you'd asked me 10 years ago 
 to describe my dream job i think it 
 would be basically what i'm doing now so 
 that's pretty good 
 um but yeah the impact is just amazing 
 yeah that's the feel that so and people 
 you know there's 
 you still you know widely read stuff you 
 know widely viewed talks about you know 
 what we're doing it's just yeah that 
 makes that feels really good 
 i think i'm going to do a really cheesy 
 answer and say that actually 
 i i my favorite part is the interaction 
 with people like you know i have made 
 very good friends on the core team like 
 we are going to spain next week like 
 it's quite ridiculous you think about it 
 because you normally think that uh you 
 know i'm going to do this thing because 
 the impact and whatnot i'm just starting 
 like that but but it turns out that um 
 many of my best friends are now in the 
 core team which is i think that's 
 awesome and that's what keeps me uh 
 um 
 into into it 
 yeah so a few years back at euro python 
 um i was 
 you know sat down and chatting with a 
 guy um and he you know he kind of asked 
 you know what what what you what sort of 
 things you work on i told him yeah i've 
 been you know helping maintain python on 
 windows and redoing the installer and 
 he's like oh that was you like 
 okay okay am i about to get in trouble 
 yeah 
 it's 50 50. right it's like half the 
 time i get in trouble 
 it's like okay listen 
 i i do a lot of teaching and i do a lot 
 of teaching around the world and 
 particularly in africa it's like that's 
 a really important 
 really important thing to to this guy 
 and it's like i do a lot of teaching in 
 africa and a lot of the students there 
 the high school students don't have 
 computers they don't they don't have 
 access to computers the schools don't 
 have 
 them and and so he's trying to teach 
 them python and they're showing up with 
 whatever they can get their hands on and 
 he's got 
 12 13 year old kids showing up with 
 their mom's 12 or 13 year old laptop 
 it's got an external ps2 keyboard 
 plugged in plugged into the side because 
 the the keyboard and the laptop doesn't 
 work anymore 
 and and he said 
 this last time i went out was the first 
 time so many of them could install 
 python on these windows machines because 
 typically they're locked down they're 
 restricted for 
 for from you know the parents work 
 whatever they're doing they don't have 
 admin privileges uh there's just limits 
 on what they can do there's things that 
 didn't work 
 uh it's not all like 
 simple 
 five letter ascii usernames 
 uh and and he said 
 the work that's gone into the installer 
 has made it so these kids can actually 
 use python for the first time it's just 
 like 
 that 
 was completely unplanned 
 but but amazing so 
 yeah those are some good stories 
 rodrigo has a question 
 lucas knows my name 
 okay no sorry 
 [Laughter] 
 um yeah 
 yeah so the 
 non-non-core developers are also humans 
 and we are much less experienced so if 
 we want to make our first contribution 
 how do we 
 make it less likely to take too much of 
 your time and more likely to be accepted 
 i think i can take this because i i 
 review a lot of pr's these days as my 
 job 
 so just fix something that is broken in 
 the code that you're using so like if 
 you're like 
 have an idea to just proactively start 
 contributing and it's a very generic 
 idea but you don't know where to start 
 like start with something that you're 
 already heavily using and there's 
 something wrong with it like there's 
 much 
 more likelihood of you understanding the 
 context be behind you know some api then 
 there's a lot of changes where people 
 want to want to change something just 
 because they don't really understand how 
 the api is constructed so that that 
 takes a lot of time because we also 
 don't 
 don't want them to just 
 go away without their change being 
 approved we want them to know why 
 so that takes a lot of time 
 we do appreciate even simple changes 
 like you know to the docs and whatever 
 like you know you know if you find a 
 typo yeah we'll accept it 
 but there's a lot of changes like these 
 and they're like relatively kind of low 
 impact like if you read some docs and 
 you know one word has flipped you know 
 vowels in it you know it doesn't really 
 matter that much um so unless it's a 
 part of a bigger change like we tend to 
 kind of avoid those fixes ourselves 
 which is why we don't fix every 
 um every type typo ourself so yeah like 
 what i would do is just start at a place 
 where you're already a user of it so i 
 don't know like if you're working a lot 
 with any files and you know you just 
 don't like how config parser does 
 something like 
 just go ahead and you know fix something 
 about that like this is how i stored it 
 um like same with async io or whatever 
 else like you know some part of python 
 that you're already using um 
 yeah and and then just you know now it's 
 easy there's issues on github pr's are 
 in github so just follow what everybody 
 else is doing around you in the project 
 and you'll be fine 
 it's also a terrible suggestion i hate 
 making it because it's a really mean 
 thing to say to someone but 
 look up what other work and discussion 
 has gone into the idea before 
 most things have been discussed and it's 
 a horrible thing because it's really 
 hard to find and as a new contributor 
 you've got very little chance of 
 actually being able to find it but if 
 you're able to do that if you're able to 
 kind of look through mailing lists 
 archives mail.python.org you can find 
 links to the posts anything that's on 
 github we copied all of the old bug site 
 onto github so it's all there 
 anything you can find because we do have 
 people will come in and say i want to 
 make this change and 
 it will take 
 someone who's been around for 10 plus 
 years to remember oh we discussed that 
 before 
 and decided against it for some reason 
 but we 
 like that kind of research but it is 
 incredibly hard to do so the the more of 
 that that you can know that you've done 
 the better but 
 you know don't don't spend too much time 
 on it eventually eventually declare i 
 couldn't find it is 
 here's the idea anyway 
 right 
 yeah i wanted to add this that 
 whether you're joining the c python team 
 or a new team at work 
 you really want to spend some time and 
 think what do they need what is it that 
 they need don't come with an assumption 
 that you know what people need because 
 it seems like a lot of people assume 
 that what we need is more pull requests 
 and actually what we really need is help 
 reviewing pull requests 
 so um 
 you know like 
 once you realize that 
 the first thing to do is to spend maybe 
 a couple weeks just reviewing pull 
 requests 
 and through that high quality code 
 reviews are a very quick way to get the 
 right kind of attention in an open 
 source project 
 it's very quick 
 it's quicker than producing 
 good pull requests because then you're 
 waiting for somebody else to do a high 
 quality 
 code review 
 um so 
 if you could kind of review other 
 people's 
 pr's um 
 [Music] 
 kind of 
 give the code of a bit of information 
 like what what what did the person do 
 what's good about it what's bad about it 
 kind of 
 help the process along you will learn 
 about it because then you will see which 
 ones eventually get merged which ones 
 don't what kind of other feedback people 
 get 
 so 
 i would suggest to start contributing 
 there 
 this is a good suggestion i also like if 
 you do create apple request and it 
 doesn't get reviewed like often it's 
 like either 
 nobody just looked at it among the other 
 50 that appeared that week or uh it's 
 actually not that obvious what we should 
 be doing so there's you know some 
 thinking that people are doing maybe 
 they should just respond on a pull 
 request they don't do uh do that every 
 time but you know kind of don't take it 
 personally when your your stuff is not 
 expedited like you know like everybody 
 uh on the team also knows that you know 
 that there's a small number of us and a 
 lot of amount of change so you know not 
 everything kind of happens quickly but 
 you don't also don't want that you don't 
 want python to change like too quickly 
 uh one thing i would add to the 
 you know please review pull requests yes 
 please do that but those reviews appear 
 on github as those like gray ticks 
 uh so if you do that please review so 
 please write us what you did and what 
 you found right like if you just click 
 i reviewed it and i approve it and it 
 you know appears as a gray uh tick it's 
 not really actionable to anybody like 
 you know if you're a new contributor 
 like we don't know like what you did 
 like whether you just stamped it without 
 looking or you spent two days on it so 
 if you're reviewing like 
 just put it on the pull request it's 
 free like you know what did you do what 
 did you try what did you find out 
 yeah we're down to five minutes but like 
 we have uh another what three questions 
 so 
 if we if you're focused we should be 
 able to go through all of those 
 um maybe this is going to be a bad one 
 for five minutes but um 
 not non-technical questions so my 
 superficial understanding is being a 
 core developer means you're working on c 
 python you have like push privileges and 
 whatnot but i feel like 
 the 
 python kind of experience or the 
 community is way more than just c python 
 there's all these very important things 
 like pip ipi i don't know maybe sphinx 
 like all these other things 
 um and i'm curious if 
 you guys have discussed promoting those 
 projects as much as 
 you as much as i don't know you guys 
 promote yourself or whoever else whoever 
 is promoting you so you guys get lots of 
 facetime and panels like this but i've 
 never seen or know about the pip 
 developers for example or pipi 
 um 
 [Music] 
 okay this is a great idea like so what i 
 can tell you is uh like we also didn't 
 kind of promote ourselves with this 
 panel what happened is uh just the 
 organizers of europe python contacted me 
 specifically saying like hey like do you 
 have an idea of like who could be in a 
 panel and then it turned out that by 
 asking me they just kind of implicitly 
 asked me to to also be on the stage for 
 this like to ask questions 
 uh so yeah like maybe it's a question 
 for like kind of community organizers 
 for event organizers to also reach out 
 to uh ipa so like the packaging 
 authority uh 
 kind of maintainers there's a quite a 
 bunch of them and whatnot so absolutely 
 we we 
 we are super inclusive like we like to 
 just say like this is this community is 
 huge right you have scientists that you 
 know like uh put telescopes uh in space 
 and then use python for them like 
 there's people in the medical community 
 there's teachers and whatnot what what 
 we're we're happy to like have all of 
 them same with like django pipea and 
 whatnot um 
 i don't i don't think we should be 
 really responsible for like whether they 
 get like 
 same amount of i don't know screen time 
 like as we do like 
 we have other panel sessions as well 
 yeah okay yes 
 so there is an education panel i'm 
 hearing and there is uh a diversity one 
 as well uh which is also something that 
 apparently you can see it for yourself 
 like we're not awesome at but we're 
 trying we're trying to like improve the 
 situation 
 um so yeah it's a process okay that's 
 right so i was wondering how much 
 freedom do you have in your car 
 development work and how much influence 
 does your company work for puts into you 
 in terms of like your focus 
 oh that that needs to be answered by 
 somebody who works well by a bit 
 controversial yes steve let's go 
 um i i get a pretty serious amount of 
 freedom really 
 and that i think has has largely come 
 down to 
 uh kind of microsoft recognizing that 
 we 
 you know we we have a platform to care 
 about we have a cloud to care about and 
 that's a place for developers to come 
 and do their best work 
 and 
 and you know certainly things have 
 changed since i started doing this 
 because when i started doing this it was 
 you know from our point of view windows 
 windows windows and so anything that i 
 touched that made the windows experience 
 for python developer better meant that 
 our platform was more attractive 
 um 
 but but at this point because 
 you know because microsoft now cares 
 cross-platform it's like anything that 
 makes c python better 
 makes that developer experience better 
 um and and we're certainly not in any 
 kind of position to like 
 keep that like keep that private like we 
 couldn't possibly do it it just 
 fundamentally wouldn't work and so so it 
 you know they have very little influence 
 um occasionally i get some opportunities 
 because i'm at microsoft to do things 
 for example um if you look at the 
 windows store right now 
 one of the kind of highlighted front 
 page apps on the store is python 
 and that was an opportunity that came up 
 because they could find me and and say 
 oh you're internal you work here we can 
 figure out how to promote this app and 
 and and you know just have this big 
 python logo in the app store for 
 everyone on windows who looks at the app 
 store right now and so i get some 
 opportunities like that 
 i can track down the windows developers 
 and say hey i found a bug that affects 
 python can you fix it please 
 um which is a great you know that i that 
 i love doing um 
 but they don't really 
 like no one has ever really said we you 
 know we need this change 
 added into python in a way that 
 that i wasn't able to kind of push back 
 and argue until it turned into a benefit 
 for everyone 
 okay thanks 
 how about bloomberg 
 right uh the finance boarding world i 
 i'm quite lucky i've been working at 
 bloomer for five years and this past 
 year 
 i used to have 20 percent of my time to 
 see python 
 the way we arrived to that arrangement 
 is because like it was quite clear that 
 the work that i was doing 
 like was also benefiting developers 
 inside the company right and although we 
 have never i have never received a 
 prioritized bag that i needed to fix it 
 was like many of the things that i was 
 doing on my own were already being like 
 praised inside the company so they say 
 okay it makes sense to you know like put 
 more effort and this year actually i've 
 been even more lucky because they like 
 i'm working fifty percent of my time 
 with the fast three python project also 
 part time with microsoft which sounds so 
 weird 
 uh to say uh like bloomers is still 
 paying my whole salary but i don't know 
 it's quite a wild war um 
 so yeah i'm quite happy that you know 
 but it's all about trust and also there 
 is some issues that people don't think 
 about when you have this kind of 
 attention because like if you also want 
 like oh i want a nice evil right but 
 like now you have 50 of your time that 
 is opaque to your managers so because 
 like okay yeah you're having fun there 
 but like what are you doing how is that 
 really useful or more useful than if you 
 do this sort of thing so you need to 
 have a very good relationship not only 
 with your company so the higher apps 
 allow it but also you need a way to 
 not sacrifice your career just because 
 you're doing this so you need to 
 communicate and like make them 
 understand and like be transparent so 
 it's a lot of trust involved and that is 
 normally gained through the years 
 yeah i i could say exactly the same as 
 uh oh what pablo said i used to work for 
 facebook so like on day one when you're 
 being hired by facebook they say like 
 hey don't don't get into bar fights like 
 at least don't get into them anymore 
 because now you're not like lukasz who 
 got into a bar fighter a facebook 
 employee got into a bar fight so if 
 anything the kind of the pressure that 
 you get from working on a big 
 corporation is that like 
 you are now representing like a big corp 
 that you know might get sued or whatever 
 so you actually have to have more 
 discipline that you would otherwise have 
 like otherwise and there was never any 
 pressure to do anything because it's all 
 open source everybody else could see it 
 if it happened right uh we reached 
 our time pretty quickly in fact like i 
 found it very interesting thanks all for 
 coming i hope it was useful it was fun 
 and now there's coffee break so you can 
 wake up 
 yeah come to our talks 
 [Applause] 
 just to end of life achieving five key 
 benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 so 
 [Music] 
 [Music] 
 trans code is a heck day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is uh 
 tremendously important because 
 it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it's a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having a shared sense of humor with 
 people i've never met 
 is really really lovely and of course 
 getting to nerd out of our code 
 [Music] 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 um 
 [Music] 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem to build community and feel a 
 little bit less alone so transcode is 
 tremendously important because it gives 
 us a space to be among our those that 
 are like us which in my case is very 
 rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology research and 
 expert insight to answer the world's 
 most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 so 
 [Music] 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i've really loved about today 
 is meeting people of sort of different 
 ages different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble and just being 
 able to geek about geek out about sort 
 of shared interests having shared sense 
 of humor with people i've never met 
 is really really lovely and of course 
 getting to nerd out of our code 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories with imnitza you can 
 automate processes from purchase to end 
 of life achieving five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus dry 
 and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 um 
 [Music] 
 [Music] 
 the trans 
 is a hack day centered on the trans and 
 non-binary communities it's a chance for 
 us to come together and share our 
 experience working on a common problem 
 uh to build community 
 and feel a little bit less alone so 
 transcode is uh tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having a shared sense of humor with 
 people i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open 
 and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 so 
 [Music] 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because 
 it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 um is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life 
 achieving five key benefits 
 find out how omnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology research and 
 expert insight to answer the world's 
 most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 so 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 [Music] 
 do 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i've really loved about today 
 is meeting people of sort of different 
 ages different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able 
 [Music] 
 so 
 [Music] 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is uh tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble and just being 
 able to geek about geek out about sort 
 of shared interests having shared sense 
 of humor with people i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 hey folks 
 welcome back i hope you all got some 
 coffee yes 
 excellent so 
 right now so uh continuing with the 
 python internals team for this track uh 
 we have reuven who's going to talk to us 
 about everything that you depend on 
 after your very first program second 
 program onwards after you do your hello 
 world 
 so reuben 
 excellent thanks very much 
 let's just get this going here excellent 
 all right hi everyone welcome uh so this 
 oh i should actually start my slideshow 
 that you can see it 
 that tends to improve a talk so 
 i'm ruben this talk is what happens when 
 you import a module 
 and a few words about me so i teach 
 python basically every day i'm in a 
 different city different country working 
 with a different company helping them to 
 improve their python skills people who 
 don't know python i teach them people 
 who do i help to improve them if you use 
 python and i'm guessing if you're here 
 you do 
 talk to me if you want to improve your 
 company's python i also have books i 
 have online courses i have a free weekly 
 better developers newsletter but let's 
 get to the heart of the talk 
 one of the most important rules in 
 programming is dry 
 don't repeat yourself 
 i said don't repeat yourself and this is 
 a rule that i learned from the book the 
 pragmatic programmer um and we actually 
 apply this rule an awful lot even if we 
 don't think about it that much so 
 basically if i've repeated code 
 one line after the other then i can dry 
 it up by using a loop 
 if i've repeated code in several 
 different places then i can use a 
 function 
 and if i have the same code in multiple 
 programs then i can use a library 
 all right so so this is standard 
 programming practice in just about every 
 language in fact it should be in every 
 language you use 
 and if you ever have the temptation to 
 say oh come on i'll just copy and paste 
 that code 
 what are the chances that i'll have to 
 edit in all those places i will tell you 
 the chances are 100 
 because you will have to change it all 
 those places and you might as well just 
 fix the problem at the beginning 
 well in python our libraries are called 
 modules and they're usually not always 
 but usually files that contain python 
 code and as an added bonus they also 
 provide us with namespaces and the whole 
 idea of namespaces is that if i'm 
 working on something and you're working 
 on something we want to combine forces 
 we want to make sure that the variables 
 that i have defined and the variables 
 that you have defined don't clash with 
 one another and so namespaces allow us 
 to collaborate without having to worry 
 about that sort of namespace collision 
 so 
 let's import a module 
 let's do import random 
 so 
 people use the import all the time right 
 like 
 all the time 
 but what does import really do 
 actually it does two things it's 
 important to keep track of those and 
 we're going to talk about both of those 
 here first of all import creates a new 
 module object 
 right now everything in python is an 
 object we love saying that but here 
 we're creating a new module object the 
 second thing that import does is that it 
 assigns that module object to a variable 
 okay 
 nice and by the way this is kind of 
 similar to death when you define a 
 function with def you're doing two 
 separate things you are creating a 
 function object and then you're 
 assigning it to a variable 
 okay so some things to notice here about 
 import first of all import is a 
 statement it's not a function 
 right so we don't use parentheses people 
 often have this temptation to use 
 parentheses don't why because it won't 
 work there's a simple reason right 
 but in addition to that 
 when we give a name to import we are 
 giving the name of the variable we want 
 to define we are not giving a string we 
 are not giving a file name we're not 
 giving a file object we are giving the 
 name the variable that we want to create 
 now in many other languages you do say 
 what file you want to create you say go 
 load such and such but in python we 
 can't do that at least we can't do that 
 directly and we're going to talk in just 
 a few moments about how we can sort of 
 have some effect on that how we can push 
 things in that direction 
 but it's a very common mistake that i 
 see people make in my courses where they 
 say import and then the name of the file 
 especially in quotes 
 don't do that because it won't work 
 well let's think about modules as 
 objects right so if i say here import 
 random as i did before and then i say to 
 python what is the type of random what 
 kind of object is it well it's a module 
 object 
 and right we have module objects just as 
 we have strings and lists and dicts and 
 functions for that matter and module 
 objects are actually really really 
 simple of all the objects in python they 
 don't do that much they're basically 
 containers they're containers for other 
 things they're namespaces and we use 
 attributes in order to set the names 
 that are going to be there they don't 
 have any methods so basically if i have 
 a module object all i'm using it for is 
 to keep track of the names that are 
 defined in there 
 well that's very nice but what if i want 
 to import a module 
 and not use the same name as the module 
 name and right now i'm sort of papering 
 over this whole how does it find things 
 we're going to get to that in just a 
 moment so if i want to import random but 
 i don't want to have a variable named 
 random what do i do well i can use 
 import as and i say import random as r 
 and the only thing that this changes is 
 the variable that's created 
 the rest of it still happens so remember 
 two things happen when we use import we 
 create a module object and we assign to 
 a variable here we're just assigning it 
 to a different variable okay so far so 
 good and perhaps even a little obvious 
 to people have been working in python 
 for a while well what happens though 
 if module a imports b 
 and then module b 
 imports a right now 
 i know this might come as a surprise to 
 some of you but there are some 
 programming languages out there that if 
 you do this with them and aren't careful 
 you could enter into an infinite loop 
 luckily those languages are very 
 esoteric and no one ever uses them so 
 but it's a point to bring up as a 
 theoretical construct 
 i'm talking of course about a language 
 not to be like you know horrible toward 
 but it's somewhere between b and d 
 anyway we don't want to have an infinite 
 loop in python and so 
 what do we do well python then needs to 
 keep track of what have we loaded and 
 make sure that it doesn't load it a 
 second time in other words 
 when we load a 
 remember when we import a it could load 
 it or not but it'll assign it could load 
 b or not and it'll sign 
 python only imports a module once per 
 session though it keeps track of things 
 it will always define the variable but 
 it'll only load it once well that's very 
 nice but how does python know 
 if i say import a in every single one of 
 the files in my program how does python 
 know who told it 
 and the answer is 
 sys.modules 
 now sysdot modules is sort of like the 
 you know virtual machine environment for 
 python it's where python keeps track of 
 all sorts of stuff and this is actually 
 a dict it's a dictionary in which the 
 keys 
 are the strings the modules names and 
 the values are the module objects 
 themselves 
 by the way if anyone ever wonders can we 
 actually store anything we want in a 
 python dictionary the answer is yes and 
 this is yet more proof of that we can 
 store module objects in a dictionary as 
 the values and the keys here again are 
 strings 
 so when we import python says wait do we 
 already have this module in our 
 dictionary if so then we don't need to 
 load it again we can just make the 
 assignment so we're always going to make 
 that assignment but we're only sometimes 
 going to load it up and how can we check 
 for that 
 we check to see membership as a key in 
 the dictionary 
 well how many modules are loaded by 
 default when we load up python 
 well so i decided to use three different 
 interactive shells for python one of 
 them was the standard interactive shell 
 just python 3 at the command line 
 imports this len of sysdot modules 79 so 
 when you start up the simplest possible 
 python shell again it's an interactive 
 shell so it's not exactly the same 79 
 modules okay but what if you're a fancy 
 schmancy programmer and you don't use 
 just the regular python interpreter 
 shell you use ipython because you have 
 lots of apple products so if i load up 
 ipython and i say what's the len of 
 sysdot module 
 646 modules 
 yeah but what if you're even fancier 
 than that and you use this newfangled 
 web thing including jupiter well then if 
 we use jupiter it's over a thousand 
 modules that are loaded into sysdot 
 modules again this doesn't necessarily 
 mean 
 that you're going to be using all of 
 them but it means that they were loaded 
 by jupiter by python by the python 
 interactive shell so that you'll have 
 all the things available by the way this 
 is still a small fraction of what's in 
 the python standard library and so just 
 because something's in the standard 
 library does not mean that you don't 
 have to import it because everything 
 that's imported takes up memory takes 
 time and so on and so forth 
 okay so this is all very nice and 
 everything but what's really going on 
 behind the scenes here 
 well let me first implement what we've 
 now talked about what i just described 
 to you in some pseudo code it's really 
 really close to python but not exactly 
 as you'll see 
 don't really run this code i mean you 
 can run it if you want that's not going 
 to work so like you know i'm going to 
 save you some time here but what you 
 should instead use is the import lib 
 module which does come with a standard 
 library and that's the way that python 
 sort of exposes how importing works and 
 what i'm going to be showing you through 
 the rest of this talk is what happens 
 there 
 so for example 
 my import so that's like the function 
 that does sort of like import what's it 
 going to do it's going to get a module 
 name as a string it says hey if this 
 module is not in sysdot modules 
 then we're going to load it i'm going to 
 run this function called get module 
 which is made up and then whatever i get 
 back from get module i'm going to stick 
 that in my dictionary and then under all 
 circumstances no matter what i'm going 
 to assign sysdot modules of mod meaning 
 the module object to globals of mod wait 
 wait wait wait whoops oh no 
 i didn't mean that when i said wait 
 all right so basically globals of mod 
 what the heck is that well actually 
 globals is a built-in function that 
 exposes a dictionary of your global 
 variables you can actually assign to 
 global variables this way 
 don't but you can if you want to or if 
 you want to enrage all of your 
 colleagues and so the idea is this way 
 we can get the module object and then we 
 can assign oh and then we can assign to 
 it 
 and this get module we're going to talk 
 about in just a moment 
 what about import as where we're 
 importing then we're assigning to a 
 different name well we can do that too i 
 can say my import of mod and then get an 
 alias there once again once again we're 
 just going to check is our module 
 imported if so we don't do anything if 
 not then we're going to load it up 
 and then we say if alias is none meaning 
 if i did not get an alias then we'll 
 just set the alias to be the module name 
 but otherwise we'll assign it to be the 
 alias 
 well let's consider another example and 
 this is something i alluded to earlier 
 what if my top level program says import 
 a 
 and then module a says import b and 
 module b says import a what happens 
 well actually 
 right our module program says import a 
 a is not an assistant module so it's 
 loaded and then the global variable a is 
 assigned 
 fine 
 next though module a imports b and b is 
 not in sys.module so b is loaded and the 
 global variable b is assigned 
 and then finally b loads a well what 
 happens while a is in sys.modules so we 
 ignore it but we do still assign a to be 
 assist.modules a 
 meaning you're always going to assign 
 that variable now when i talk about 
 global variables here in other languages 
 global means it's always available it's 
 available universally that's not exactly 
 true in python 
 in python what we call a global is 
 really global just within one module 
 just within one 
 file basically right we're just within 
 one namespace so we actually have many 
 different global variables in python 
 with each namespace having its own so 
 module a can have a totally different 
 global x than module b which seems a 
 little weird 
 now you can always keep track of what 
 namespace you're currently in by looking 
 at dunder name dunder name is a variable 
 always available and it says what 
 namespace are you in and thus what 
 globals are available there 
 by the way and you might know this the 
 first namespace the namespace that 
 belongs to the first file that we load 
 up is 
 done domain 
 so let's rephrase things just quickly 
 then so a is not in sys.modules so we 
 assign a and done domain 
 to be cis modules a and module b a 
 imports b and then we assign to a dot b 
 and then we do mod in module b we import 
 a we've assigned to b dot a that's why 
 this works the same way 
 but wait a second you might have also 
 seen something like this from random 
 import randint 
 and you might have thought great i'm 
 only loading up that one little thing 
 so does this save memory 
 no 
 does this load the entire module 
 yes 
 why because i told you so no why because 
 when you say from random import randint 
 what is it doing it is actually checking 
 to see and this is going to sound 
 familiar checking to see if random is in 
 sys.modules 
 if it is then we don't do anything but 
 if it's not we load the entire module 
 into python into that dictionary and 
 then 
 it defines rand int is the global rather 
 than random 
 and 
 random is not defined as a global so 
 you're simply switching what global 
 variable you're defining and what it's 
 referring to 
 and we can actually do this in a 
 slightly different way here's another 
 version of my pseudo code so i'm here 
 going to take one or more names in splat 
 args and we're going to go through if 
 the module is not loaded we're going to 
 load it and then for one name and names 
 one by one by one we're going to assign 
 them and here's a fancy way with 
 getadder to assign two attributes so i'm 
 going to go into that module object and 
 assign one or more variables based on 
 what was in the dictionary there 
 so basically and by the way it's super 
 super common for people to think that 
 they're saving memory 
 if they use from import um so now you 
 don't think that 
 what if i want an alias well once again 
 we can do that sort of thing from random 
 import random as ri what's happening 
 there we're simply changing the variable 
 that we're defining 
 right so now 
 my from import right here i take splat 
 double slack kwrx and i'm just going to 
 go through it one name at a time and 
 assign to this instead of to that but 
 it's the same mechanism 
 there's one last version of this that 
 you might be familiar with and that's 
 from import star right i can say from 
 import star and this imports all of the 
 names from random as globals into your 
 current namespace 
 well not all of them necessarily some of 
 them can not be loaded if they're not in 
 dunder all if that's defined in the 
 module but i have some very simple 
 advice for you about this never do it 
 please i will track you down and check 
 it is a really really bad idea it's like 
 saying 
 you know the world would be a much 
 simpler place without surnames let's get 
 rid of them 
 yes simpler in some ways 
 yes more confusing in others 
 don't do it please 
 let's go back to my pseudocode though i 
 keep saying get module what does it do 
 well let's think about it get module 
 is my pseudo code function find it takes 
 a module name as input it then does two 
 things it finds the file for a module 
 and then it loads that module based on 
 that file name and it returns a new 
 module object we know that because in 
 the pseudo code i kept taking the output 
 from get module and assigning it to a 
 variable 
 well here's the thing get module maybe 
 the name doesn't exist but the 
 functionality does 
 and it's called import lib.import module 
 remember i mentioned import lib exposes 
 how import does things 
 and so i can just say r equals import 
 lib of import module random and sure 
 enough i have defined it it's exactly as 
 if i had said 
 import random or import random as r 
 so you can play with this if you want 
 you probably shouldn't but you can 
 but let's now get to something sort of 
 more interesting and deeper how does 
 python even find these modules 
 and here's the simple story i told 
 myself for a long time and that i still 
 tell people in my intro classes there's 
 this variable called fist.path it's a 
 list it's a list of strings where python 
 will look and it's defined when python 
 first starts up and the first match wins 
 meaning the first directory in which we 
 find the module we're looking for that's 
 the file that will be loaded 
 now namespace collisions can lead to 
 surprises so one of the common uh 
 exercises i give on the first day of 
 class is i have people run this short 
 game where they have to like choose a 
 random number or guess a random number 
 sort of like the lottery but with higher 
 chances of winning and zero actual prize 
 so it's like a balancing act there in 
 any event inevitably someone calls that 
 file 
 random.py and in random.ui they say 
 import random and it loads itself 
 and then cannot find randint and bad 
 news all around 
 because here's what sys.path looks like 
 at least on my machine basically it's 
 first looking through the python 
 standard library and then looking at 
 site packages where pip install puts 
 things 
 and by the way there is an empty string 
 there at the beginning and that is the 
 current directory it's always going to 
 be the current directory syspat zero is 
 the programs directory it's not 
 necessarily where we're running it from 
 but where the program is located and 
 that way a program can always say import 
 to something in its current directory 
 and so after that as i said it's the 
 python standard library broken down into 
 a few different things because maybe 
 you'll want to load something from there 
 and it's also in a zip file and there's 
 some frozen things we'll get to that in 
 just a moment 
 but they're always available the 
 standard library is always available 
 and then finally as i said we've got 
 site packages you pip install something 
 some of us might have done that on 
 occasion and it goes there 
 what if you want to modify sys.path 
 well here's the wrong way to do it don't 
 append to that list from within your 
 program it will work 
 as i like to say unfortunately it works 
 but then you've got this program with a 
 funny sort of sysdot path and you've got 
 to change it 
 you don't want to do that 
 instead what you should do is set the 
 environment variable python path outside 
 of python and when python loads up it 
 will add those directories to sys.path 
 so for example if i say here export this 
 is at the shell not in python export 
 python path equals hello colon slash 
 goodbye 
 now if i look at my sysdot path you can 
 see that we have the current directory 
 or the programs directory we have python 
 path and then we have the standard 
 library and then we have the pip install 
 directory so it will definitely look in 
 that order by the way slash hello and 
 slash goodbye you might not be surprised 
 to hear do not actually exist on my 
 computer but they're made up python 
 doesn't care it'll look and if it does 
 not find that directory it'll go on to 
 the next one 
 so what's the pseudo code version of 
 that 
 it gets a little more complicated that's 
 true first of all we're still going to 
 check first if mod not insist on modules 
 but now we're no longer just like 
 running this get module thing now we 
 actually have to look ha work 
 so we're going to go through each 
 directory in sys.path we're going to say 
 hey can we find this file with a dot py 
 at the end and if so then we're going to 
 use a function that i'm calling load 
 module 
 load module again not a real function 
 but we'll see about in a moment we if we 
 go through all of the different 
 directories in sys.path and don't find 
 it you know we're gonna do we're gonna 
 raise module not found error 
 and again we'll talk about load module 
 in just a moment 
 so there's some problems with this story 
 sysdot path doesn't only contain 
 directories and modules are in different 
 places and there's also this weird thing 
 where if time dot py 
 right if i create a new file called 
 time.py 
 it doesn't get priority as i described 
 random does so what's what gives and the 
 answer is we have these things called 
 finders and loaders 
 finders say does the module exist and if 
 so let's get what's called a module spec 
 and then loaders are the things that 
 actually take that module spec and load 
 it into python giving us a module object 
 and you can have something called an 
 importer which does both of these 
 together 
 all right but wait where are these 
 finders defined oh that's right another 
 variable in cis 
 sys.metapath 
 right and so what happens then is python 
 goes through each of the elements in 
 sys.metapath 
 and it says are you the right finder and 
 are you the right friend are you the 
 right finder for this type of file and 
 each finder knows what it's defined on 
 so if i want to look for random it's 
 going to go through one at a time we're 
 going to import this we're going to go 
 through metapath et cetera et etc and 
 let's see what happens when i run this 
 well 
 it did not find it in this meta finder 
 did not find it in built-ins it did not 
 find it in frozen but it did find it in 
 a path meaning we load up the file 
 first one to find the file wins 
 but if i do it with time 
 it's a little different it's not in the 
 meta finder it is in the built-in finder 
 meaning the time is treated differently 
 from random and that's because time is 
 in sysdot built-in module names these 
 are modules that are specifically 
 defined not to be loaded from the file 
 system but rather to be loaded from the 
 special pre-compiled stuff that's 
 available sys by the way is here when 
 you import sys no fi no file is harmed 
 let's just run through this pretty 
 quickly because i want to get through a 
 few things 
 so 
 when we create the module object 
 actually we go to the spec that was 
 returned by the finder and we run a 
 method called create module this is 
 where the module object is created and 
 every single 
 spec knows how to create modules from 
 different kinds of files and that's 
 great we create the module and it's now 
 empty 
 so wait a second we've created a module 
 object but doesn't have anything we're 
 going to need to load the code from the 
 module and here again people have a lot 
 of misconceptions 
 many people believe that oh we load 
 things in python 
 we do you know how we load them 
 executing things that's right when we 
 load a module the entire module runs top 
 to bottom every line of code is executed 
 if you put in a long for loop in your 
 module don't do that 
 then it will execute it so it has death 
 if it has class 
 anything executes how 
 exact 
 one of those functions you're told never 
 to use by the way don't use it 
 but 
 but exec takes a string and runs it as a 
 short python program so i say s equals 
 print hello name is ruben print goodbye 
 and if i run this now with exec it 
 prints hello prints goodbye and what do 
 you know it assigned to the name 
 variable ruven 
 yeah that's not going to help us though 
 because what i want to do is exec this 
 file all the code in the file and then 
 pop all those values into its attributes 
 well guess what 
 we can pass a second argument to exec 
 and that's a dictionary which is then 
 populated 
 so we're not actually going to set 
 global variables we're going to set 
 name value pairs in the dictionary 
 yeah but that's not how a module works 
 ah but it is 
 because module objects have a dunder 
  attribute 
 and any key in this attribute in any 
 kind of dict is an attribute in the 
 module 
 so 
 what's going to happen 
 we load up the file 
 we execute we get the source code as a 
 string 
 we execute it into the dedict of our 
 module object which was created by our 
 spec which we got from our 
 finder 
 and then voila all of the global 
 assignments in the module are now 
 attributes 
 and we can even do this with the 
 function in import lib or in the loader 
 called exec module we go to the module 
 object we say exec into you and finally 
 everything is done in other words we can 
 break apart what happens with importing 
 and replace each part of it with a 
 function that we can now understand 
 better and we could even almost sort of 
 kind of write ourselves 
 sure 
 by the way all of this is customizable 
 you can do custom finders you can do 
 custom pathfinders you can do custom 
 loaders why would you want to most 
 people shouldn't but there are 
 occasionally times and reasons to do it 
 for example i met someone a few weeks 
 ago who has a custom loader that checks 
 that hash of the file to make sure that 
 it's loading the correct thing and 
 that's cryptographically safe 
 so to summarize 
 what happens when you import 
 a lot 
 well that's a quick summary let's go 
 into a little more detail and then i 
 know my time is up python checks to see 
 if the module has been cached if we've 
 already loaded it if so 
 then it returns the module if not then 
 it goes through all the finders in 
 sys.metapath if none finds the module 
 then you get the exception but if one of 
 them is appropriate it returns a module 
 spec object 
 and if that works then we get a new 
 empty module object and if that works 
 then it uses the loader 
 to exec the source code into the modules 
 done predict attribute 
 which makes all the globals in the file 
 in the module file into attributes on 
 the module object 
 so that's the complete picture oh wait 
 no we didn't talk about packages 
 yeah that's a whole that will be a talk 
 for next year but basically packages are 
 basically module objects just with the 
 itsy bitsy little issue of lots of 
 directories and heaven knows how they're 
 all resolved we'll get to that another 
 time but if we're talking about simple 
 modules you can see i hope how this very 
 simple api this very simple interface of 
 importing 
 actually hides a ton of complexity under 
 the under the behind the scenes 
 all right i think we've got about two 
 three minutes maybe for questions 
 thanks very much and uh i'd love to hear 
 questions thank you 
 if you want to use the mic there for 
 questions 
 uh-oh 
 thank you for your talk um i'm aware 
 that there's a pep about lazy imports or 
 lazily importing things how does that 
 affect this 
 um i'll answer it when i need to no no 
 actually the way that lazy imports works 
 the idea is that will from what i 
 understand from what i've read and heard 
 that 
 it'll basically say okay we're not 
 actually going to exec the file now 
 we're going to have this stub that's a 
 module object that when we access any of 
 its attributes then and only then it 
 will go through the actual loading 
 process 
 so you will if you use all the modules 
 that you load you'll still need to um 
 you know have that exact happen at some 
 point it'll sort of spread it across 
 your fi your programs running as opposed 
 to doing it all at the beginning which 
 happens now 
 hi well uh thanks for your talk 
 um my question could be a bit specific 
 but actually we have a distributor 
 control system using very old machines 
 with 
 only one gigabyte of ram 
 and one of headaches is when upgrading 
 to python 3 for example 
 each of the processes we run is using 
 plenty of memory 
 compared to our old python 2.6 
 software 
 i was guessing can i have my custom 
 module loader that uses a shared memory 
 in multi-process to save memory use by 
 each of the processes for example 
 i have no idea i'm guessing the answer 
 is yes with a lot of very hard work and 
 potential incompatibility with like you 
 know lots of other python stuff 
 it might be needed in your specific case 
 but it sounds like it would be really 
 really hard 
 okay 
 so incompatibility you mean and by 
 objects in shared memory like once 
 you've got things in shared memory then 
 they are by definition shared and then 
 heaven help you if they're i mean if 
 you're only reading from them that makes 
 it less complicated but not 
 uncomplicated 
 okay thanks 
 so we are running out of time maybe 
 reuben you could 
 take the questions on a one-on-one basis 
 if you have time after this yeah i'm 
 super super happy to answer any 
 questions people have afterwards sorry 
 we'll be right outside here 
 okay thank you all right thanks very 
 much folks 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 so 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 [Music] 
 [Music] 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is a 
 tremendously important because it gives 
 us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages and in my personal 
 life i've got a lot of trans friends and 
 family but we're in a little bit of a 
 bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 hey folks uh how's everyone doing 
 doing okay 
 yeah all right yeah get this up 
 yeah 
 okay 
 thank you very much so now we have uh 
 nicholas and he's going to talk a little 
 bit about music and code sir take it 
 away thank you very much hello folks i'm 
 really pleased to be here and very 
 grateful to the europartan organizers 
 for letting me give this talk especially 
 since it's involved some logistical 
 complications at which i'm sitting um so 
 i'm nicholas i'm a principal engineer at 
 anaconda and i work on the pi script 
 team 
 but this is a personal talk and isn't 
 going to be anything about my day job 
 and what i'm going to do is use music as 
 a metaphor and a contrast or a foil to 
 our world of coding and in so doing uh 
 it's an opportunity to explore 
 re-evaluate and re-encounter coding from 
 an unusual and hopefully stimulating 
 perspective 
 and i'll be paying particular attention 
 to two things that i'm quite passionate 
 about that is teaching and learning and 
 the place of software in our culture 
 but before we start i just want to find 
 out a little bit about you folks uh are 
 there any folks in the audience i know 
 there are going to be people who put 
 their hands up who have a musical 
 education musical training 
 well that's a lot more than i was 
 expecting so 
 i must apologize uh for my piano playing 
 um 
 i'm actually an orchestral tuba player 
 that was my training and uh that was my 
 principle study and that's the only 
 instrument really i can claim to be any 
 good at unlike many musicians piano is 
 my second study now for those of you who 
 aren't musicians what i've basically 
 just said is 
 as python is to my tuba playing uh so is 
 copying and pasting fragments of 
 javascript from stack overflow to my 
 piano playing okay thus 
 demonstrating 
 uh the power of analogy and metaphor to 
 reveal interesting insights about our 
 world you might not know about the piano 
 but you kind of get a sense of what sort 
 of pianist i am okay 
 so 
 i will start by exploring different 
 types of skill knowledge and ways of 
 attending to the world 
 and these are the concepts that we need 
 to learn and cultivate to do meaningful 
 things together be that music or coding 
 and we'll start with some uh musical 
 examples we'll start with theoretical 
 underpinning here 
 so notes stand in relation to each other 
 and that relation creates 
 tension and release in music it's how we 
 make music sound interesting okay um and 
 engaging so how does that work well 
 can you all hear that 
 yes that's a c okay this is a scale of c 
 major 
 now each one of those notes stands in 
 relation to that c and what we do is we 
 categorize these notes into two 
 different buckets the first bucket we'll 
 call dissonance which means that they 
 don't sound nice and the other one i'm 
 struggling to find a nice name for a 
 good name for this so i'm going to call 
 it consonants okay so let me demonstrate 
 the difference between those sorts of 
 notes so if this is c 
 played with another c an octave higher 
 or lower it sounds nice right 
 now there are other notes like the fifth 
 note of the scale the g 
 that sounds nice too right 
 and the third does the e 
 and to finish off the set 
 the sixth sounds nice too so 
 we have the consonances right it's nice 
 this is the second note it's the 
 dissonance it's a d 
 and the seventh the b 
 that sounds dissonant and the last one 
 the last dissonant is the fourth the f 
 now the thing about dissonances 
 [Music] 
 they want to resolve onto a consonant 
 okay 
 so 
 that's how we create the tension is that 
 we have 
 a dissonance 
 ah resolving onto a consonant dissonance 
 consonants dissonance consonants 
 dissonance 
 consonants like that okay now do you 
 recognize the tune 
 no okay so let's let's uh it's not a 
 very complicated tune 
 but it's perhaps the most basic tune you 
 can get 
 perhaps decorate it a bit 
 so if melody is notes through time 
 that's the x-axis right uh notes on top 
 of each other the horizontal axis that's 
 harmony notes playing at the same time 
 so if i add some notes to that tune 
 right what is it 
 time after time yeah okay good okay so 
 that's just i just wanted to introduce 
 you to a little bit of music theory and 
 how that relates to to to uh to the 
 pieces that we play 
 but music isn't just that there's 
 performance practice as well it's not 
 just how the 
 academic 
 outlook of music uh 
 is that matters it's the practicalities 
 it's how we play a piece of music that 
 matters too so for instance i could play 
 this piece famous piece by bark 
 and play all the notes the same 
 [Music] 
 and it doesn't 
 well it's bark so clearly it sounds good 
 right okay 
 but the way i play it um has an 
 influence on it as well what do i mean 
 well as a musician i would say it's my 
 expression okay uh what's expression 
 it's not what i'm doing with my face 
 it's what i'm doing with my fingers an 
 expression is things like dynamics how 
 loud or soft i play individual notes and 
 how they relate to each other it's 
 perhaps things like the way i phrase the 
 notes how i put them into groups it's 
 how i articulate the notes as well how i 
 start note or stop and and it's also 
 something the way i stretch time times 
 elastic in music so i could use a 
 technique called rubato where i'm 
 borrowing notes from 
 one place and adding the time i've left 
 over somewhere else okay so if i play 
 that again 
 hopefully with some expression you'll 
 hear what i mean 
 it always seems a bit of a sin to stop 
 playing bark halfway through it but 
 anyway there we go um hopefully you 
 could hear that i was actually trying to 
 play around with the notes i was 
 increasing the volume decreasing the 
 volume that sort of stuff as well 
 another aspect of music that i want to 
 bring your attention to 
 is that music happens in a cultural 
 context it's not just about the theory 
 it's not just about the performance 
 we have a history in music as well and 
 who we celebrate 
 as part of our history reflects our 
 culture and it reflects our tastes and 
 backgrounds and dare i say it prejudices 
 as well these four dead germans um who 
 are great musicians uh 
 it's a very limited view of what music 
 is the colorful and diverse world of 
 music that we have okay and music is 
 conceptually and historically a lot 
 richer than perhaps what these four 
 gentlemen present and it contains many 
 different 
 types of knowledge skills and paying 
 attention to the world okay 
 so 
 let's explore a similar journey but with 
 code 
 so 
 hold on to your hats because this is 
 where i do some live coding oh my gosh 
 right 
 okay so this 
 is the mu editor and mu is a code editor 
 for beginner 
 developers 
 um and it's something that i help 
 maintain and the other new maintainers 
 are in the audience now as well and what 
 i'm going to do is introduce some 
 programming concepts that you 
 will understand uh because you're all 
 python developers right okay um but i'm 
 going to try and do it in such a way 
 that 
 mirrors 
 what i did with the music as well okay 
 so what we're going to do is use dan 
 pope's fantastic pie game zero um 
 library to make a game 
 called cat disco so what i've done 
 is uh is downloaded a bunch of cat 
 images really already 
 and i've downloaded 
 some meow sounds 
 yep 
 the audio works 
 and i've also downloaded 
 i typed into google cat disco and this 
 is the top 
 result 
 [Music] 
 that's so annoying uh 
 so 
 what i've done 
 is essentially told pygame0 that these 
 are the assets that we're going to use 
 in this code that we see above us okay 
 so we have a list of 
 the names of the cat images in the cats 
 list we have in the meows list uh a list 
 of wave forms okay that represent the 
 meows that i downloaded current cats is 
 something that is an empty list an empty 
 bag of cats as it were this is going to 
 be a terrible metaphor 
 a terrible sack of cats that we're going 
 to put cats into and we just want the 
 music to play so um this is an 
 educational learning environment there's 
 not a lot that's going on here but still 
 we can play 
 and we just get 
 a blank 
 window playing that really annoying cat 
 music so what we want to do is perhaps 
 introduce a concept like a function so 
 let's define a function and the problem 
 i have is that there's a light right 
 behind me that's shiny 
 right where i want to type so i'm just 
 going to do this 
 so functions have names 
 there we go and we can add uh 
 we can add um 
 comments to explain what the function 
 does uh draw stuff on the screen okay 
 and 
 uh what else do i need to do i want to 
 do screen dot fill so i might at this 
 point introduce the concept of rgb red 
 green blue the amount of red green or 
 blue that we use so this is good i'm 
 wearing my glasses so i can see the code 
 fragments i've got here but i can't now 
 see what i'm doing here 
 bear with me folks 
 so 
 here we go so how much red do we need 
 let's give it all the red 
 all the green and all the blue okay 
 because computers count up to that much 
 when they're doing um 
 when they're 
 mixing colors so we should get a white 
 background now and i might also 
 introduce the concept of a for loop so 
 for each of the cats in the current 
 cats uh 
 bag of cats what i want you to do with 
 that cat is to draw it 
 okay and that's it and if i play 
 we've got a white background and no cats 
 because we've got to do something to get 
 the cats so 
 i'm going to introduce a new function 
 and this is going to be called update 
 because what does it do it updates the 
 state of the game um what do we want to 
 update it with we want more cats okay 
 add cats to game there we go 
 okay so 
 i want 
 to explain something like 
 uh 
 each game has a game loop right so it's 
 forever 
 creating a new cell in an imaginary 
 cartoon 
 film as it were so it's repeating itself 
 this is the game loop so each time the 
 game loop is run it calls this update 
 function and what i want is a one in 100 
 chance of there being a new cat 
 appearing in our stupid cat disco so i'm 
 going to introduce random numbers here 
 so if 
 random dot 
 round 
 rand 
 int where's my spell checker when you 
 need it between 1 and 100 
 equals 
 one 
 okay then i want to do some stuff okay 
 to add the cats so i want a cat sprite 
 which represents 
 what's going to be shown on the screen 
 and i'm going to use random again to 
 choose at random one of the cats 
 from the cat image 
 list i also want a meow to play so i'm 
 gonna have to define a meow sounds 
 [Music] 
 we also need a position on the screen so 
 i could start talking about coordinates 
 here so i'm not going to because you're 
 all python developers and you understand 
 what this is 
 all about um 
 okay and i want it to be 
 and 700 here and a y-coordinate 
 dot around int 
 100 500 okay and now we've assembled all 
 the information about the new cats we 
 can create a new cat object here here 
 and it's an actor 
 because the game is like a um 
 [Music] 
 like like a stage really okay and that 
 needs to have the cat sprite 
 because that tells it i can't spell 
 sprite 
 what it needs to look like 
 and it needs to be in position x and y 
 okay if this works first time hallelujah 
 i managed to sacrifice enough chickens 
 this morning 
 where's that line 
 great stuff this is just like using uh 
 whatever it is um 
 [Laughter] 
 i was 
 okay so i've added the new cat to the 
 cat bag okay thank you very much i'm so 
 grateful for that 
 uh 
 and we also want to make play the the 
 the sound and because it's a can of cat 
 disco thing okay i introduced loops 
 before so for cat in 
 current cats okay here's another loop 
 what are we going to do for each cat in 
 the bag well i want to change the angle 
 of the cat and i'm going to make it 
 change by 10 degrees okay 
 ah let's hope this works 
 in 100 chance 
 [Music] 
 it's great isn't it so 
 let me just get my slides back 
 enough of that silliness the important 
 thing is that i was telling a story in 
 the same way that i was telling a story 
 about music theory music performance 
 okay and uh what i was doing i was using 
 coding technique to create something 
 kind of goofy there was a performance 
 going on there and audience interaction 
 as well thank you very much 
 code also exists in a cultural context 
 too and who we celebrate as giants of 
 our world as coders uh reflects our 
 culture i guess and you know no 
 disrespect but the dead composers are 
 kind of the equivalent of these rich 
 white men who run you know surveillance 
 capitalist company capitalism companies 
 as it were um and ten years ago this was 
 kind of all the rage this is uh this is 
 how we want to encourage kids into 
 coding it's because you're going to get 
 rich and what have you and actually i i 
 think we've moved on from that and i'm 
 pleased that we have because it reduces 
 codes merely to financial and economic 
 value and i hope that that goofy cat 
 game showed you that actually 
 code can be valuable in lots of other 
 playful and expressive sorts of ways too 
 so the fundamental question that i want 
 to talk about is how do we cultivate the 
 skills knowledge and ways of attending 
 to the world that we've just explored in 
 both music and code and well this is a 
 journey to experience so in a musical 
 sense how do we get from this beginner 
 violinist 
 to nicola benedetti who's a scottish 
 consul violinist or 
 just a group of friends with an amateur 
 fiddler coming together for a session in 
 the pub you'll see a lot of that in 
 dublin 
 or this this is karla ramnath who's a 
 grammy award-winning hindustani 
 violinist who plays in the indian 
 classical music tradition but she is a 
 violinist 
 a string player or 
 or even this sort of string player this 
 is uh one quarter of a cello quartet 
 from finland called apocalyptica and 
 they play heavy metal and they're pretty 
 awesome okay 
 the important thing that we need to try 
 and figure out is how do we support a 
 beginner fiddler grow into whatever sort 
 of musician they want to be whether that 
 be a heavy metal cellist or a concert 
 violinist or just an amateur who enjoys 
 playing together with their friends okay 
 and 
 i want you to also think about well how 
 might we do that for coders as well how 
 do we help young coders or beginner 
 coders grow into the sorts of software 
 engineers or just maybe amateur coders 
 that 
 that they want to be and well i'm going 
 to give you my answer by telling you 
 with my tongue firmly in my cheek 
 all about my musical 
 journey so 
 a couple of years ago before kovid hits 
 i attended something called oktuberfest 
 organized by a fantastic tuba girl 
 called rachel 
 i'll quote from the website the aim of 
 oktoberfest is to inspire folks to fall 
 in love with a full stack instrumental 
 framework called the tuber 
 octoberfest organized free tuber 
 workshops create online tuber tutorials 
 and curate amazing first experiences 
 with sousaphones and i have to say 
 literally it was a blast 
 my octoberfest mentor suggested some 
 books uh and this one looked good 
 because i imagined it would get me up to 
 speed really quickly but it just wasn't 
 as fun as what i found at oktuberfest 
 and you know i wanted to have a kind of 
 a complete picture of what it is to be a 
 tuba player 
 and so uh i want this this book 
 promised to be a lot more comprehensive 
 at over 900 pages it should include 
 everything i needed to know right 
 but sadly i found that the material was 
 too technical and advanced for me as a 
 beginner 
 and i began to doubt that the tuba was 
 for me 
 so i started watching educational videos 
 about an alternative 
 more lightweight musical instrument 
 framework called the recorder 
 hello everybody i'm sarah and i'm a 
 recruiter 
 hence this video how to play all the 
 notes on the recorder 
 [Music] 
 despite being a small instrument though 
 the recorder is actually more difficult 
 than i imagined it to be so i returned 
 to my first love the full stack tuba 
 framework 
 and then a musical friend told me that 
 actual musical auditions involved 
 solving harmony and counterpoint 
 problems on whiteboards so they 
 suggested that i got in 
 see where i'm going with this so they 
 suggested that i got 
 into music theory and i found some two 
 minute videos all about music music 
 theory just like this one 
 [Music] 
 major and minor chords aren't the only 
 kinds of triads that we can build we can 
 also build augmented and diminished 
 triads however unlike the major and 
 minor chords which signify the quality 
 of the third 
 augmented and diminished chords signify 
 the quality of the fifth let's look 
 first at the augmented chord the word 
 augment 
 means to expand and that's a good way of 
 thinking about this chord let's start 
 with a major triad say c e and g there's 
 a perfect fifth between the c and the g 
 right now but we want to augment it and 
 so we'll raise the g by a half step 
 that gives us c e and g sharp which 
 spells a c augmented chord interesting 
 to note the makeup of this chord is two 
 major thirds stacked on top of each 
 other 
 do you have any idea what he's on about 
 music theory sort of seems to make 
 quantum mechanics look like an episode 
 of peppa pig if you ask me 
 anyway 
 i spotted a poster on the london 
 underground for a boot camp and if i 
 handed over 
 six thousand pounds and lived off my 
 life savings for three months they would 
 teach me everything i needed to know 
 about coding that's what the advert said 
 and they also claimed that 80 they had 
 an 80 success rate at placing graduates 
 of their scheme within one year of 
 completing 
 surely this was too good to be true 
 i've literally taken a boot camp website 
 and replaced code with music on that 
 screenshot 
 um 
 i learned all sorts of things theory how 
 to read musical notes delivery how to 
 use my tuba to play all the notes in the 
 first octave infrastructure like how to 
 wear a tuxedo for an orchestral concert 
 best practices like turning the pages of 
 the score really quietly in the quiet 
 bits 
 and i was even told next steps the 
 advanced concepts that i could really 
 look forward to when i got my first gig 
 things like for instance key signatures 
 and time signatures 
 but out of a cohort of 50 
 only five of us actually graduated but 
 out of those five four of us 80 have 
 found jobs relating to music although 
 our new employers don't let us actually 
 touch any of the instruments 
 joking aside uh that little thought 
 experiment i wanted to i wanted perhaps 
 to let you see 
 how all the wonderful things that we try 
 to do the books the django girls taster 
 days the beginner coding videos and the 
 computer science channels appear to 
 non-coders 
 i also want to point out that the music 
 world like our world is very similar and 
 there are lots of wonderful people who 
 do amazing things oktuberfest is a real 
 thing and it's run by a totally 
 wonderful person called rachel coles 
 okay sarah jeffries team recorder 
 channel and jesse strickland's two 
 minute music video channel are examples 
 of formidably talented musicians who 
 mentor and teach through a digital 
 medium 
 but something doesn't quite feel right 
 does it 
 so tomorrow we have a kaylee right would 
 you turn up to dance at that kaylee if i 
 told you that tomorrow evening's 
 performers had just finished a 
 three-month boot camp 
 in music 
 i kind of feel it's perhaps dangerous pr 
 over-promising and it also perhaps sets 
 people up to find themselves in a very 
 difficult situation when the three 
 months of filling your brain with stuff 
 doesn't actually 
 match the reality of what it is to be a 
 software developer or a software 
 engineer and sadly 
 investigative journalists last year 
 uncovered how can i put this creative 
 statistics 
 in the claims made by many boot camps 
 i hope we can all agree it takes a long 
 time to get proficient 
 my unease 
 is that the speed at which we seem to 
 think folks pick this sort of stuff 0 to 
 30. it's not a race is it my unease is 
 that we have un um 
 unreasonable expectations of learners 
 okay 
 i also feel that 
 that sort of education perhaps 
 concentrating on just the syntax or the 
 language constructs is at the exclusion 
 of everything else is a very limited 
 view of what coding is as i hope we saw 
 with the splatter cat game or the cat 
 disco game there's a lot more going on 
 when we're coding we're expressing 
 ourselves okay 
 and i also think that 
 given the examples that i gave you 
 they're very didactic 
 they're expert-led and they're show and 
 tell and 
 actually they don't include 
 as i hope you saw from the musical 
 examples like actual performance 
 opportunities and things like that that 
 you actually need to learn to do if 
 you're for a musician um what about 
 things like you know uh fostering 
 autonomy or playful exploration of a 
 problem space or uh create or helping 
 folks come to terms excuse me with their 
 mental models 
 or creative thinking you know 
 i think we should also concentrate on 
 helping people acquire skills to become 
 proficient in that 
 so what do musicians really do 
 well 
 actually they're honest and they tell 
 people that learning music instrument is 
 hard 
 and what they do is they use progressive 
 processes and practices to sustain 
 learners in other words there are kind 
 of stepping stones so instead of 
 so not only is there lots of beginner 
 stuff and of course there's lots of 
 advanced stuff but they make sure that 
 there's lots of material in the meantime 
 that gets you from beginner to advanced 
 okay and the best educators embody 
 musical practices so that learners 
 encounter a real musician doing actual 
 musical things not just a teacher 
 explaining things 
 and they encompass all knowledge skills 
 and ways of attending to music as well 
 not just some narrow academic view of 
 what music might be 
 and so i want to share and celebrate uh 
 one of the many examples of music 
 education that i've been very lucky to 
 to observe and this is music for youth 
 which is a charity in the uk 
 and what they do is they provide free 
 performance and progression 
 opportunities for young performers 
 and they make it very clear that all 
 backgrounds and styles of music making 
 are welcome 
 and it's also most importantly a safe 
 space to be creative 
 um another aspect of this 
 that's my wife up there and she's in the 
 audience and she just looked at me and 
 gone oh god how could you possibly do 
 that 
 my wife is a music educator which is why 
 music education is a large part of my 
 life as well and this is her last friday 
 with one of her students um 
 participating in a real performance at 
 the symphony hall in birmingham one of 
 the top concert halls in the uk 
 and they have music mentals there that 
 give guidance and constructive criticism 
 to these folks as well so that they they 
 have something to grow and learn with 
 but actually perhaps most importantly of 
 all for me 
 music for youth embodies a group of 
 passionate musicians who embody a 
 certain sort of inclusive 
 musical culture 
 so 
 we heard 
 this morning 
 vicky talked very movingly about john 
 this is john john pinner john founded 
 pycon uk in 2007 and he was the euro 
 python chair between 2009 and 2010 
 and he sadly lost his fight with cancer 
 in 2015 
 john 
 and i used music for youth as our 
 template for the pycon uk education 
 track when we set it up in 2011. this is 
 important because asking what sort of 
 education and learning our community 
 supports is how we decide what sort of 
 community we become 
 for it's through education and learning 
 that we get to meet and talk to our 
 future colleagues friends and supporters 
 coding education isn't just explaining 
 stuff 
 what we wanted to do with the education 
 track is embody 
 just like music for youth 
 the sorts of behavior attitudes skills 
 attention and knowledge that we hoped 
 to inspire in our newest pythonistas 
 and we wanted them to see that this was 
 a long and slow journey 
 and at times 
 frustrating too 
 but it's also a journey made possible 
 because folks no matter how old they are 
 were encouraged to step up and support 
 learners 
 and by taking these steps learners 
 encountered and practiced what it is to 
 be a python coder in an inclusive 
 supportive and diverse community it 
 works yes 
 and between 2012 and 2015 each year we 
 welcomed up to 50 teachers and over 100 
 kids at pycon uk and we encouraged folks 
 to sustain their learning journey build 
 on what they had learned in the 
 community in the conference and step 
 into the community and become a part of 
 it 
 just as the music mentors in music for 
 youth do 
 now i want to briefly and respectfully 
 and very carefully describe my personal 
 experience of what happens when we don't 
 embody this sort of community 
 in 2017 it was made very clear to me in 
 no uncertain terms that my contributions 
 to the education track were unwelcome 
 unless they were on message 
 and conformed to a certain corporate-led 
 view of python in education in the uk 
 that meant that the education track was 
 no longer no longer embodied an 
 inclusive coding culture where everyone 
 no matter their background was welcome 
 to contribute and participate in a way 
 that reflected their part in our 
 wonderful diverse community 
 and when i carefully and respectfully 
 raised concerns i was put in my place 
 the following year 
 wonderful ben nuttall was in charge of 
 the education track and i hoped 
 that we could return to our original 
 sort of vision of embodying a particular 
 inclusive community so i reached out and 
 here's ben 
 wonderful ben engaging with my fears in 
 a way that is kind thoughtful and 
 importantly embodies just the sort of 
 community that we want to encourage 
 through an education track 
 but things started to go wrong for me 
 i don't think that the sender of this 
 clearly unwelcoming message was doing it 
 to make some sort of weird paradoxical 
 or ironic joke 
 silencing genuine concerns about our 
 community with ill-judged and welcoming 
 messages like this 
 just proves that such concerns are 
 well-founded 
 and if folks express sadness frustration 
 or come to our community from a 
 heartfelt place of difficulty uh i'd ask 
 you to please show compassion 
 because that's the best way to show 
 leadership in our community 
 because we need to be honest 
 despite our best efforts 
 folks in the python community can and 
 are difficult by way of example 
 this was my new related inbox from a few 
 months ago and i wasn't the only mew 
 developer to be developer to be on the 
 receiving end of this sort of stuff 
 and i wish i could say that these things 
 were rare but sadly they're not 
 so how did my experience uh in the 
 community make me feel well i felt 
 crushed because a community that clearly 
 prides itself in being welcoming 
 inclusive and supportive clearly wasn't 
 as well 
 as demonstrated by my inbox it still 
 isn't at times 
 i felt humiliated 
 because much of this played out on 
 social media 
 i'm actually a very shy and private 
 person despite who you think you may see 
 on the stage in front of you right now 
 and it's deeply wounding to be attacked 
 on social media 
 and i also felt despondent 2018 was a 
 dipping it was a tipping point for me 
 and since then for the sake of my mental 
 health i've had nothing to do with the 
 formal uk python community or python uk 
 and for what it's worth i hope people in 
 the uk path and community never treat 
 one of their own like this ever again 
 so why is this important 
 well 
 code isn't written for computers 
 in the same way that music isn't written 
 for instruments 
 we write code because we're human beings 
 imbued with ideas imagination and 
 feelings 
 and code expresses our thoughts made 
 digital 
 a medium for our values cultures and 
 ways of life whatever they may be in all 
 that colorful variety 
 in other words we are expressing 
 ourselves when we write code our code 
 reflects who we are it reflects where we 
 come from our code also reflects how we 
 want to be in the world 
 and if there's one thing i hope we 
 coders can learn from the best of the 
 world of music 
 is compassion tolerance and respect 
 freedom of expression in all the ways 
 that music represents 
 in a recent interview the chinese 
 american cellist yo-yo ma 
 explained the job of a musician is to 
 transcend technique in order to express 
 something of value 
 we explore lots of different music 
 through our instruments and we love it 
 because it allows us to encounter 
 different states of mind 
 as developers we write code 
 we're trying to express something of 
 value when we write code we're exploring 
 and we're interacting with our world 
 through the code and the applications 
 that we create 
 but what does he mean by transcending 
 technique 
 at the start we examined various 
 different ways 
 lots of skills aspects of knowledge and 
 ways to pay attention to the world okay 
 for coding and for music and these are 
 the sorts of things that we learn when 
 we want to become musicians and coders 
 and i think this is what yo-yo ma means 
 when he talks about 
 technique 
 but when we express ourselves we take 
 all this stuff we assemble it we refine 
 it we fix it we break it and we play 
 around with it okay and in so doing we 
 put a little bit of ourselves into that 
 thing that we are making 
 only when we feel safe and secure 
 do we send it into the world so with us 
 can experience it 
 i get to encounter a little bit of you 
 in this thing that you have created 
 my world is made larger as a result 
 now to finish 
 i'm going to play 
 well i'm going to attempt to transcend 
 my shonky piano technique actually i'm 
 going to play a piece of music for you 
 and while i play 
 i want you to consider the ways in which 
 you may transcend programming technique 
 and create something that expresses your 
 unique and valuable place in the world 
 and 
 to help you assume a thoughtful mood 
 i've always wanted to do this because 
 i'm going to feel like a yoga teacher 
 now i want you to close your eyes and 
 relax 
 and imagine it's a warm summer's night 
 the moon is shining 
 it's very peaceful 
 and you're with a friend or someone you 
 love 
 can you see that place 
 [Music] 
 so 
 [Music] 
 so 
 [Music] 
 so 
 [Music] 
 you can clap now 
 we we have maybe uh time for one or two 
 questions yeah everyone in the audience 
 if you have time 
 once come up to the mic 
 plan for just one or two questions 
 online as well oh yeah um 
 if there are any online 
 there aren't i've been monitoring 
 there's no no one in the queue so far 
 looks like we didn't oh two online sorry 
 two online oh okay wow so yeah let's get 
 the remote person 
 hello 
 hi there uh thank you for your very 
 beautiful talk and your performance and 
 sharing all of this personal aspect of 
 your your life in coding and your life 
 music 
 and taking your meta for a little bit uh 
 in a place you've already gone to a 
 certain extent i i was hoping i could 
 ask your 
 uh reflection on 
 that 
 bipolar between 
 expressiveness and virtuosity and how 
 does that reflect for you in code 
 yeah okay that's a really great question 
 so there's the sort of the technical 
 side of things isn't there and then 
 there's the 
 touchy feely expressive side of things 
 and i would say 
 that 
 to do it properly to do it well 
 you have to do both 
 um 
 it's not an awe 
 to use a really bad programmer metaphor 
 it's an and you want to do both you need 
 to be good at the technique of 
 programming and understand all the 
 perhaps academic stuff that you need to 
 know to be an effective code but at the 
 same time you need to be able to express 
 yourself have that presence of mind and 
 depth of personality to think you know 
 what i think i'm going to build this 
 sort of way and have your own particular 
 style i think and actually it's 
 important you might think well what 
 style got to do with coding well what do 
 you think the zen of python is if that's 
 not a particular aesthetic of how coding 
 is and you compare the way we think 
 about coding with how perhaps plural 
 coders think about things you know 
 there's python easters we always say 
 well there's always one way to there 
 should only be one way to do things but 
 a perl programmer would say well there's 
 always one more more than one way to do 
 things so i think i quite like like that 
 sort of thinking about the aesthetics of 
 a programming language and what the uh 
 the core developers talked about earlier 
 on in the panel about how adding a 
 feature changes the way people will use 
 the language was also a very thoughtful 
 piece so thank you lucas for 
 for bringing that out for us as well so 
 does that answer your question thank you 
 and we have another question so yeah we 
 have one more remote 
 oh hello 
 hello 
 this is ben nuttall ladies and gentlemen 
 how are you doing ben 
 i'm i'm okay thank you uh really nice to 
 be able to see your talk remotely um a 
 less intelligent question 
 um i i'm just i noticed how small your 
 piano looks and i was just quite 
 concerned whether 
 you know does it scale 
 [Applause] 
 bravo ben 
 not as well as the tuba 
 actually if you're interested this is a 
 this is a i think a three-quarter length 
 grand the ones that they use like in the 
 albert hall are 
 a lot well they're not a lot but they're 
 bigger than this but 
 yeah it's a very nice instrument we 
 should have pianos at pycon we should 
 have music at baikon definitely which is 
 why you should all come to the kv 
 tomorrow evening as well because that's 
 going to be really wonderful too 
 so that answers your question ben 
 awesome get well soon as well matey hope 
 to see you 
 soon uh one quick question one last 
 quick question nicholas thank you for 
 your presentation 
 um 
 i'm a beginner coder and i start coded a 
 few years ago and 
 right about the time i started taking 
 taekwondo lessons with my uh oldest son 
 and we get we we every now and then we 
 have exams and we get a belt that really 
 put us on the 
 the next path on the next track 
 and it excites us a little bit to 
 continue and it's a reward how can we 
 gamify coding i know there is a lot of 
 things about their insights 
 especially 
 but how can we as a community get peer 
 coding 
 get someone to help us 
 go the extra mile and 
 without i found i'll find a small 
 community to do that and you know that 
 but uh how can that be broadcasted to 
 other people that ask that so 
 um that's a really hard task to do 
 i have my ideas and i'm working on stuff 
 that directly addresses what you've said 
 i'm doing some work on something called 
 co-grades which is 
 like belts for martial arts or music 
 grades or ballet grades or whatever but 
 for coding so that 
 you know folks can get those 
 levels and and it helps them keep their 
 wind in their sails and you know they've 
 got a framework for learning as well 
 which goes back to my point about how 
 musicians don't just concentrate on 
 beginners in advance they make sure that 
 there's a 
 progression there and we simply don't 
 have that and i think that if there's 
 one thing i hope to see in the world of 
 coding education over the next decade if 
 the last decade was an explosion because 
 of raspberry pi and microbit and things 
 like that and now people realize you 
 know coding education is an important 
 thing i think that perhaps now the next 
 decade should be one of refinement and 
 experimentation and one where we 
 we we act as lazy developers and we look 
 at what other 
 worlds uh and uh 
 and things um do the same sort of thing 
 as we want to achieve you know how do 
 musicians uh train which in something 
 that is very very difficult hard how do 
 you become a black belt at karate or 
 taekwondo or whatever that's a hard 
 thing to do can we copy the patterns and 
 the archetypes and the skills and the 
 things the pedagogical techniques from 
 them and transplant them into coding 
 that's what i would love to see happen 
 awesome well nicole thank you very much 
 this was quite thank you for listening 
 thank you 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because 
 it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i've really loved about today 
 is meeting people of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble and just being 
 able to geek about geek out about sort 
 of shared interests having shared sense 
 of humor with people i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open minded and transparent connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 [Applause] 
 [Music] 
 one two three hello 
 hello everyone 
 how do you enjoy the conference so far 
 okay 
 okay let me ask again 
 how do you enjoy the conference so far 
 thank you very much that sounds way 
 better 
 so 
 many of you will uh know catherine jammu 
 who's a regular at europe python she 
 gave talks tutorials and a keynote and 
 catherine always told me about this 
 project frown loop which is literally 
 women's loop in berlin 
 she really loved the project and 
 and uh 
 and so women's found loop is about 
 bringing women into tech so uh i'm this 
 year i'm very happy i'm not happy 
 catherine is not around but i'm more 
 happy that the founder and ceo frown 
 loop nakima is with us for a keynote 
 today 
 so dr nakima steffelbauer is a digital 
 product executive with expertise in 
 early stage ideation test and 
 development 
 she invests in startups 
 building innovative sustainable products 
 and tech solutions 
 and privately and part of the atomic 
 angel pro angel program she's also an 
 investor 
 um 
 she advises on 
 algorithmic fairness and responsibility 
 on 
 european eu level 
 so 
 i'm very excited and curious to see her 
 keynote about dodging ai dystopia so 
 please give a very very warm welcome to 
 nakima please 
 [Applause] 
 good afternoon 
 i am 
 super excited 
 to be here in dublin for my first euro 
 python keynote 
 and hopefully the first of many 
 and i'm especially excited to talk with 
 you about artificial intelligence and 
 personal responsibility 
 in my normal role or one of my roles in 
 berlin i spend a lot of time speaking 
 with product people speaking with 
 developers speaking with data scientists 
 and with other investors about 
 what ai means for the future 
 particularly 
 in light of 
 how many different areas of our lives 
 are currently being optimized by 
 algorithmic 
 products 
 algorithmic decision making 
 product 
 and a sense that 
 everything can be optimized for better 
 efficiency 
 so to start off with this talk i came up 
 with a slogan 
 i want to ask just generally who knows 
 where the slogan is from 
 you can't save the world alone 
 anyone 
 no one 
 come again 
 so 
 uh i'm a big comics person that's a hint 
 and a half there um and the slogan is 
 actually from 
 the movie that recently came out 
 the justice league 
 it's a really fitting slogan i thought 
 because it's a three-part slogan and 
 it's a slogan that's really relevant to 
 where we are today if you look around 
 and see what's going on in the world 
 right 
 if we were in a movie 
 i would wager that today's landscape 
 would be 
 just about the time where 
 we would want a need for some kind of 
 superhero some kind of heroic savior 
 type character to come in 
 and change things 
 right 
 we are dealing with larger-than-life 
 digital threats 
 we are dealing with 
 slow 
 inefficient governments that are 
 desperately trying to keep up in terms 
 of many of those threats 
 and we're also dealing with rich and or 
 power-hungry industrialists who are 
 super eager to monetize 
 every aspect of human activity that they 
 can 
 so my question is 
 above and beyond the salvation that 
 might be needed at a broader scale 
 where do people working in the tech 
 industry fit in 
 and are we the people that actually 
 might need 
 if not saving 
 some kind of wake-up call 
 thinking about the integration of 
 technology into our daily lives 
 i thought of this image from the matrix 
 movie because i thought that that is 
 probably the closest description 
 of how many of us experience a.i 
 throughout the course of our working 
 life 
 and in our social time 
 it's the big distraction 
 it's the woman in the red dress that you 
 can't take your eyes off of that 
 everyone is talking about 
 whether or not everyone understands the 
 implications of artificial intelligence 
 we are hearing about ai as inevitable 
 we're hearing about it as 
 something greater than human 
 intelligence 
 it's it's meant to be something that 
 everyone will eventually have to engage 
 with 
 and we're also dealing with at least in 
 europe 
 the sense that 
 we have to engage and invest 
 and compete 
 in terms of getting the most innovative 
 aspects of a.i 
 to the cutting edge level because we're 
 in a race 
 we're competing against the americans 
 we're competing against the chinese and 
 somehow there's either a prize to be won 
 or there's some 
 overall benefit in being first in 
 implementing all manner of automation 
 and automated decision-making systems 
 that exist 
 i think this is more of a distraction 
 than anything else and i think it's a 
 really dangerous distraction and i'll 
 tell you why 
 we as people who are working in the tech 
 industry more so than civilians who are 
 hearing about 
 all the cool things that technology is 
 meant to bring 
 we are the ones who are supposed who are 
 meant to be skeptical 
 and who are meant to evaluate a little 
 bit more thoroughly the claims and the 
 promises of any new technologies that we 
 may have to implement 
 but what we're not often thinking about 
 talking about or having integrated into 
 our processes 
 is 
 what are the impact 
 downstream 
 of artificial intelligence 
 what i'm talking about in terms of 
 impact is 
 the people 
 whose data is being collected and 
 categorized and utilized for 
 financial purposes obviously but 
 primarily to optimize algorithms that 
 then can make predictions and 
 recommendations more effectively 
 how much do the people whose data is 
 used for these purposes understand 
 what's happening 
 then on the flip side 
 those of us who are working in 
 technology but are not data scientists 
 and are not in the details of exactly 
 what type of data is being 
 optimized is being 
 vetted for ethical capture is being 
 tested and modeled 
 how much do any of us understand about 
 the impacts of the artificial 
 intelligence that 
 so many companies are boasting about 
 putting into implementation 
 we are meant to be the ones who are 
 checking 
 the tires 
 kicking the wheels and trying to 
 understand exactly what is puffery and 
 what is real based on understanding that 
 most things are built 
 in a series of steps and are built by a 
 series of different contributors and 
 there's no magic behind the computer 
 screen 
 but what usually happens when it comes 
 to ai projects i've found is the 
 opposite 
 it's not the skepticism we're used to 
 displaying in other areas 
 it's something else 
 agile methodologies are awesome as most 
 of us who've worked in the industry for 
 years will will tell you because they 
 have created a way to optimize 
 productivity efficiency and functional 
 effectiveness in a variety of different 
 media and in a variety of different 
 time zones it's a way of organizing work 
 that can get you 
 a multi-faceted team that's focused on 
 one result and 
 has visibility and flexibility into how 
 that result is achieved 
 but the problem is 
 that in all of these efficient processes 
 the point of the project 
 and particularly the impact on the 
 people behind 
 the data 
 that's creating these algorithms and 
 these systems 
 often gets lost 
 it often gets lost because 
 to cite the well-known amazon ai problem 
 you can be so focused on fixing whatever 
 the technical problem is in the amazon 
 case recruiting more candidates more 
 effectively using models that are meant 
 to sift the best candidates out 
 that you can move away from what 
 the ethics are around 
 the type of sorting and classification 
 that you're doing and you cannot have 
 your focus 
 based on whatever area 
 in the company you're working in 
 you may not have the responsibility for 
 thinking about or reflecting on or 
 responding to 
 any of the problems that crop up and 
 surprises that crop up in the course of 
 implementing your algorithm 
 which for anyone who doesn't know in the 
 amazon case i'm referring to was a 
 piloted hiring algorithm that was 
 intended to sift through the best 
 candidates it was pulled out of pilot 
 phase because it was shown to be 
 discriminating against the candidates 
 that had been treated as outliers which 
 were female candidates because the data 
 historical data that was used for this 
 algorithm's training 
 was heavily skewed towards male 
 applicants who had been the most 
 successful historically at the company 
 prior to this algorithm's creation 
 so 
 despite the functional areas that i show 
 on this slide 
 the area that i show in the lower left 
 is the one that 
 in the case of 
 artificial intelligence 
 is a paramount importance 
 it's 
 exactly the questions that 
 are not the responsibility of any of 
 these 
 functional areas 
 and it's exactly the kinds of problems 
 that are listed 
 personally identifiable data data 
 scraped from the web 
 consent for data usage and in what 
 areas the consent is given those are 
 exactly the areas that tend to cause the 
 problems 
 further downstream 
 i mentioned that many of us have gotten 
 into the tech industry and are working 
 as builders and working as coders in 
 order to 
 change 
 something improve something about the 
 world that we're living in 
 that's not to say that we're not 
 dreamers quite the opposite i think many 
 of us would love to believe that some of 
 the amazing technologies that have come 
 out recently and specifically the 
 products and services that have been 
 created are actually doing something 
 cool useful or at least adding to the 
 convenience of human beings 
 right when we are talking about 
 cool ai things maybe outside of the 
 medical industry we're not talking about 
 identifying cancerous tumors earlier or 
 better than humans we're talking about 
 slightly less weighty subjects 
 we tend to be the people 
 who are talking about 
 how incredibly fast and how incredibly 
 big the change is 
 in 
 using algorithms 
 that 10 years ago or even five years ago 
 would not have been able to make 
 the recommendations that 
 netflix shows 
 are making or 
 the algorithms that are able to 
 basically create home concierge systems 
 that allow you to do everything start 
 everything 
 engage with anyone from your car 
 from your refrigerator from various 
 appliances various areas in your home or 
 office that didn't exist except maybe on 
 science fiction television shows in a 
 previous time 
 but sometimes 
 and this is the point that i'm getting 
 to with 
 this highlight about the convenience 
 aspect of many ai technologies 
 sometimes pretty harmless data 
 and a pretty harmless optimization 
 can lead to a not so harmless 
 implementation based on 
 the ways that commercializing the data 
 change 
 when you incorporate 
 government 
 or local agencies 
 that don't have 
 any particular 
 financial interest 
 but also don't necessarily 
 respect the idea of 
 consent and the idea of 
 data attributed to connected to 
 individuals 
 who 
 actually have some ownership 
 of 
 the information that they're sharing 
 has anybody heard about the iccl case 
 from just a month two months ago that 
 has been popularized all over um if you 
 haven't it's a super interesting case 
 because it's an example of 
 the differences between 
 the kind of data that 
 anybody can find online 
 and that data being used by quasi 
 governmental and private sector 
 interests 
 to monetize 
 the iccl complaint was submitted in may 
 and it's an irish 
 civil 
 liberties 
 organization that did an investigation 
 into the use of irish 
 census 
 and postal data 
 and how it was being sold to third 
 parties um like experian like other 
 multinationals for the purpose of 
 and i quote geographic lifestyle 
 profiling 
 that geographic lifestyle profiling 
 algorithm was also investigated by the 
 researchers who did who filed the 
 complaint 
 and what they found was 
 a range of labels that were basically 
 being utilized in assessing credit 
 applications and various other financial 
 services that were being offered or were 
 being refused to irish residents 
 based on 
 information 
 pulled from the census records and 
 information pulled from the postal 
 service 
 the really interesting aspect of all of 
 this 
 information flow was that 
 no one in ireland knew that this was 
 happening 
 and until the investigation and the 
 complaint was filed 
 no one knew 
 what kind of labels and what kinds of 
 classification were being made without 
 their knowledge on a widespread basis on 
 essentially everyone resident in ireland 
 no one knew that they were being 
 classified in the ways described 
 affluent deprived whether their marital 
 status cohabitation status 
 cultural background 
 labor market skills were all being 
 incorporated into 
 an algorithm or multiple algorithms that 
 private sector companies were using to 
 then determine who was eligible for what 
 kinds of financial and other benefits 
 so the no one the wiser 
 aspect of what was going on in ireland 
 is a really interesting thing to keep in 
 mind because 
 that's a key aspect of how 
 this 
 geographic profiling algorithm went 
 wrong 
 what we're talking about 
 is data exchanges 
 versus data extraction 
 right 
 because we know that ai requires massive 
 amounts of data in order to create 
 models and then train them in a way 
 that's more reliable 
 consent becomes paramount even if we're 
 talking about millions and millions of 
 data points because those data points 
 represent people and those rep those 
 data points may also represent very 
 sensitive aspects of people's lives and 
 experiences 
 in comics and in movies 
 where i started off with the talk 
 you usually get to a turning point where 
 things get so terrible that 
 it's clear that something has to give 
 in real life 
 unfortunately that's not how it works 
 because in real life what typically 
 happens is that you slowly start to 
 realize 
 based on the experiences of other people 
 that 
 bad stuff is happening 
 to other people 
 and slowly you might start to clue in 
 that 
 those people bad things are happening to 
 maybe closer to me than i thought 
 they may be more like me than i thought 
 that's where i'm getting to 
 when looking at 
 the next aspect of 
 ai as classification 
 and ultimately as dystopia 
 most of you i'm assuming have heard 
 about the recent u.s supreme court 
 having overturned the roe vs wade 
 judgment 
 and 
 what that has meant for many of the 
 states that immediately codified that 
 judgment into law 
 what you might not be aware of is the 
 fact that google has since 
 the judgment 
 declared that they would remove 
 any 
 location data of any of their users that 
 involves clinics 
 that provide abortion services so they 
 would sift through the data from 
 everyone's phone and web browsers that 
 shows that they've been 
 visiting they've been checking the 
 distance they've been in some way 
 in contact with abortion clinics in the 
 united states that could be searched 
 from their 
 their history 
 so when i was discussing this with a 
 female developer friend 
 they asked me 
 why 
 that's great it's great that google has 
 done the right thing and has decided not 
 to provide this type of information for 
 all of their billions of users or 
 millions of users in the united states 
 to u.s local authorities what's not 
 great is why they have so much data 
 and so much detail 
 in the first place 
 and that makes me think 
 about what it means for any company for 
 any government for any entity whatsoever 
 to hold on to let alone actively collect 
 mass amounts of data without 
 your explicit consent 
 not your consent for the data to be 
 collected and held on to 
 but your consent for the data to be 
 passed to local authorities or 
 international authorities or anybody 
 where i'm going with this is what 
 the collection of mass data in of itself 
 regardless of who's doing it tends to 
 suggest 
 no one will probably be surprised 
 now that dark mirror has been on the 
 air and has come and gone 
 that china is already working on gate 
 recognition 
 ai 
 and has been optimizing it and has been 
 essentially perfecting it to the point 
 that it is already in use in many cities 
 and it is already 
 undetectable based on using cctv footage 
 that can be 
 pretty much 
 operated at will without the subjects 
 knowing 
 again the operative phrase here is 
 without the subject's knowledge 
 if you're able to use video footage and 
 to run gate recognition software that's 
 intended to identify people at 50 meters 
 distance 
 what are you really saying about 
 how you want to treat people as 
 individuals 
 because it seems like 
 guilty until proven innocent is the way 
 that the direction that that's probably 
 going in 
 it also seems like 
 that type of usage 
 of 
 mass collection of biometric data 
 and then the presumption of guilt 
 unless there's a match that proves 
 otherwise 
 is making 
 essentially is making uh 
 the algorithm 
 that's identifying people by their gate 
 into the decider 
 right so it's no longer a human 
 decision that's happening it's a tool 
 that's being trusted to recommend a 
 match 
 or 
 confirm that there is no match 
 this would be bad enough if it was only 
 happening in china of course 
 it's not only happening in china and 
 there's many many examples among them 
 a check company here in the eu 
 which is not the only company but one of 
 several that has received eu funding to 
 do optimization of gate recognition 
 software again to get the likelihood of 
 matching 
 up to and above 90 
 96 
 all of which to be done at a distance 
 for purposes 
 you can only ask yourself what those 
 might be 
 the other thing you can ask yourself is 
 what happens when these tools these 
 algorithms that we've decided are so 
 much better than humans at mapping 
 data at figuring out and confirming 
 identities 
 what happens when they're wrong 
 we have the examples all around us 
 we have 
 no longer member of the eu but 
 in the uk in london this week 
 we have examples 
 of facial recognition trials 
 ongoing despite the fact that 
 everybody's seen coded bias everybody's 
 heard i hope about 
 the gender shades project 
 tiemnic gabriel 
 joy bulmuini 
 debaraji 
 talking about how this facial 
 recognition technology is not 
 reliable 
 does not work equally on everyone 
 has led to a moratorium 
 one year moratorium 
 ibm microsoft amazon all decided uh 
 we're not going to deal with all of the 
 negative press anymore 
 we're going to limit the sale of our 
 facial recognition 
 tools to law enforcement because clearly 
 there's a discrepancy 
 notwithstanding all of that 
 this was just this week in london 
 when the technology doesn't work or 
 doesn't work as it's meant to work 
 the human tendency is to trust the 
 algorithm and this is why you have posts 
 like this and you can expect to see more 
 posts like this that say 
 everyone could see i could see other 
 people around could see that this was 
 wrong this error was clear and yet the 
 subject 
 was not the one who was trusted the 
 algorithm was trusted and the woman 
 cited in this case got arrested 
 behaving as if 
 is a huge problem with relying on 
 algorithms and ai which is not so 
 intelligent because behaving as if means 
 you're assuming that the algorithm is 
 correct 
 in terms of the 
 different types of algorithmic software 
 that are on the market 
 the worst is not facial recognition 
 and unfortunately the worst is not gate 
 recognition from afar 
 we have plenty of contenders 
 in and outside of the eu 
 that are working on voice behavioral 
 analytics 
 what are voice behavioral analytics 
 about 
 in theory 
 you may see the light bright version of 
 optimized algorithms that make your call 
 centers work much more effectively that 
 may even replace the humans in your call 
 centers because they're so effective and 
 people like to engage with these 
 synthesized algorithmic chat bots so 
 much more than with real humans 
 reality 
 what voice behavioral analytics 
 ais 
 tend to do 
 is 
 they tend to 
 be applied to an a range of spurious 
 uses such as 
 identifying mental disorders from 
 someone's voice 
 determining the best candidates for a 
 job or the candidate's success rate 
 from the candidate's voice 
 creating 
 prediction algorithms that determine 
 what the likelihood of credit default is 
 from the caller's voice 
 these are real things these are real 
 algorithms 
 whether or not they work is in question 
 but the fact that they are for sale 
 today on the market and not just outside 
 of the eu 
 although most of these algorithms that 
 i've been able to find are produced 
 outside of the eu 
 they are by far 
 not only being sold by non-eu far far 
 away 
 countries and companies 
 if anybody knows the movie sorry to 
 bother you indie movie 
 from a few years back 
 they'll remember 
 that a key point of that movie was that 
 faking your vocal 
 pitch 
 and tone 
 and cadence 
 is actually a way of life already for 
 anybody who's ever faced discrimination 
 on the basis of their accent 
 and their dialect or 
 even having too much vibrato in their 
 voice 
 and yet 
 voice analysis for character and for 
 trustworthiness are still being sold at 
 an incredible clip 
 but that's not all 
 as everyone has been paying attention to 
 the headlines now 
 zoom just recently alongside a face 
 section alongside of uniphone which are 
 market leaders in their class 
 have already decided that emotion 
 tracking is the next horizon of everyone 
 going online 
 because of the pandemic 
 so 
 despite the fact that i think everyone 
 who's ever sat in back-to-back meetings 
 understands that your facial expressions 
 may have little to nothing to do with 
 your actual 
 emotional state 
 this is still a thing 
 and it's likely to become a thing once 
 zoom 
 recalibrates and either decides to 
 over 
 rule 
 the complaints and the protests that 
 have been put forward by fight for the 
 future and other human rights 
 organizations or 
 other companies that are making great 
 income from rolling out this kind of 
 software 
 and purporting to identify 
 age 
 emotional state 
 there are some questions as to 
 whether or not cultural background may 
 or may not affect the effect the 
 relevance of these ai 
 but they're certainly not slowing the 
 pace with which they're being sold which 
 is why 
 fight for the future for example called 
 emotion tracking ai and i quote 
 discriminatory manipulative and based on 
 the flawed assumption 
 that markers such as voice pattern 
 facial expressions 
 and body language 
 are uniform for all people 
 just a comment here if you 
 for any reason can't imagine 
 what it would be like for your looks and 
 your facial expressions to determine how 
 you're treated 
 talk with a woman 
 or an ethnic minority 
 or a trans person 
 and we'd be really happy to educate you 
 on what that's like 
 it's not great 
 so what can we do 
 all of the examples that i gave 
 and hopefully all of the ones that you 
 can come up with on your own 
 suggest one thing in terms of the 
 direction that artificial intelligence 
 is going 
 in europe and around the world basically 
 we're looking at a future of continued 
 data capture mass data capture and it's 
 going to be very difficult to slow that 
 trend 
 we're dealing with private public all 
 kinds of agencies and companies that are 
 trying to create a reality of smart 
 homes smart watches 
 smart glasses smart cars 
 smart clothing 
 autonomous stores 
 just walk out 
 and despite the best efforts of the 
 digital rights people uh to 
 band-aid patch these issues with 
 personal responsibility um 
 use private browsers or get a vpn or you 
 know only message people on encrypted 
 apps or use data poisoning sites like 
 fox to cloak all of your images so that 
 you can't be 
 the victim of data scraping from the web 
 it's not enough 
 all of these things work to some extent 
 but you can't put the responsibility on 
 individuals 
 so luckily for us 
 we have 
 one model that works 
 does anyone remember if they have worked 
 on web development teams 
 four years back when gdpr came into 
 effect and there was all the grumbling 
 and mumbling about how we're going to 
 get the cookie consent tools and why do 
 we need to get them anyway and how is it 
 going to make a difference when we're 
 already so far 
 into the digital age and everybody's 
 data is already available and blah blah 
 blah 
 this is 
 pretty much the next stage of that and 
 the eu model that was so 
 trashed four years ago when it came into 
 existence 
 is pretty much working now 
 at least in the eu 
 it's pretty much 
 a forerunner for 
 the kind of extended regulation 
 that we can expect and that we're going 
 to need in order for artificial 
 intelligence at least in europe to look 
 different than the examples that i've 
 been giving 
 the eu also has a secret weapon and 
 whether or not your legal 
 buffs or you've been following 
 the latest european court of justice 
 news 
 everybody should have at least a vague 
 understanding that the austrian privacy 
 activist max schrems 
 who's referred to as either max rems 1 
 or max rams 2 
 has two legal cases from 2015 and 2020 
 that have set precedents that mean 
 everything in terms of 
 web data 
 and where it is sent and who has access 
 to it and what they can do with it max 
 schrems is a real person 
 and his legal case in 2015 
 was basically challenging facebook for 
 sending data 
 from the company 
 servers that was collected in the course 
 of normal facebook use of any person in 
 europe to the united states where the 
 headquarters of facebook is 
 so that 
 any u.s authority local or otherwise 
 could make use of and use that data to 
 surveil 
 eu residents 
 the positive judgment in the max trims 1 
 and then later the max rams 2 case in 
 2020 have basically laid the groundwork 
 for what we are trying to do in part 
 with the eu 
 artificial intelligence act 
 in case you're wondering whether it's 
 actually possible to regulate artificial 
 intelligence given how broad and how 
 all-encompassing some of the 
 applications of the technology are 
 never fear because 
 the conversations are happening now 
 european parliament has thousands and 
 thousands of amendments and suggestions 
 on the table that may or may not be 
 included in some part in the act 
 but in 2024 it's happening 
 that's going to be the law just like 
 gdpr and all businesses governments and 
 individual entities will have to get on 
 board so right now 
 what's happening at the parliamentary 
 level is that you have this pyramid that 
 you've probably seen in some form of or 
 other before 
 it's trying to 
 broadly characterize different types of 
 ai at different levels of risk which 
 will involve different degrees of 
 control or 
 ability of 
 private entities public entities to 
 engage in sandbox test and modeling 
 activities 
 if they have 
 some kind of framework for doing so it's 
 going to ideally remove the possibility 
 the companies can do what they're doing 
 now which is just decide to roll out 
 some automated decision algorithm 
 pull data from wherever they have data 
 available allow 
 a third party or several third parties 
 to contribute to the labeling tagging of 
 the data and then test it 
 somehow and then roll it out into 
 production before there's any regulation 
 that's going to stop 
 one of the things that's going to be 
 really important in the future 
 is going to be this concept of 
 imposed 
 versus consent consensual ai 
 the difference between the two 
 is 
 agreeing to provide 
 for example biometric data so that you 
 can 
 verify your identity on your phone or 
 even 
 in a specific space that is 
 biometrically protected 
 versus 
 providing agreeing to provide your 
 biometric data such as your fingerprint 
 or a photo of your face 
 during a 
 behavioral 
 interview whereby you're then going to 
 have that image scanned and assessed by 
 an algorithm that you know nothing about 
 the eu act is going to change many 
 things euai act 
 in terms of 
 what's going to be banned this is hotly 
 discussed at the moment in many many 
 policy and government quarters but 
 essentially 
 it's not being discussed in industry and 
 that's one of the reasons i wanted to 
 include it here 
 what's very likely to be banned outright 
 is 
 emotion recognition ai 
 automated behavioral monitoring of all 
 kinds 
 ai 
 health insurance processing 
 algorithms that involve 
 what you're eligible for and what you're 
 not based on health data or sensitive 
 private health data 
 and 
 private 
 biometric 
 databases 
 consisting of photos videos any other 
 personally identifiable information that 
 has been scraped from a web interface 
 without your explicit consent for 
 purposes unknown to the original 
 holder or owner of the data 
 so how can 
 non-data tech team members 
 respond to this 
 first and foremost i would love it if 
 everyone 
 recognizes that 
 the current state of affairs is not an 
 emergency it is not a pipe dream it is 
 not a far far away thing that happens in 
 other countries it is right now reality 
 and the situation in terms of the most 
 cutting edge researchers working on 
 computer vision working on emotion 
 recognition is dire 
 the headline on this image 
 is taken from 
 a report from last week i believe where 
 the computer vision pattern recognition 
 group had a big conference and the 
 outcome of that big conference was that 
 the vast majority of researchers said 
 it's not my job to worry about impact of 
 the cool algorithms that i'm trying to 
 implement in computer vision i'm not 
 responsible not the researchers in this 
 case but those actually working in 
 industry i'm not responsible for how 
 this data is implemented and whether 
 it's 
 incorporated into a system of 
 surveillance 
 so 
 if we're looking at a situation that 
 we have all this data that's available 
 we have the most cutting edge 
 technologies that are being applied to 
 that data in order to do 
 various different areas 
 of analysis assessment comparison and 
 projection or recommendation 
 and the experts are saying it's not my 
 job 
 we need more people 
 to get involved and maybe not the people 
 who are officially holding the title of 
 data chief or data scientist 
 for everybody who's not one of the data 
 specific team members 
 we need people to understand that this 
 is 
 a little bit worse than the cookie 
 consent tool 
 problem from 
 the web days of 2018. this is about 
 how do we even 
 consider meaningful consent when we're 
 talking about the kinds of data being 
 collected and manipulated that none of 
 us would necessarily consent to if we 
 knew how it was going to be used 
 later 
 this is a situation that calls for 
 everyone to be a little bit braver 
 and a little bit more curious because at 
 the end of the day 
 this is brand new technology and most 
 executives have very little 
 understanding of downstream impact 
 they're not 
 incentivized in any way to care 
 and the same is true for most tech teams 
 including the data teams that are 
 actually working with the models and 
 actually recommending 
 the algorithms 
 we know from working in the industry 
 that tech is fallible and automations 
 fail 
 we know from looking at the headlines 
 that they often fail 
 on the kinds of people who are least 
 likely to hold power in the tech 
 industry and they're also usually going 
 to fail on the people who are least 
 likely to be listened to 
 when 
 they 
 call out the fact that these optimized 
 algorithms were not optimized for 
 non-binary people for trans people for 
 black people for people who are 
 essentially not somehow the target 
 audience 
 don't assume 
 when you're working in a team a company 
 an area that's talking excitedly about 
 algorithms and optimizing something for 
 the purpose of faster decision making 
 more money 
 don't assume that others have asked the 
 questions that you ask and do assume 
 that if you have a perspective and your 
 perspective gives you some insight into 
 what might go wrong 
 that you should at least be able to 
 satisfy yourselves 
 that you know there's some degree of 
 thought that has gone into assessing 
 what might go wrong 
 and where there might be bias 
 in the data that's being collected and 
 optimized in order for algorithms to be 
 produced and put into production 
 for longevity-minded tech people who 
 want to be in this industry for a long 
 term 
 you may not have gone through some of 
 these 
 uh vicissitudes that 
 others have 
 who've been in the industry for a lot 
 longer 
 like me since the last time that the 
 dollar was a parody with the euro 
 the firings 
 the fundraising 
 non-stop 
 the pivots to fix product strategy after 
 there's been a scandal 
 the next year and a half is going to 
 involve a lot more 
 a lot more than hype 
 and a lot more resetting and 
 investigation into a lot of the ai 
 claims that up until now have pretty 
 much guaranteed a windfall of money and 
 a lot of public interest and marketing 
 attention 
 as an investor i can tell you 
 investors and risk 
 is like oil and water they don't mix 
 and 
 a lot of the things that have been less 
 interesting and important in the past 
 such as 
 environmental social 
 corporate governance 
 principles and practices is going to 
 become a lot more important now that 
 we're facing an economic downturn 
 you're going to have a lot more 
 questions about what is the 
 environmental impact of your ai 
 optimized 
 algorithms that are eating up so much 
 energy 
 your social impact if you're potentially 
 affecting the fate of 
 parolees who are being evaluated in 
 terms of whether their emotions 
 show the algorithm that they seem to 
 signal remorse which is a real thing 
 that happens in the united states 
 and in terms of corporate governance do 
 you have any kind of ethical or data 
 privacy or consent 
 meaningful consent rules that exist 
 for your company large or small 
 these are the things that investors are 
 going to care about which means these 
 are the things that companies are going 
 to care about more than ever 
 finally 
 why should everybody who's working on 
 any kind of team product 
 tech infra 
 you name it why should you care about 
 what happens with 
 the ai act in the future and with the 
 direction that artificial intelligence 
 is going in 
 everyone should recognize at this point 
 that ai is being deployed in a way that 
 is not limited to one superficial 
 area or use 
 it is something that 
 there are meetup groups that are meeting 
 every week to talk about who's 
 responsible 
 what's going to happen 
 if the technology fails the algorithm 
 does something objectionable 
 this is not going to be the same as gdpr 
 wherein 
 you used to have 
 lots of opportunities to kick the can 
 down the road when it came to 
 responsibility 
 it was very easy to point to the legal 
 officer or whomever is in the compliance 
 department and say it's their problem 
 they have to figure out what to do about 
 this web data privacy issue or 
 now that we have a lot of chief data 
 officers 
 put it on the chief data officer they'll 
 figure out who's responsible um the 
 reason that the meetups that 
 i cite in this slide in berlin are 90 
 100 people strong is because a lot of 
 developers are asking themselves am i 
 going to be the individual contributor 
 who's responsible when the algorithm 
 that i just coded because i was told 
 that's what the product people 
 executives wanted am i going to be held 
 responsible for that 
 down the road 
 so 
 hopefully 
 everyone understands that this is a very 
 different 
 prospect than web 
 consent for utilizing your web traffic 
 information um even if 
 levels of consent for biometric 
 personally identifiable data 
 sensitive gender or sexual identity data 
 could be collected 
 there are so many different ways that 
 that information can be combined and can 
 be sold and can't be utilized 
 to create recommendations that 
 a one-click option of yes you can use my 
 data is very unlikely to be the case in 
 the future 
 it's not going to be it's very unlikely 
 to be 
 a situation that will be solved by one 
 set of regulation or by one 
 representative in a company it's going 
 to have to be a collective activity 
 and that brings us to my suggestion for 
 how we think about how we solve this ai 
 dystopia problem going forward 
 in my opinion 
 the idea of accountable technology is 
 really about 
 collective accountability it can't be 
 anything else 
 in the case that i say cited at the 
 beginning 
 from the justice league justice for all 
 unite the league 
 i would love it if you would take away 
 from this talk the idea that you should 
 be 
 trying to unite all interested or all 
 concerned tech workers 
 because 
 that's what 
 we're left with 
 we need more people who are deciding 
 not to be responsible not to take 
 responsibility not to contribute to the 
 development of surveillance technologies 
 and 
 yes it's true and while it's true that 
 you can't save the world alone no one 
 can 
 we need more people to step up in lieu 
 of the experts who are busy saying it's 
 not their job 
 we need more people to step up and say 
 we're going to be bold 
 we're going to be loud 
 we're going to ask questions 
 and we're going to reject the kinds of 
 technological futures that we don't want 
 to live in ourselves 
 thank you 
 thank you very much akima for a 
 wonderful keynote 
 we have time for questions 
 if you have a question in the room 
 there's a microphone 
 right here 
 okay we have one so please ask your 
 question 
 hi thank you for a wonderful talk and i 
 want to say that first of all i i 
 completely um understand and believe 
 that marginalized groups are being 
 biased and facing headwinds 
 and that includes um 
 police officers and and parole officers 
 and 
 bankers and 
 juries and judges and whatever 
 i used to believe that 
 even though it's going to take hundreds 
 or thousands of years to fix the human 
 culture with the right regulation the ai 
 could be more ethical than humans do you 
 believe it or you really believe that 
 there is no no hope for ai as well i 
 don't know i don't understand 
 thanks for the question it's a good one 
 um i don't think it's it's fair 
 to 
 pose the question of whether a.i which 
 is really a tool 
 right 
 is is good or is evil or can be saved or 
 cannot be saved i do think that if we 
 look at ai as a tool like any other 
 technological 
 helper 
 that we have to be prepared for ai to 
 not only fail the groups that it's not 
 tested 
 thoroughly amongst but also to be 
 misused and to be used in ways that 
 maybe its developers did not intend did 
 not think of and 
 it's like writing uh 
 an essay where you know 
 good writing instructors will tell you 
 anything that can be misunderstood will 
 be misunderstood 
 that's pretty much what i think about ai 
 anything that looks like 
 surveillance would be really useful for 
 surveillance probably will be used for 
 surveillance discrimination elimination 
 of different groups because if the 
 possibility is there and the tool 
 provides it 
 someone's going to use it 
 thank you 
 yeah thank you for the talk 
 yeah i want to question a little bit 
 about the the order of the presentation 
 i've been working as a 
 yeah as a ai practitioner for five years 
 in 
 quite responsible companies and and the 
 teams are quite responsible and the gdpr 
 actually gives a lot of support 
 for developing ai 
 systems 
 i thought i felt that you introduced the 
 gdpr quite late 
 and i've also felt you marginalized it 
 through the rap 
 domain 
 and it it is 
 yeah it doesn't really 
 apply 
 only the web or i mean that's maybe the 
 the reference the people know the most 
 but if you look at it it really applies 
 to ai systems and 
 and the ai component 
 that i wrote a little piece about it you 
 talked about it but yeah this is an 
 extension of it but it is not a complete 
 rethink you know so why why did you 
 yeah why did you wait so long to 
 introduce the regulation angle 
 i 
 waited to introduce the regulation angle 
 because i think that most people who are 
 not working in the 
 intersection of tech policy and tech 
 production tend to think about 
 regulation as 
 something that's not for them 
 i wanted to ensure that everyone was 
 paying attention and that understood 
 that the technology can and does affect 
 everyday people before getting into 
 what is this regulation 
 about and 
 when is it going to take effect and what 
 do you need to know about it if you want 
 to 
 effectively question and 
 ideally confirm 
 the kinds of practices that your 
 companies are using with regard to their 
 ai 
 all right thanks 
 thank you for the amazing talk 
 i just want to ask you if you have any 
 um 
 groups or 
 association organizations that you can 
 recommend 
 so we can 
 joined to 
 gather forces into like spread the 
 awareness of 
 the 
 am ai misuse 
 thank you 
 sure um 
 in terms of the eu context there's quite 
 a number of organizations the ones that 
 come first to mind are edgy european 
 digital rights initiative 
 they're incredibly active 
 and they're pan-european organization 
 based in brussels 
 digital freedom fund which is a 
 strategic litigation organization based 
 in berlin 
 they do the types of strategic 
 litigation that the max rams case 
 represents and they're always organizing 
 various events for 
 awareness about digital rights and 
 surveillance tech 
 there's another group that's organizing 
 next month sorry in september 
 the color of surveillance 
 and you can look that up not in the us 
 but in the eu that's going to take place 
 in amsterdam 
 and those are just the first three that 
 come to mind there's 
 a lot of them that are based in each 
 european country that i can think of 
 but in terms of 
 umbrella organization edgary's probably 
 the best because they're doing quite a 
 lot in terms of 
 digital rights generally and artificial 
 intelligence as it relates to that 
 so we have time for two more questions 
 and 
 maybe remote questions i'm not sure if 
 we have remote questions 
 thank you for your talks surprisingly it 
 gave me a lot of a lot of hope for the 
 future but 
 i have one i would say ethical 
 philosophical problem because humans 
 are also biased and humans also make mis 
 makes mistakes 
 and if 
 in this example though it might be not 
 the best one but it's the best one i can 
 think of about right now of the parole 
 decision 
 what if we came up with algorithm that 
 well it's not perfect but it still 
 performs better than humans what's your 
 opinion on 
 working with 
 that cases 
 i think you always have to look at 
 the effectiveness of an algorithm that 
 is making a prediction based on 
 usually historical data points 
 in terms of putting it 
 into application in your own life 
 so 
 when you're saying 
 it's possible to come up with an 
 algorithm that works better than 
 other 
 human decision making 
 would that satisfy you if you were a 
 parole applicant and 
 you were being told 
 or given the judgment of 
 some algorithm that's you know the 
 latest of its kind or or would you 
 actually be interested in some kind of 
 fairness that maybe isn't derived from 
 other parolees who look like you or who 
 don't look like you which is what an 
 algorithmic 
 solution to parole applications would 
 involve 
 i think this is really hard to answer 
 and this is why i started with that 
 humans are biased too 
 and 
 simply this is something i can get 
 my mind around off but still 
 you gave me a lot of to think about so 
 thank you 
 sure 
 thank you for your talk i think it's a 
 very inspiring and great talk 
 on the topic of data collection 
 and thinking about iot and more data 
 sources a lot of time the data is like 
 semi 
 obscure are anonymized i was wondering 
 what are your thoughts on that and if 
 we're gonna see more restrictions or 
 maybe taxes and data collections in in 
 the future 
 it's thanks for the question um i'm also 
 interested in iot and how that relates 
 to 
 the upcoming ai act and what kinds of 
 protections may be in place 
 for anonymized data 
 i think that it comes down to 
 classification of the types of data and 
 what the 
 intended uses 
 we're talking about the difference 
 between collecting data from 
 your car 
 in terms of what drivers typically do 
 given a certain 
 circumstance 
 that's fine that's obviously going to be 
 fine regardless of you know euai act 
 provisions 
 but what happens to the data 
 based on what you're doing when driving 
 your car or 
 what you're um 
 scrolling through when 
 using your 
 smartwatch 
 only becomes problematic when you're 
 combining different types of data and 
 the usage for which 
 the data was collected is not the usage 
 that the data is applied to in the end 
 that you're combining data sources that 
 you're leveraging data that was 
 explicitly consented to by a human 
 for something other than the purpose 
 that the data was provided for so i 
 think that the ai act is unlikely to 
 change iot devices being in use or being 
 useful or being consented to by 
 individual consumers it is likely to 
 change the fact that 
 as we've seen in the united states 
 period tracker apps or health apps that 
 collect menstruation data are suddenly 
 fodder for 
 local law enforcement or any other you 
 know agencies or you know people who are 
 building apps to collect this kind of 
 data to provide them for 
 monetary reward to law enforcement 
 this is where the overlap is you know 
 where does the data go what was 
 consented to and as long as their point 
 of sale point of service 
 transactional data that's consented to 
 that's probably not going to be a 
 problem as long as it's not 
 as long as it's not biometric data that 
 is personally identifiable 
 thank you 
 right thank you so much for coming to 
 your python thank you so much for this 
 wonderful keyboard 
 [Applause] 
 you can automate processes from purchase 
 to end of life achieving five key 
 benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 [Music] 
 um 
 [Music] 
 good 
 good luck 
 huh 
 hey hello 
 are you here for the livestream talk 
 yay 
 are you 
 i i feel like people can't wait to get a 
 pint of guinness that's what i'm feeling 
 um but this year in europe python we 
 have we are doing things a little bit 
 different um so some of you may notice 
 that we only got four confirmed slot for 
 the lighting talk in person here because 
 we have reserved some slot for the 
 remote lighting talk so if you are 
 watching us remotely you can actually 
 sign up for lighting talk just pay 
 attention to the venue that we would um 
 you know put the sign up link there 
 tomorrow so pay attention 
 so today we have a uh remote lighting 
 talk uh 
 from our good friend uh vp 
 so um are we ready for the first 
 lighting talk i don't know how it works 
 but yeah we'll see hello 
 hello 
 okay vbs oh hey baby hello hello hello 
 okay uh you're giving a live stream 
 right so okay 
 there you go okay 
 oh francesco we're in the wrong spot oh 
 no uh 
 goddamn work well we might as well do a 
 lightning talk then sure 
 hello 
 hello by the way you have one minute so 
 don't drink too much one minute by the 
 way um first of all we would like to 
 thank the organizers of europa python 
 for giving us the opportunity to 
 give a remote talk because you know 
 we're so remote 
 that we can't even see the venue from 
 here um right now but well while we're 
 at it we just wanted to take a minute to 
 tell you about the social event that's 
 happening tomorrow yeah we have a social 
 event tomorrow and we have only a few 
 tickets left so if you want grab your 
 ticket now 
 it's going to be tomorrow at the venue 
 starting from 7 
 7 30 
 live entertainment 
 food some drinks lots of fun and dancing 
 irish dancing um also yes and also last 
 but not least um since we are almost 
 towards the end of the first day just 
 want to say a huge 
 um thank you to all the volunteers and 
 the ops team for putting together such a 
 brilliant um hybrid event um cheers and 
 enjoy a pint 
 thank you so much so uh this is how we 
 do a remote slidesharing talk so um yeah 
 so you get the idea um also a few things 
 about lighting talk in case you're new 
 here that uh at the you know when we 
 invite the speaker and stuff and then we 
 if it's almost to the time that they 
 have to get off stage we'll do the tab 
 so they have to finish the sentence and 
 then we'll give them a big round of 
 approach so for normal live streaming 
 talk we have five minutes for all the 
 speakers to sign up so first one will be 
 um ram 
 retro that's your talk so please get 
 ready come on stage and get yourself set 
 up um and then the next one is um 
 uh sorry i i'm very bad at names and i 
 can't read very well uh theis 
 there is yes that's your talk so you 
 also get ready because uh we don't have 
 much time um and then uh that would be 
 so 
 like if you remember you sign up on the 
 first page just get ready somewhere 
 there because you'll be on stage before 
 you know it um 
 so uh i think that's more or less it 
 while uh people are setting it up uh i 
 also want to um let you know that those 
 uh the the way you saw the first remote 
 sliding talk actually happens in the 
 ferryman just opposite another venue and 
 they do guinness so you can try 
 who has tried to get us here oh actually 
 it's ready okay i'll talk to you later 
 you have five minutes there you go wait 
 wait 
 yeah oh hold on i didn't stayed up yet 
 sorry 
 oh really 
 my computer stack seriously 
 okay it's not connected yet right 
 yes sorry um 
 okay 
 so 
 so usually i start the timer when it's 
 ready but uh okay now you have the 
 screen so 
 let's start 
 right 
 i practiced like 50 times you know never 
 having until now 
 okay everybody thanks for coming to my 
 talk 
 my name is ram this is talk about my 
 research and my research into using 
 machine learning to understand our 
 society so in a way that some somewhat 
 related to the previous talk about the 
 way that the ai interacts with 
 how we deal with each other 
 so this is something that is insanely 
 interesting to me and now i'm working on 
 it full time and i have four minutes i 
 guess to convince you of how interesting 
 that is and i hope that this after the 
 session you're gonna check out my site 
 and sign up to that mailing list to get 
 monthly updates about my research 
 so 
 my goal is to use machine learning to 
 understand people and how how they 
 behave to each other and and this is a 
 sub field of machine learning called 
 multi-agent reinforcement learning 
 so 
 when i say i can get answers i want to 
 get answers to the big questions that we 
 have about human society that sounds i 
 mean it is enticing but it sounds vague 
 so let's look at a demo 
 so this is an ai playing the video game 
 mario 
 and the interesting thing here is that 
 the ai hasn't been told the rules of the 
 game they just took an ai and they 
 hooked it up to the mario system and you 
 just figured out how to play the game on 
 its own without even knowing the rules 
 right you just got the video output 
 played for the thousand hours first he 
 just did random stuff but through trial 
 and error it figured out how to win 
 so i think this demo is insanely cool i 
 mean we've seen a bunch of cool ai demos 
 in the last couple of years like dally 2 
 or gpt3 
 they sort of mimic the way that humans 
 behave like the way we talk or the way 
 that we look like 
 but 
 this demo looks very human not because 
 he's trying to be human but because it's 
 just a creature out there 
 making decisions decisions in an unknown 
 environment and dealing with the 
 consequences of these decisions 
 so when i see this demo i think super 
 cool i want to take it further and the 
 place i want to take it further is to 
 have multiple marios multiple ai agents 
 that 
 move around in the world and meet each 
 other like i want to know i mean are 
 they going to be friends are they going 
 to do stuff together and have like a 
 society i mean 
 there is something something insane 
 interesting to me 
 so lots of other researchers had the 
 same idea and this is a video by open ai 
 it's called open ai hide-and-seek i 
 recommend you check out the full video 
 on youtube and they've got two teams of 
 ai agents playing against each other 
 and 
 like the red team are trying to find the 
 blue team and each team is 
 developing strategies to beat the other 
 team 
 and they're developing these strategies 
 on their own initial strategy is sort of 
 like an answer to the strategy to the 
 strategy of the other team 
 so this is an awesome demo 
 you have check out the whole thing but 
 there is something about it which i 
 don't like there is a very very 
 beautiful cooperation there but that's 
 because the agents are rewarded based on 
 whether their team succeeded or failed 
 like in a way they are the perfect team 
 players because because they are sort of 
 a hive mind they all just want this team 
 to succeed there is no there is no 
 conflict between the individual and the 
 team and that's what what's interesting 
 to me i want to see the behavior of 
 creatures that are part of a team 
 they're able to to act as a group but 
 not be but not because they are a hive 
 mind because they are individuals who 
 choose to act as a group so many other 
 researchers have tried the same thing 
 and as soon as they put multiple ai 
 agents in environment 
 they immediately become the worst people 
 possible 
 let's see a demo 
 this is demo this is research this is 
 from deepmind from about a year ago 
 this is an air agent playing game where 
 it wants to eat as many apples as 
 possible if it eats all the apples of a 
 tree the tree dies and there are no more 
 apples so the single agent is playing 
 the game perfectly 
 and because it's starting the airports 
 regenerate 
 and here's what happens when we have 
 multiple agents with multiple trees 
 right immediately they they kill they 
 eat all the apples and kill the trees 
 and the interesting thing is that we 
 have seen this behavior in real people 
 sort of tragedy of the commons very 
 familiar to us that's something that's 
 frustrating to us about about the real 
 people and 
 like when it happens with people we can 
 say that's just the way people are 
 that's just the way it is but now with 
 multi-agent ariel we have an opportunity 
 to look at it as a social dynamics 
 problem we can say this this is the 
 exact same algorithm as a single agent 
 but the social dynamics is a problem 
 so we have a chance here to sort of 
 improve the way that we treat each other 
 and collaborate on large scale projects 
 which is to mean instantly interesting i 
 have lots more to say 
 out of time please check out my site and 
 please sign up to get monthly updates 
 about my progress thank you 
 amazing and you 
 write your time so that's perfect 
 um okay so uh uh you know uh figures 
 okay uh next is 
 proflo uh it's the building of 
 approachable applications and after that 
 we'll slide in a one-minute special 
 lighting talk uh 
 from hugging face 
 um so uh then after it's been north if 
 you're here hello okay uh yes so please 
 get your computer ready because uh once 
 we plug in and if your computer is on 
 screen 
 then you are on 
 but i am still seeing a black screen for 
 some reason um 
 hello 
 what happened uh 
 technical support 
 oh 
 yeah okay it kind of worked 
 okay 
 there you go this your time starts 
 now 
 so um 
 we all know that building distributed 
 systems is hard 
 and causes a lot of headaches 
 and i want to introduce you to 
 a product called cyclone dds 
 which is an implementation of 
 dds itself which is an open standard 
 that can help you build distributed 
 systems 
 uh and hopefully take those headaches uh 
 away from you 
 uh 
 so first a 
 quick overview of why distributed 
 systems even 
 cause headaches and it's because the 
 distributed nature of a system creeps 
 into all the scopes of your software 
 uh at every point you have to 
 [Music] 
 take into account that oh 
 what's what's the latency on this when 
 is this coming in or where do i have to 
 send my data 
 is there some dynamic agent in the 
 system that i also want to send my data 
 to 
 uh 
 and this really causes 
 distributed systems to often fall short 
 in 
 the the real-time domain 
 the complexity can hugely explode and be 
 a full-time job for many developers at 
 the same time and if you want to change 
 something suddenly you have 50 
 applications to update 
 because somewhere a new temperature 
 sensor has one more data point that it 
 adds to the system 
 so 
 what is dds dds stands for data 
 distribution service 
 it's a common standard 
 standardized by the object management 
 group in 2002 to 2004 
 that abstracts away a distributed system 
 into a global data space 
 with topics with writers and readers 
 you specify a delivery contract for each 
 of those readers and writers that says 
 okay 
 this data should be reliable or i only 
 want to see the highest priority system 
 so there is a 
 way to fall back 
 if something crashes 
 maybe you want to keep data on disk or 
 uh 
 so you can reprovision an application 
 that crashes 
 and have end-to-end encryption and it's 
 an open standard there are multiple 
 implementations so you don't have vendor 
 lock-in 
 and even these implementations are 
 interoperable on the wire so you can 
 have systems for multiple 
 companies talking to each other without 
 problems 
 now cyclone dds is an 
 open source implementation of dds 
 just developed on github 
 we have c superfluous and python apis 
 which again interoperable you don't know 
 what's on the other end might be another 
 programming language your objects are 
 just compatible with each other 
 and in my humble opinion we have the 
 only nice dds python api 
 available the one by the big american 
 company rti is absolutely horrendous 
 we have a friendly bsd3 license you can 
 use it in anything and 
 we 
 i work for a commercial company but all 
 of our coders donated to the eclipse 
 open software foundation so 
 we can't take it away from you even 
 though we make it 
 here's some example code 
 which 
 i'll put this 
 presentation somewhere and you can look 
 back at it but these two applications 
 you can start 
 in a single process within one machine 
 or over the network or even across the 
 internet don't have to change any code 
 and they will talk to each other 
 and that is my talk 
 if you want a demo or 
 discuss something at all please talk to 
 me in the next coming days 
 thank you so much wow if everybody is 
 efficient that would be great so thank 
 you so much and next speaker please um 
 get ready and um yes i was talking about 
 the guinness who already had a real 
 irish guinness 
 yay 
 congratulations um you have tried the 
 real guinness does it really taste 
 different yes 
 yes yeah okay good um but also it's not 
 like you know it's dublin not just offer 
 our guinness to the the black stuff um 
 we also offer other like good food and 
 whiskey and all the stuff so uh while 
 you're here you get okay so watch the 
 lighting now first okay so there you go 
 five minutes 
 here we go hello everyone 
 my name is pablo andreychenko 
 i've been 
 a member of the euro python community 
 since 
 bilbao um 
 uh what do i do for like what's my day 
 job what do i do for a living 
 i build uh production applications uh in 
 python and i try to make them 
 supportable uh what do i mean by that 
 well i've been doing it for actually for 
 over 
 10 years so i think i've seen the good 
 the bad and the ugly 
 i obviously don't have much time so i 
 will not go into the cost and benefits 
 why an application should be supportable 
 so rather what i'm going to give you is 
 two bullet points uh to remember that i 
 think is important 
 so why is it important to make your to 
 build your system to build your 
 application to make it 
 as supportable as possible 
 because the chance if if you work it out 
 on a distributed system or whether it's 
 an open source project or whether you 
 work for a medium or large company 
 the chances are that it's not going to 
 be you 
 who will be dealing with the production 
 busts or 
 likewise it's not going to be you uh who 
 will be in enhancing the code that 
 you've been working on 
 okay so 
 when it comes to um when it comes to 
 dealing with support incidents with the 
 production bus so someone and presumably 
 someone else will be investigating those 
 how how can you help them how can you 
 make their job easier 
 if you want to google so there is a 
 framework 
 whose name is casey now 
 so which one of these steps one of the 
 steps of the framework is logging so you 
 need to provide 
 as much information as possible about 
 the uh about the problem 
 uh and you should also include as much 
 context so the 
 sort of concept concept of tracing 
 include as much information about the 
 context if there is data involved where 
 the data came from 
 user name 
 transaction id et cetera et cetera 
 specifically in python you need to be 
 smart about dealing with exceptions and 
 how you handle exceptions 
 if you re-raise an exception make sure 
 that you use raise raise from to 
 preserve the 
 stack trace because uh that will contain 
 a lot of valuable information 
 okay and when it comes to writing code 
 and 
 if someone else if there are chances 
 that someone else is going to be working 
 on extending the code that you are 
 working on well you need to bear in mind 
 that 
 readability and common paradigms 
 tend to win in the long run 
 so bear that in mind when sort of 
 writing fancy code 
 and 
 always comments and many meaningful i 
 have like meaningful dog strings go a 
 long way 
 so i hope that's 
 common sense 
 so just to recap 
 to 
 make sure that 
 the 
 system that you're working on is as 
 supportable as possible 
 uh 
 first 
 keyword i guess that i want you to 
 remember is logging so log 
 log as much information as possible 
 uh 
 even though your your code could be as 
 tested so you could have high car 
 coverage you you can you can you can 
 have 100 coverage you can use hypothesis 
 testing but still production incidents 
 do happen so to help those people who 
 deal with those 
 incidents 
 uh include as much information as 
 possible and for those people who will 
 be maintaining the code that you are 
 writing make sure that your code is 
 readable and understandable 
 thank you 
 great 
 amazing so 
 right on time 
 and uh next uh livestream talk will be a 
 special lighting talk that's like one 
 minutes long uh from the team of hugging 
 phase 
 yep uh 
 yes 
 no you're not or 
 oh pablo is ready okay we would swap the 
 order a little bit and we'll let pablo 
 give his one minute lighting talk and 
 then 
 we can have hugging face coming back 
 after dominic maybe okay i will be quick 
 hello i'm paulo i'm the release manager 
 of python 3 and 311 but i'm here because 
 i have something to confess i come from 
 the future 
 and the future is bright as you know we 
 have cure all diseases everyone is happy 
 nobody complains on twitter is cool but 
 all of this was possible only because 
 one reason the c python team released 
 successfully 311 with no backs right and 
 my mission i have came to the past to 
 tell you that you know we need to we 
 need to achieve this future and the only 
 way to do it is if you help us to test 
 python 311 right um we have released 
 python 311 beta 4 and we only have one 
 more beta and then we will enter release 
 candidate and it turns out that python 
 311 you know it's going to be super fast 
 and super cool and it's going to solve 
 all problems in the world but you know 
 has a lot of changes so it's a bit 
 unstable at the moment and we need to 
 make sure that we are not going to break 
 your super cool library or your ml model 
 or i don't know your your 
 joke generator or whatever you do 
 so please go and download that python 
 311 beta whatever beta and try your test 
 is very important save the future 
 this exactly one minute it's like 59 
 seconds 
 amazing so next we will have ben off yes 
 you're ready okay you can come on stage 
 and you will have more than one minute 
 you have five minutes so uh yeah while 
 you're setting up i will tell you a 
 little bit of my funny story uh that i 
 experienced in dublin so uh not this 
 time but like 
 around half a year ago i came to dublin 
 for visiting and i joined the tour so 
 there was a tour guide right a local 
 tour guide i'll tell you later 
 okay so five minutes there you go start 
 now 
 thank you hello my name is ben i'd like 
 to tell you about a research project i'm 
 working on with colleagues at trinity 
 college dublin and with tu dublin we're 
 supported by the science foundation 
 ireland we're building a system to help 
 people start learning python 
 this is mit's scratch environment is 
 anybody here familiar with scratch a lot 
 lots great 
 so this is many young students how they 
 get their first exposure to the ideas of 
 programming they do it through scratch 
 it's engaging you have graphics you have 
 sounds you have sprites which have 
 scripts which run concurrently in 
 response to events like key presses or 
 taps or clicks 
 you write these scripts by joining 
 together action blocks like move forward 
 play this trumpet sound you have control 
 blocks like repeat these other blocks 10 
 times 
 scratch has a stage 
 where your program runs and it has a 
 coding area where you assemble your 
 program from the available blocks 
 with this system young people gain what 
 the raspberry pi foundation have called 
 scratch superpowers they can make very 
 cool things 
 often 
 students then start to learn python 
 which is a good thing i don't need to 
 convince this audience but 
 if you're used to writing programs like 
 this then python can be a very different 
 experience 
 somebody expressed the feeling as all 
 the color goes out of the rainbow um 
 students often have to write sequential 
 text input text output programs usually 
 there's nothing like sprites usually 
 there's no graphics usually there's no 
 sound usually there's no concurrency 
 and on top of all these changes to their 
 mental model of how you write a computer 
 program the learner also has to very 
 carefully type in their code instead of 
 building it from blocks 
 for many learners this is too much of a 
 leap 
 they lose interest at a crucial stage in 
 their computer science journey 
 we think it would be better if students 
 could keep their interest in computer 
 science and computer programming we want 
 people to be able to make their own 
 technology not just consume other 
 peoples have fun being creative we want 
 people to have an idea of how software 
 works so they can better understand the 
 public debates about for instance bias 
 and ai systems that we were just hearing 
 about 
 now i have to admit i have cherry picked 
 a bit here there are systems like pygame 
 0 and tools like mew which help a lot 
 but even with these python coding is 
 still a very different experience to 
 creating games or visual art 
 with scratch 
 to help students with this leap we've 
 built pitch a bridge from scratch to 
 python 
 it lets learners keep their scratch 
 knowledge of how you write a computer 
 program sprites graphics sounds 
 event-driven concurrency while they 
 learn the python language it's python 
 through the lens of scratch 
 pitch is live now it has the same stage 
 as scratch 
 it has a coding area like scratch but 
 where they write their event driven code 
 in python rather than by joining blocks 
 together they learn about python's 
 syntax and semantics in a familiar 
 setting and paradigm 
 pitch is free software open source it 
 runs in the browser 
 using sculpt 
 we've been trialing this in schools as 
 well as places like coda dojos 
 technology summer camps computer gaming 
 courses 
 the feedback has been positive so we 
 think we have a good approach here about 
 how to help students learn python 
 we've started to explore some ideas 
 about help how to help learners move 
 from pitch onto real world python maybe 
 web or data science where the power of 
 python lets them do things they couldn't 
 do in scratch 
 we're working on a simpler ui to avoid 
 some of the boilerplate code we've got 
 proof of concept physical computing 
 working everybody likes flashing lights 
 for a school setting there's a lot 
 needed beyond the core system we do have 
 learning materials built into pitch but 
 we need to expand them align them better 
 with the curriculum 
 that's why we've built pitch what it is 
 where we plan to take it 
 we'd love to talk to anybody involved 
 with python in education we're mostly 
 thinking of school students aged from 
 maybe 12 up to 17. 
 we'd love more people to try pitch with 
 their students give us feedback 
 we'd love to learn from educators about 
 what would make their classroom 
 experience smoother maybe auto grading 
 of assessments 
 we'd love to talk with people who could 
 fund or sponsor further development 
 please get in touch if you'd like to 
 talk with us about any of this thank you 
 for your time 
 hey thank you so much it's very nice 
 watching talk um so is dominic here 
 ready 
 no not ready so wow uh dominic are you 
 here please come here and get ready so 
 while we are finding him oh 
 oh he's you okay uh so maybe i'll let 
 dominic go first yeah is that okay alex 
 yeah okay dominic come here yeah come 
 here come here 
 so 
 chin uh if we offer one a little bit 
 then maybe chin can also go as well are 
 you here chin get ready yet okay okay so 
 um yeah so talk about my tour guide so 
 he said that so don't take it as an 
 official advice right it's not an 
 official advice the tour guide talked to 
 us and tell us that like 
 um don't follow the green man um so i 
 guess uh well jail walking is a thing 
 here in dublin um okay so lighting talk 
 five minutes yes so hi i'm dominic or 
 disconnected and this is programming 
 languages are hard or maybe should i say 
 programming is hard in general 
 so we'll talk about few issues the first 
 one is file permission issues so let's 
 look at bash versus programming language 
 in terms of 
 file permissions 
 so we have an ipython environment here 
 and so let's maybe create some some file 
 like y 
 and as you can see this file has this 
 those those kinds of permissions and now 
 if you do something like chmod 700 on 
 this file 
 and then you well look look it up again 
 it has proper permissions right 
 uh so let's try to do the same in in 
 python so you know os ch mode 
 the y and c seven zero zero 
 now if you look over this file it has 
 completely different permissions 
 um 
 yeah and that's a bit problematic and 
 you know the issue here is that 
 this is decimal and the chmod ch mode 
 basically expects the permissions in 
 octal numbers 
 so to make it proper we would have to do 
 this right 
 and then we can see this is the expected 
 result but what this actually did here 
 uh because we can see those weird 
 permissions like we can write to this 
 file as a user uh we can uh read it as a 
 group and like execute or write to it 
 and we can read and there's this t this 
 t is called the sticky beat it's not 
 very useful in in this case but uh yeah 
 there is something like this on linux 
 but basically this means that you know 
 we kind of expected the file to be only 
 readable write able and execute 
 executable by us but we ended up with a 
 file that everyone can read 
 which which can be disastrous no you 
 know it can be a security issue in the 
 end 
 um 
 so yeah let's maybe look how people deal 
 with it or like do they make such bugs 
 so if we go go over a website called 
 grab app uh that's like a random search 
 over uh git repos it's not very it's not 
 that good like 
 it has some limitations but if we go 
 over here and like type some kind of 
 regular expression like this 
 where you know we are looking of 
 for our osch mode with some whatever 
 name and permissions that do not start 
 with zero then we can see that people 
 actually do such mis do such mistakes 
 and you know they can end up with uh 
 incorrect file permissions that may then 
 be readable by others and if it's some 
 secrets file 
 then it can be a huge problem 
 uh obviously it's not only about python 
 like if we remove the osc os dot here 
 and like 
 search again you can see that you know 
 in kotlin they do the same 
 obviously this may actually be 
 proper here like 
 they have a comment here saying that you 
 know this 448 is an octal zero seven 
 zero zero so probably this one is 
 correct here 
 uh but usually it's not so correct and 
 um by the way uh one more thing maybe uh 
 i will just show you that this oct700 is 
 basically this permission 
 uh and we can of course compare it to uh 
 doing this manually so zero zero sorry 
 one four two seven four why and i can 
 show you that 
 oops 
 i can show you that you know this is the 
 incorrect permission here right 
 um 
 another example you can look for this 
 particular case because you know that 
 was kind of the problematic one 
 and as you can see people also do it in 
 java in python well okay it's a test 
 project in some other python code 
 um 
 but this you know as i said grab up is 
 just very limited so it doesn't really 
 show all github results here that's the 
 first thing and second of all there are 
 other functions that have the similar 
 problem like os.open will also allow you 
 to provide 
 permissions as well 
 okay 
 so i have a random thought here or maybe 
 a wishful thinking you know maybe 
 programming languages should allow you 
 to uh define 
 in their type system that a given uh 
 type should be an integer octal or an 
 integer hex value 
 when you type in an integer literal 
 because then we would not have those 
 kind of issues at least when someone 
 hardcodes the value 
 and not and doesn't provide 
 you know 
 it as a variable uh that is defined 
 somewhere else 
 um obviously this should be in oct here 
 not hex 
 um yeah and maybe my pi could detect it 
 um okay another issue is about regular 
 expressions so you know um there is this 
 meme that when you are using regular 
 expressions you have actually two 
 problems 
 and uh one problem with regular 
 expression is something like this if you 
 have a regular expression like this you 
 know this act those dots here 
 are actually meaning that you know this 
 is any character so if you want to match 
 domains and write a regular expression 
 like this this is an issue 
 and obviously people do such mistakes 
 and it's pretty trivial to find them i 
 even found one in signal desktop 
 this is like an encrypted messenger and 
 they had something like this supported 
 media domains regular expression 
 um 
 yeah and they had an issue like this but 
 there are other as well 
 um 
 yeah thank you very much okay thanks 
 last slice okay thank you 
 thank you so much um so unfortunately 
 yeah this is a little bit overrun but 
 that's fine um next uh i think alex 
 wants to show something for 10 seconds 
 so i'll let him do it um 
 yeah so 
 um 
 well i think you take more than 10 
 seconds to to show it 
 no it's not okay 
 well you need a oh well uh 
 oh okay otherwise i gotta kick you out 
 because you take more than 10 seconds 
 already um so 
 right 
 no 
 the screen come on 
 come on you only have 10 seconds come on 
 come on okay 
 all right okay 
 who likes basil 
 okay we will tell you more about bazel 
 tomorrow at the lightning talks thank 
 you very much 
 that's it the shortest lighting show 
 ever in europe hyphen thank you so much 
 okay so uh we have chin chin 
 also a hacking face uh kind of you you 
 missed your slot uh omar from hucking 
 face are you are you still here 
 no no then we'll have chin then um 
 that's it for today after chin but uh 
 chin has something to talk about the um 
 oh the sports python thing um does it 
 work for your customers no usb okay 
 uh you have a dongle at hand isn't it 
 what you you have the adapter yes 
 okay so uh let's hope this doesn't take 
 too long to set up so um yeah so dublin 
 has a lot to offer um but do be careful 
 when you're on the road uh i cycle in 
 the morning here and i have a few 
 bruises already because 
 the bicycles are too big for me um and i 
 struggle to get on you know 
 yeah so but um yeah chin you have five 
 seconds sorry five minutes 
 it gets dropped in the shoulders okay 
 five minutes let's go 
 discrimination um 
 uh hi everyone uh okay five seconds no 
 five minutes okay um so i was writing to 
 some of you today sorry sorry if i'm 
 repeating this but never mind tough um 
 tldr 
 uh so for the rest of you who didn't 
 know there are some new educational 
 python freebies coming your way 
 uh they are specifically sports related 
 open educational resources 
 or oer the origin 
 is that the eps kindly accepted a grant 
 proposal from my edtech startup a few 
 months ago to see an initiative called 
 sports python which is what i spend all 
 the money on no i'm joking joking this 
 is our set up contribution um 
 i am proud of this though because we got 
 psf uh sign off on using the python 
 snake logo i don't know if mark andre is 
 here but thank you to the trademark 
 committee for that 
 and why why are we doing this project 
 to help make python education more 
 accessible and enable a more inclusive 
 and represented 
 representative community yes i support 
 that right thank you um some evidence oh 
 microphones here some evidence um sports 
 as a gateway to python works so 
 the proposal for this open educational 
 resource project was actually based on a 
 proprietary closed initiative that i 
 have been doing with 
 some disadvantages kids in south london 
 schools so these are actually a cohort 
 of if you know anything about education 
 then this will make sense if not don't 
 worry uh year 12 uh btec it students so 
 they had no coding no pricing experience 
 a couple had some coding experience but 
 very little and in four sessions doing a 
 related football analytics program 
 they loved it look see happy smiling 
 faces uh that's me in the middle um 
 and the stripes okay so the first 
 project deliverables 
 um 
 are i'm sorry i'm biased it is going to 
 be on football because i know it best 
 but i've been speaking to some people 
 who have been um pitching things like 
 rugby and basketball and rock climbing 
 um but the first project was based on 
 this match with an arsenal menu match i 
 actually disliked both teams so that 
 made it very easy to to code up because 
 i am a chelsea fan um so 
 the 
 the data i basically sat there and i 
 coded up uh 
 almost 2 000 um 
 records of events from that match so 
 that was a pain however 
 uh oh well so there are some artwork 
 bonus deliberates uh that we have 
 created so these are some beautiful um 
 icons which i got a designer to do it's 
 again as will be part of the it's an 
 open educational resource for everyone 
 to use so alongside the core docs which 
 will have code examples 
 for how to use the urban education open 
 educational resources so this for 
 example is like using the data and the 
 coordinates and the icons to recreate 
 the first arsenal goal 
 this is a 
 this is ronaldo's um touches 
 from the match 
 and then this is a heat map of ronaldo's 
 again i think touches so stuff like that 
 is the kind of things which 
 the project will enable the docs will 
 show people how to create so it's for 
 you know learners not just kids but 
 anyone but also educators to use 
 uh sustainability is a challenge so if 
 you have if you're not using it because 
 you already know how to do python 
 if you have time and or your 
 organization or someone you know has 
 money that would be great i'm speaking 
 to you know sponsors here you know hello 
 um because uh 
 i do have a repo it's got nothing in it 
 um but i took the names that's cool i 
 also have the twitter handle but again i 
 have 
 no time to actually do any tweets 
 um so a lot of help would be useful and 
 if that has sounded interesting at all 
 do you come visit my table on the ground 
 floor to find out more it's the one with 
 the balloons and like the grass pitch 
 thank you very much 
 thank you so much and i think that kind 
 of ties up our lightning talks sorry if 
 you can't get in today you can try again 
 tomorrow also as a reminder there are 
 remote slots so um you know you don't 
 have to go to the ferryman um to give 
 the licensing top but if you're a remote 
 participant generally like not in dublin 
 uh you could you could sign up for 
 lighting tour you can give your 
 licensing talk at home so yeah so that's 
 it for today and thank you so much for 
 joining and i hope you enjoy your 
 evening in dublin thank you so much 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 connections 
 keep it simple 
 you
