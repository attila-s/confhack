[Music] 
 oh 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive 
 rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 so 
 [Music] 
 the transcode is a hack day centered on 
 the transit non-binary communities it's 
 a chance for us to come together and 
 share our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble and just being 
 able to geek about geek out about sort 
 of shared interests having shared sense 
 of humor with people i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive brother 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 um 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today 
 okay let's see if this works hello and 
 welcome to europy's in 2022 here in the 
 lithium room 
 uh where we now start one of the regular 
 tracks 
 uh just a reminder you could see at the 
 end over there there's a no photo area 
 so if you would like not to be filmed 
 then that's the area where you should be 
 sitting 
 okay 
 it's been a long time since we did a 
 live conference so like since basel uh 
 we're all a bit rusty but i think over 
 the days it will get much better and i 
 hope that you are going to 
 get into the usual conference feeling 
 quickly uh again and we have a great way 
 to start this track 
 because we have a super experienced 
 speaker who's been at almost all of the 
 last five 
 in-person europe pythons holding a talk 
 today we have lynne root she's a staff 
 engineer at spotify and a 
 chair for pi ladies global and 
 she wants to talk about apis today so 
 give a 
 big round of applause for lynn 
 [Applause] 
 good morning thank you um 
 i learned blender just to have this cool 
 effect interest light effect 
 i'm kind of into synthwave lately 
 anyways 
 good morning my name is len root as 
 martin said i am a staff engineer at 
 spotify and i am based in new york 
 i've been building infrastructure for 
 audio processing for the past few years 
 and you also might know me from pi 
 ladies i'm the global chair of the pi 
 ladies global council 
 so yes it has been a few years um i've 
 completely forgotten how to write like a 
 succinct concise talk so i'm going to be 
 using my full time and we'll be taking 
 questions like out in the hall during 
 coffee 
 so now i'm just going to jump right into 
 it about 10 years ago i bought an 
 electric kettle from breville and it had 
 this plug 
 and essentially this plug like blew my 
 mind 
 i know it's an american plug but i found 
 myself why don't all plugs have a hole 
 like this um the answer is probably 
 because of patents 
 but it not only does it make it really 
 easy to unplug from a socket you don't 
 have to you know wiggle back and forth 
 and maybe electrocute yourself 
 but it's very obvious how to use it it 
 allows for easy grabbing and pulling 
 and so the simplicity the thoughtfulness 
 of this design this has made me this 
 made me think what else am i unknowingly 
 struggling with 
 so this brought me to this book called 
 the design of everyday things by don 
 norman which you might notice is the 
 inspiration for my talks title 
 it's got this nice coffee pot on the 
 cover it's dubbed the coffee pot for 
 masochists 
 and the premise of this book is about 
 how design serves as communication 
 between object and user and how to 
 optimize that communication for a better 
 experience 
 so norman writes 
 design is concerned with how things work 
 how they are controlled and the nature 
 of the interaction between people and 
 technology the range of things is not 
 limited to physical objects like the 
 breville plug that i'm in love with or 
 the masochistic teapot or coffee pot on 
 the books cover 
 it includes any artificial creation like 
 software digital interfaces the layout 
 of a conference room manual for an 
 appliance organizational structures etc 
 so what makes design good 
 norman says two of the most important 
 characteristics of good design are 
 discoverability and understanding so if 
 we break this down further 
 discoverability is described as am i 
 able to figure out what actions are 
 possible and where and how to perform 
 them 
 the author lays out uh five key elements 
 to discoverability and i'm sorry i'm 
 going to breathe a breeze right through 
 them for the sake of time 
 but the first one is affordances 
 affordances determine what action 
 what actions are possible and and it's 
 what a user can do uh with an object 
 based on the user's capabilities 
 and building on top of affordances the 
 second element is signifiers 
 signifier is some sort of perceivable 
 cue about the affordance 
 the third key element is discover of 
 discoverability is constraints 
 constraints are limitations or 
 restrictions 
 and can give us clues that allow us to 
 determine of course a course of action 
 by limiting the possible actions 
 available to us 
 the fourth one is mappings 
 a mapping is a relationship between a 
 control and an action 
 an example of a good mapping is you 
 might have two lights and two light 
 switches and the left light switch 
 controls the left light and vice versa 
 the final key element is feedback 
 where results of an action is 
 communicated back to the user 
 so immediate feedback is ideal delayed 
 feedback can be disconcerting and lead 
 to a feeling of user abandonment and 
 failure 
 and so these key elements of 
 discoverability uh help build up the 
 second part of good design which is 
 understanding 
 so understandability means is it 
 possible or easy for users to figure out 
 how the project can be used 
 understanding is developed by forming a 
 conceptual or mental model of how 
 something works 
 a conceptual model is just a collection 
 of explanations often oversimplified 
 and the user has their own conceptual 
 model of how a system or product works 
 and the designer designs their system or 
 product using their own conceptual model 
 and then designers expect users 
 conceptual model to be identical to 
 their own 
 but because they cannot communicate 
 directly with the user the burden of 
 communication is with the system and its 
 design 
 so good conceptual models are the key to 
 understandable enjoyable products good 
 communication is the key to good 
 conceptual models 
 and then that communication comes from 
 those key aspects of discovery 
 affordances signifiers constraints 
 mappings and feedback 
 and so maybe you're able to start seeing 
 how these ideas essentially humid center 
 design can start to apply to software to 
 designing a library for others to use 
 my first instinct when thinking about 
 libraries i've i've worked with that 
 maybe 
 they're not fun to use i didn't really 
 want to name and shame any python 
 libraries here but like i'm going to 
 call it one non-python library that i 
 use that i do loathe is ffmpeg you're 
 not supposed to be able to read this 
 screen 
 but f of mpeg it's a well-known cli tool 
 that's designed for processing audio and 
 video this is a screen recording of me 
 just running a command to list some 
 documentation 
 whenever i use ffmpeg it's a way for me 
 to figure out how to do something like 
 seemingly simple i have to like actually 
 look up stack overflow 
 because i'm sorry the tools 
 documentation really sucks um and i know 
 that i will continue to reach for it 
 because of its ubiquity and its 
 performance but there will always be 
 this sort of 
 kind of psy reaction to it 
 and so this made me think if i am an 
 engineer who develops tools and 
 infrastructure for other engineers 
 what kind of masochistic teapots have i 
 unknowingly shipped how many size have i 
 caused 
 so there are much much better people 
 like to give talks on on this idea 
 with much better ideas and theories so 
 i'm not an authority on api design but 
 for me there's this missing connection 
 between the theory of good api design 
 and the actual implementation 
 so this brings me to why i'm here today 
 i'm not sure if folks have seen previous 
 talks of mine but i have a habit of 
 writing talks for myself ones that i 
 really wish existed a few years ago so 
 this talk is mainly for past lin a talk 
 that tries to take elements key elements 
 of good api design and apply them to a 
 real world example 
 and so i was able to condense this into 
 three tenets three key principles that 
 make it delightful to work with api 
 so first i'm going to set the stage 
 let's say that we are designing a 
 library to work with 
 work with a pub sub queue 
 and we're going to just call it chaos 
 cue because why not 
 and it has nothing to do with this car i 
 just like like it 
 so let's start with some code 
 first we have a class that defines the 
 message object and 
 all it does is contain data to be passed 
 to and from a chaos cue 
 and we have a second class a client that 
 essentially publishes two and consumes 
 messages from our chaos pub sub queue 
 and this is our starting library and 
 perhaps you're already thinking of some 
 things that you want to change which is 
 good but like hang tight for a while 
 um in order to develop some empathy for 
 our future users we want to write um a 
 little bit of user code that interacts 
 with our library so on the user side we 
 create a chaos pub sub queue client and 
 then create a topic and subscription 
 catching and moving on if they already 
 exist 
 and then we start interacting with our 
 client we first have a for loop to 
 publish five messages to our chaos uh 
 pub sub cube 
 and then a while true loop to consume 
 those messages and then we print the 
 message maybe leftover debugging 
 and then we do some sort of processing 
 of that message data and then we 
 acknowledge the message from the queue 
 when we're done processing 
 and then finally maybe the client has a 
 couple of network connections that we 
 need to clean up and close maybe some 
 buffers we need to flush 
 so let's improve this for the user and 
 let's start iterating on our library 
 we'll start with my first of three 
 principles 
 an api should be intuitive 
 with an intuitive api a user can be lazy 
 they don't have to think too hard about 
 how it works 
 they won't have to remember complicated 
 details 
 because their intuition correctly 
 explains them 
 they won't have to spend a lot of time 
 learning new parts of the api because it 
 just all works similarly 
 so an intuitive api builds on the user's 
 pre-existing conceptual model and it 
 tries to not do anything surprising 
 nothing that unnecessarily works against 
 any logical or domain constraints 
 and so with that i have three changes 
 that i want to make to our chaos cue 
 to improve the intuitiveness of the api 
 we'll start with some low hanging fruit 
 and name the methods 
 in our client class 
 using a domain's nomenclature like 
 pulling a message 
 publishing a message 
 acknowledging a message is complete and 
 draining a queue of messages 
 so right now we have 
 add message get message mark message 
 done and clear message queue 
 let's just rename them to publish and 
 pull ack and drain 
 i've also dropped the noun from the 
 method names since i found that a little 
 bit redundant particularly because in my 
 mind the noun that we're operating on is 
 in the function signature the message 
 and now i have room on my slide to 
 indent four spaces 
 and so why are we doing this this plays 
 into the mappings element of 
 discoverability naming your uh functions 
 similar something familiar to the domain 
 that they're supposed to work in can 
 help 
 result in immediate understanding of 
 what your api is supposed to do 
 the next suggested change steps back 
 just a tiny bit and to think about the 
 appropriate abstraction levels uh clumsy 
 naming hints at clumsy abstractions 
 even the slide is a little clumsy but if 
 you recall the pub sub client we have a 
 few curious methods create topic create 
 subscription and close client 
 if this client 
 i mean this client seems to be managing 
 a lot with one object from the user's 
 point of view 
 you know what if we're just wanting to 
 consume messages and not publish them do 
 we have to create a topic for some 
 reason 
 will there be multiple connections 
 managed by this client some unnecessary 
 so let's not add any unnecessary 
 confusion to the user and break this up 
 into two 
 one client that works with publishing 
 and one that works for subscribing this 
 also allows us to clean up the method 
 names a little bit 
 this then creates national 
 natural constraints on what the user can 
 do if the user must create a topic they 
 have to instantiate a pub client and are 
 limited to only those actions provided 
 within the pub clients methods 
 however these clients also create some 
 unnecessary constraints on our users 
 which brings me to my third change 
 let's make sure our api has symmetry 
 so we allow the user to create a topic 
 and create a subscription but what does 
 a user do if they need to change an 
 existing topic or subscription or delete 
 one 
 so let's not limit the user 
 unnecessarily 
 and provide symmetry with our methods 
 just having a create method without its 
 logical symmetric pair or triplet gives 
 a mislea misleading signifier to the 
 user 
 so you can be certain that users have 
 worked with other apis that provide both 
 a create and a delete method a get and a 
 set method and upload a download method 
 it would 
 be counter intuitive to not provide such 
 functionality or to provide that 
 functionality but not follow the 
 convention of symmetric naming 
 so some of these changes they might seem 
 a bit contrived it's hard to come up 
 with a simple succinct example that's 
 also relatable but hopefully the message 
 is coming through 
 and some of the changes that come later 
 could 
 later in this talk could very well apply 
 to the intuitive tenant and i'm sure the 
 changes that i'm not addressing might 
 even apply here or in other 
 circumstances again i'm not the expert 
 but let's move on to the next tenant 
 an api should be flexible 
 and i mean flexible for the user it's a 
 whole other talk to write about flexible 
 apis for a maintainer or contributor 
 but basically a flexible api lets you do 
 what you want 
 in my point of view a flexible api lets 
 users 
 get started quickly with the more basic 
 use cases and then allow users to adjust 
 as they need to solve more complex 
 problems 
 flexibility comes down to the question 
 of how many problems can users solve 
 once they learn the api 
 and so for this tenant i have four 
 changes that i want to make to our chaos 
 cue 
 the first is to provide saying defaults 
 to the most common use cases 
 so recall that some of our methods that 
 work with publishing and consuming 
 messages the main resource these methods 
 are working with is the message 
 the timeout and retry arguments are not 
 required to the core functionality of 
 publishing pulling or acknowledging 
 and often i found myself as a user to 
 not know what a good number of seconds 
 timeout should be or how many retries i 
 should be making 
 so as an api designer i should make 
 optional behavior as optional keyword 
 arguments maybe 30 seconds is the most 
 common timeout value or maybe it's just 
 the default from the server and maybe 
 it's the default to have 
 zero retries 
 by moving a lot of optional settings to 
 keyword arguments it allows users to 
 focus on just what's required of them 
 this change also 
 goes beyond the flexibility of an api 
 by providing or by forcing the use of 
 keyword arguments and providing same 
 defaults we limit the number and the 
 order of positional arguments that a 
 user has to remember so for instance 
 both timeout and retries are integers if 
 they were positional arguments like 
 before the user could easily inverse 
 them when calling the method and that 
 would 
 safely pass type checkers 
 so maybe we have many more optional 
 keyword arguments for our methods like 
 request id verbosity level maybe a bunch 
 more 
 if you have many many arguments a 
 positional or keyword um you might want 
 to step back a little bit because it 
 might be another hint at clumsy code 
 you might 
 be unnecessarily exposing some 
 complexity so with type hints and with a 
 lot of arguments if folks can't 
 understand your type annotations you 
 might need to rethink and refactor 
 so for the sake of my slides being 
 readable i'll be rolling these up into 
 star quargs 
 and so for the second change i want to 
 make to increase flexibility is to 
 minimize the the user's need to repeat 
 themselves 
 you might remember we saw a loop in the 
 user's code to 
 to publish that they were calling to 
 publish each message 
 and so in our pub client our published 
 message has just one positional argument 
 for message 
 to minimize forcing users to repeatedly 
 call publish for each message we can 
 accept multiple message objects in the 
 function signature by collecting them 
 into star args 
 and then we can you know do the 
 repetitive work for them 
 so hopefully you're you're writing some 
 user code as you're building your api 
 since while doing so you can look for 
 common patterns that user in that user 
 code that you can minimize away things 
 like loops and repetition 
 as i said earlier the 
 the tenant of flexibility is meant for 
 the user's point of view and providing 
 flexibility to the user requires you to 
 be predictable and to be precise in what 
 you do for them 
 if you recall part of building that 
 conceptual model that understanding for 
 the user is providing constraints and 
 feedback 
 we provide flexibility in what we accept 
 as input but there needs to be a clear 
 constraint in what we return 
 we shouldn't make the user figure out 
 what type or what object type they got 
 back from a method of ours and so if you 
 recall our subscription client that 
 returns a consumed message 
 or it returns none it doesn't seem too 
 precise or predictable to me 
 so the user has to check if they got a 
 message at all or if they are actually 
 dealing with none 
 so what's the none use case here well 
 it's when there are no more messages to 
 consume 
 if we take a look at pre-existing apis 
 like the python q library it raises an 
 error when a queue is empty and that 
 seems pretty reasonable to me 
 so let's update our function signature 
 to only return a message object and then 
 raise if there are no messages no more 
 messages in the subscription queue 
 so this goes along with what don norman 
 said about feedback that it should 
 communicate clear unambiguous 
 information back to the user in order to 
 be effective 
 this last change for flexibility 
 i want to 
 increase the user's laziness i guess or 
 ability to be lazy let's not force users 
 to provide data that you can generate 
 yourself 
 so recall this message object it has an 
 id some data in a published at timestamp 
 of some sort 
 now when we're creating a message 
 there's no need for users to supply 
 their own unique id we should probably 
 be keeping track of that for them or to 
 time stamp it when it was published 
 and we can do that ourselves 
 now we probably would not have the 
 timestamp be set at the time the message 
 is instantiated it'd probably be set at 
 um when it's actually published um but 
 coming up with real world examples is a 
 bit difficult so if you can just go 
 along with me here 
 so hopefully we have a bit of user 
 understanding as well often users will 
 want to print or log a message for 
 debugging purposes 
 and for that we should provide a wrapper 
 method 
 to make it easy for them to just print 
 out the the message instance 
 now the user won't need to worry about 
 printing the necessary attributes on the 
 message but just the message itself 
 so this is just one approach to 
 redefining our message object to help 
 out the user and we could also use data 
 classes this removes some boilerplate 
 for us it does get a little clumsy to 
 set defaults in our in our case with 
 using post init 
 and the code goes a bit off to the side 
 but it's still nice 
 a third option would be to use the third 
 party package 
 the author of adders is right here 
 and so adders allows me to go back to 
 four space indentation but it also 
 allows me if needed to provide more 
 flexibility and constraints for my users 
 since not only does it have a clean way 
 for me to set dynamic defaults but it 
 also has validation converters and even 
 the ability to abuse in it more so if i 
 needed 
 i'm not a paid shill for adders i'm just 
 a happy user 
 so if your api is not flexible if you 
 find yourself saying you know i'm sorry 
 i know our api should do that but for 
 reasons that you don't care and that are 
 within our control we can't 
 if the api is not flexible users often 
 will ditch the library and go to 
 somewhere else to solve their problems 
 and so for my last tenant 
 an api should be simple 
 the complexity of an api can be measured 
 by the cognitive load it requires to 
 actually use it complexity hurts our 
 understanding 
 we've already made some changes to 
 reduce the cognitive load of our api 
 like 
 inconsistent and appropriate method 
 naming limiting the number of positional 
 arguments in our function signatures 
 and minimizing the amount of repetition 
 the user has to do but we can make a few 
 more changes 
 the first change is to provide 
 composable functions 
 api 
 apis that follow the mathematical 
 closure property tend to be simple as 
 well as flexible 
 loosely an api holds the closure 
 property when every operation returns a 
 data type that can be fed into another 
 operation 
 so this means that different operations 
 of your api can be composed with each 
 other 
 for example in python we're able to 
 chain a bunch of string methods together 
 since the output of many string methods 
 is yet another string so this closure 
 property makes it easy to combine 
 operations to get the desired result 
 maybe users don't often do this but 
 following this 
 where possible allows users not to have 
 to remember 
 differing function signatures operating 
 on the same object 
 so if we look at our subscription client 
 we have two methods that operate on the 
 message object 
 it's pretty reasonable to think that 
 once you pull a message from the chaos 
 cue you'll want to acknowledge it 
 otherwise it'll get re-delivered and 
 you've got some duplicate work 
 so there's no reason for us to be 
 restrictive in our function signature 
 for acting and requiring a string 
 and that adds cognitive load to the user 
 they have to remember that they must 
 give an id for of the message that they 
 want to act and can't just pass in the 
 object that they've been working with 
 so let's change that to make it a 
 message object and then we can figure 
 out how to get the id of the message 
 from there for them 
 and now it's simpler for a user to just 
 pull a message from a subscription queue 
 and then act it and then while we're at 
 it we can also accept that 
 create the ability to accept multiple 
 messages if the user wants to batch up 
 their acknowledgements and it certainly 
 adds to the symmetry of our method 
 signatures 
 the next one we want to align our api 
 with some python idioms making it more 
 pythonic 
 leveraging python idioms also leans into 
 what the programming language affords 
 different different programming 
 languages allow you or afford you 
 different approaches to the kinds of 
 problems we tend to solve 
 like supporting reflection and 
 introspection 
 or supporting default values for 
 function parameters or how to define an 
 iterator which leads me to let's looking 
 at our next subscription client and the 
 user has to call pull to get a single 
 message and as you might recall that 
 user had a while true loop 
 um 
 so let's make it easier for the user and 
 provide an inner method that returns an 
 iterable 
 so providing an iterator is helpful for 
 cases like this where the user has is 
 consuming a stream of events 
 or data it's also helpful helpful 
 for users might when they might need to 
 like page through results like a search 
 query with hundreds or thousands of 
 items 
 and so this iter method also happens to 
 simplify user's code even more 
 the iterable just stops when there are 
 no more messages the user now can remove 
 a try and accept for an empty queue 
 and so in continuing on leveraging the 
 python idioms you might remember that 
 both clients have a closed method 
 managing any connections and buffers 
 underneath the hood 
 this forces the user to remember to 
 clean up after them after themselves 
 adding to complexity and cognitive load 
 so you might see where this is going 
 let's make use of a context manager 
 providing an easy way for users to not 
 have to worry about remembering any 
 finalization or cleanup behavior 
 so for the last change 
 we can also think of simplicity as 
 convenient to get started how much do i 
 have to learn 
 to start being able to use this library 
 what do i have to do right now to get 
 this working if the api is not 
 convenient if it takes many steps to get 
 started or if i have to page through 
 docs in order to get a very basic 
 understanding then the tools adoption 
 will suffer 
 so provide your user with convenience 
 and you do this by treating your readme 
 like you would a newspaper give them the 
 most important details first like above 
 the fold and if users want to learn more 
 they can turn the page 
 so when i'm looking at a readme i want 
 three things above the fold 
 how do i get your library do i need any 
 system level or non-python dependencies 
 here 
 and then one what are one or two 
 examples that i can copy and paste and 
 to immediately try this out 
 and the last one where do i go for more 
 information 
 so just give me these three things at 
 the top and i'm good to go to get 
 started with your api 
 so creating a simple api is all about 
 reducing cognitive load on the user 
 reducing what the user has to keep in 
 their head while working with your api 
 and i know that was a lot so let's 
 rewind and review 
 real quick 
 so we started here with a very simple 
 api that only contained two classes 
 as we went on we broke our code into 
 three classes so this slide's a bit 
 unreadable but that's okay because we 
 started with a lot of user code 29 lines 
 to be exact and we got it down to just 
 14 lines with our changes so now this 
 code fits onto one slide completely and 
 is readable 
 so this should be the goal not 
 necessarily the number of lines of code 
 but it's about user empathy when 
 designing a delightful 
 api so to recap is your api intuitive 
 for the user is it flexible for their 
 use cases 
 is it simple enough to essentially learn 
 once 
 so you have to keep in mind your 
 software will become a part of a larger 
 system your only choice is whether it 
 will be a well-behaved part of the 
 larger system 
 the how can be a bit elusive so 
 hopefully this example progression in 
 improving this dummy api was helpful 
 but it's a lot to remember i know so if 
 you can only remember one thing from 
 this talk besides my awesome cheeky 
 synthwave theme 
 is this if all else fails standardize 
 don norman leaves us with a good 
 catch-all when no other solution appears 
 possible then design everything the same 
 way so people only have to learn once 
 so you can find my slide and some 
 additional resources here thank you very 
 much 
 [Applause] 
 [Music] 
 thank you lynn for that very informative 
 and inspiring talk 
 uh we alas do not have times for 
 question but lynn will be around on the 
 conference so you can try to get her and 
 ask your questions directly 
 and you can also watch the recording of 
 this talk on youtube if you want to just 
 replay with the examples because i think 
 we all learned a lot today thank you 
 very much let's have another round of 
 applause for lynn 
 there will be a short break now and the 
 next talk will be at 11 35 in this room 
 thank you 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 uh 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because 
 it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here and i think it's also 
 important because it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages and in my personal 
 life i've got a lot of trans friends and 
 family but we're in a little bit of a 
 bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 [Applause] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections keep it simple 
 [Music] 
 uh 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is uh 
 tremendously important because it gives 
 us a 
 space to be among our those that are 
 like us 
 which in my case is very rare so i 
 really appreciate the opportunity to 
 meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends with family but we're 
 in a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits find out how umnitsa 
 can give you complete control and 
 insight across your technology 
 portfolios book a live demo today at 
 umnitza.com 
 [Music] 
 [Music] 
 [Applause] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 uh 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is uh 
 tremendously important because it gives 
 us a space to be among our those that 
 are like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having a shared sense of humor with 
 people i've never met 
 is really really lovely and of course 
 getting to nerd out about 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 [Applause] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 uh 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 so 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is a 
 tremendously important because it gives 
 us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages and in my personal 
 life i've got a lot of trans friends and 
 family but we're in a little bit of a 
 bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd out about code 
 [Music] 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how imnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 [Applause] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 what does channel mean to you in one 
 word people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so this is better i hope you can hear me 
 now in the room 
 so um 
 it's great to have everybody here in one 
 place 
 after doing two remote conferences 
 where we all were sitting uh other 
 computers iphones and ipads 
 and just had to interact by chat 
 but one thing 
 that 
 in the last two years was also nice 
 because there are many people who cannot 
 come to dublin or cannot come to the 
 european and they have a chance to take 
 part in these conferences even without 
 being here 
 and 
 so for this year we have decided to 
 allow a few people to present remotely 
 and also that you can interact with them 
 remotely as well and the next talk is 
 going to be a remote talk 
 but 
 hopefully we should be able to 
 uh still interact with you and i can see 
 that some 
 the preparation for this is going really 
 well i'm glad that this works because 
 this is the first time we are actually 
 trying this out on a live stage 
 we have as the next talk vinicius 
 gubiani ferrer 
 and he's going to talk to us about 
 python packaging 
 and 
 how to publish those 
 so 
 let's see that the technology works and 
 welcome vinicius to screen hello 
 hello there nice to see you once again 
 uh 
 i hope i think everything is okay right 
 now we have a bit of an audio issue a 
 couple of minutes ago 
 thanks everyone for coming to this 
 presentation uh entitled from peep to 
 poetry part of many ways of packaging 
 and publishing 
 hope you guys enjoy it 
 uh for those who never heard about me my 
 name is vinicius venison 
 i work at asean technologies as a senior 
 software engineer 
 for most of my career at azul i've been 
 a python back-end developer 
 and since last year i started working in 
 the newly created quality assurance area 
 of the company 
 i'm also an open source contributor i 
 work on translating the python 
 augmentation for brazilian portuguese 
 and i also loved fresh beer and riding a 
 shared bike around the park 
 so our agenda for today in this 
 presentation 
 we're gonna quickly go into the 
 motivation for doing it 
 we're gonna talk of course about package 
 managers 
 ppf poetry 
 everything related and between them 
 i'm gonna show you a dummy application 
 that we're gonna package and deploy with 
 each of the package managers 
 and we're gonna wrap it up by showing 
 the differences the weak and strong 
 points side by side on the three package 
 managers 
 and 
 hope you guys like it so let's do it 
 first things first 
 the motivation for this presentation 
 is to help everybody who's watching to 
 reach for the next level 
 even when we are experiencing 
 programmers there's always something new 
 to learn or something that can be 
 improved i know i learned a lot uh 
 during the research for this 
 presentation because last time i tried 
 to package a python application many 
 many months ago 
 it was a total shame disgrace to be 
 honest and this time i felt wait that's 
 it there's something wrong can't be that 
 easy 
 and 
 it is 
 and uh 
 i hope you guys learned something new 
 even if it's a tiny thing by the end of 
 this presentation 
 if you did then already be glad 
 so 
 package managers 
 they are small but very important part 
 of software engineering which is called 
 configuration management 
 and the 
 configuration management for those who 
 never heard about it is a system 
 engineering process for establishing 
 consistence of our products attributes 
 through its lifetime 
 so let's focus on consistence over here 
 and uh that means in simple terms or 
 representation that 
 if we had the same ingredients and 
 follow the same process we will have the 
 same result 
 because after all everybody had or will 
 have that works on my machine problem 
 right 
 so we have package managers to help us 
 keep track of the ingredients 
 aka the packets 
 that are used on our application in the 
 in which version they are actually ready 
 and the quick disclaimer before we're 
 getting to our first package manager 
 there's more in python than just peep 
 ppm in poetry there's also 
 there's also easing style which is now 
 deprecated but serving the python 
 community very well until 
 2008 when it was replaced by pip 
 officially 
 there's also conda which is an amazing 
 package manager for the data community 
 around python nr 
 there are also the package managers of 
 the operating system itself that can 
 allow you to install python packets but 
 they are not usually the best choice 
 because sometimes the version that you 
 have available is a bit outdated 
 but we're not going to go into details 
 of all of this 
 so 
 speaking about pip 
 to get it started what exactly does peak 
 means it can actually mean several 
 things like pip install packets piping 
 style python and even preferred 
 installer programmer 
 and the 
 pip is it's despite its stage is 
 very widely used in the fighting 
 community and sometimes it really comes 
 pre-installed on some python systems 
 and 
 in just in case it's not already 
 installed you can just cll this address 
 and run it against the python 
 interpreter and that's about it it'll be 
 installed 
 if you want to install a specific python 
 package we just run pip install in the 
 package name 
 if we want a specific package version 
 then we just use the double equals and 
 the number of the package 
 and finally if we decide to 
 create a manifest of all the package 
 that we are actually using on our 
 application 
 then we're just going to create a simple 
 txt file 
 store that information in there and use 
 the minus r option to install it 
 so that's about it with pip 
 and 
 some people might be thinking 
 so simple as that and it's perfect and 
 turns out it's not because i'm gonna 
 tell you a story that happened with me 
 it is a true story in the following 
 aeropythons guidelines since this is a 
 family conference this is rated e for 
 everyone but it's rated only by me not 
 to any other 
 group of people whatsoever 
 so 
 that story 
 starts with a much less experience in 
 venezus about nine ten years ago 
 and he was saying thank god this 
 research project is finally being 
 delivered i had enough of it and uh 
 it just started to break from the 
 previous nights to the next morning 
 and uh we didn't still understand what 
 was going on 
 it was working fine on the previous 
 night and uh 
 really at least i really felt like 
 banging my head against the wall and 
 trying to find a dark corner so i could 
 cry alone 
 and after a couple of minutes of being 
 said 
 we started to look it up into 
 understanding what's going on 
 and 
 we noticed that a python package 
 was breaking because one of the 
 dependencies a child dependence of a 
 package just flip it from 
 beta version to release version really 
 scattered sorry 
 and uh that started to break the project 
 build which took about hours 
 and uh 
 after a few attempts we had to do two 
 minor fixes which is deciding to 
 manually install the previous python 
 version of that child dependency that 
 was actually working 
 but unfortunately it wasn't enough we 
 had to install it before the package 
 that we are actually installing so we're 
 kind of tricking people into 
 using the version that worked 
 and uh from that they all we learned 
 some interesting lessons with python 
 with pip 
 and the first of all is package order 
 does matter at least see 
 requirements.txt it does 
 uh dependency sometimes is not solved 
 like we think it does 
 but 
 maybe that is because the computer do 
 what we tell it to do and what we're 
 actually expecting wood too 
 works on my machine is a real thing and 
 that is very possible to happen with 
 pink 
 and uh there are only two approaches for 
 written music pip you can either just 
 keep track of the top layer level 
 package that you are actually interested 
 that 
 you know there are there they have a 
 good use on your project 
 or you can just keep track of everything 
 like the image on the right 
 but then your requirements.txt becomes a 
 big mess in the 
 both of the both of these approaches are 
 not 
 quite perfect 
 so 
 after going for 
 some people tend to look to other tools 
 uh when they are 
 seeing through package managers and then 
 they eventually find ppf 
 and how exactly does it differ from pip 
 it takes ideas from 
 uh many other tools other package 
 managers like composer and vm cargo yarn 
 and others 
 and uh 
 it already creates the virtual 
 environments automatically for you and 
 some people might be thinking what 
 exactly is a virtual environment because 
 i didn't mention it before 
 it's like a tiny sandbox where you 
 install your project dependencies so 
 they don't get mixed among different 
 projects in your operating system 
 packages which is good because then you 
 don't rely on sudo or hood or anything 
 else don't expose yourself to security 
 vulnerabilities 
 it also introduces the concept of pip 
 file in pip file.log 
 and basically 
 pip file is the equivalent of 
 requirements.txt 
 but with a slightly different syntax 
 it's not just plain text 
 it keeps tracks of your top level 
 packages 
 and bib file.log keeps track of the 
 lower dependencies the ones that you 
 you're not not actually interested 
 and the in doing so but 
 just taking note of this package they 
 relies on that package the link between 
 them and using hashes everywhere 
 and uh 
 is that it turns out though ppf also has 
 some interesting features that we're 
 going to discuss in a couple of more 
 minutes 
 and uh 
 beyond 
 ppm some people 
 eventually stumble onto poetry 
 the how does it different 
 he goes beyond it also uses the same 
 concept of two files for managing 
 dependencies 
 but uh this time they are called the pi 
 project dot toe and the poetry dot lock 
 but with the same ideas by project.mail 
 is a human readable file 
 while pointer.lock not so much on the 
 other hand you should definitely try to 
 avoid deleting this file by hand 
 and uh 
 with poetry it really feels like you're 
 actually managing a project and not just 
 a piece of code like when you do with 
 people or vpns mostly because poetry has 
 some interesting comments that help you 
 out like maybe poetry lead and poetry 
 new project d 
 and uh 
 it really feels like you can control 
 everything with a single tool including 
 publishing and packaging which you're 
 going to see in a couple of more minutes 
 but i should probably warn that uh 
 poetry is dropping python to support 
 soon i'm not exactly sure when but i saw 
 it on their website but uh if you're 
 thinking of starting a new project with 
 python2 then 
 you're probably in the wrong 
 presentation you should be watching a 
 presentation maybe about migrating from 
 python 2 to python 3 and not a 
 presentation about package managers 
 all right so after looking nothing to 
 our package managers 
 i'm going to present a simple 
 application that we're going to package 
 and publish with each one of them 
 and uh this application 
 is not going to make us a billion 
 dollars or uh maybe save some lives or 
 anything like that but it's just for fun 
 we're going to create the should we 
 deploy today cli application with the 
 package name included like deploy today 
 deploy today poetry and that's it 
 and i'm not the owner of this website 
 myself i just find it really 
 interesting is 
 good for laughing because 
 we every now and then we always need a 
 joker left to make us happier 
 and uh it has a simple api very simple 
 doesn't require any authentication or 
 authorization so you just gather get a 
 response from the web 
 in the get message and that's it simple 
 as that 
 you get different messages according to 
 the day of the week that you are in the 
 time of the day 
 so 
 getting started with 
 bip to package and distribute 
 we're gonna start by creating a simple 
 folder structure like this one on the 
 right 
 we got our license a readme by project 
 on them different configurations a 
 source folder which we're going to 
 create a module and set our code 
 and a test folder we're not going to 
 write tests for this simple synthesis of 
 the application 
 but uh 
 uh just in case you decide on the 
 interesting project that's nice to have 
 already to think about it 
 and uh 
 here's the code that we're actually 
 going to use we're just going to set it 
 up into the source folder 
 with the thunderbig file 
 is just getting the get method from the 
 request library and get the api convert 
 it to json and just get a specific key 
 and 
 set it up printed on the screen on the 
 standard output 
 we're going to of course need to get our 
 request library into the 
 requirements.txt 
 so over here we installed a fixed 
 version and if it was successfully we 
 just take it to our manifest file the 
 requirements.txt 
 we're going to configure pi project.mail 
 to say that we're going to use setup to 
 build the package setup tools 
 and we're going to go through a lot of 
 configuration this is probably the worst 
 slide this time presentation so bear 
 with me over here we're gonna set the 
 package name what's our name or email 
 some descriptions the version 
 the configuration that i'm mostly 
 interested are the one on the right part 
 which you're gonna say where the package 
 should actually be packaged which is the 
 source folder 
 the install requires we're going to say 
 that we did the request library 
 and 
 under the console scripts we're going to 
 say 
 how should we actually call or client 
 and line application we're going to say 
 deploy to date b 
 and it's going to be loaded from the 
 module 
 example package the file name and the 
 database method 
 so to generate the distribution we're 
 just going to use the build module that 
 is available uh with python 
 and after we 
 tell its to build our application we're 
 going to notice that a new folder will 
 come up which is called a dist folder 
 stand first distribution and inside it 
 there will be two files 
 the wheel and the target z it they might 
 come up into the on the internet such as 
 bts and estes stands for binary 
 distribution and source distribution the 
 binary distribution is actually your 
 package compile it to your operating 
 system and your architecture 
 and preferably 
 if 
 wheels pipping tries to install if it is 
 available for your config system in your 
 architecture because it's quicker 
 if it's not then it will install from 
 the source directly your target see 
 which is just your sort code zip 
 it and after we build it we're gonna 
 need to create a token on pipey.org 
 which is the python package repository 
 and uh i'm actually using test pipe 
 which is 
 like a staging area where you can upload 
 your packets because 
 if you try to do it on production like 
 pipey.org directly and there are any 
 people using your package and if you 
 start a bug breaker package then you're 
 making you're to make users uh kind of 
 mad at you so preferably always try to 
 use tasks by p.org 
 and uh 
 after we grab the token we just 
 configure it this specific file set the 
 username to their token and place our 
 token 
 and uh we're going to upload it to pipey 
 with a package called twine just say 
 that we actually want to use 
 the test by p repository and not the 
 official piping 
 it takes a couple of seconds to sign in 
 and after that we'll notice that both 
 the wheels and the rgz will be uploaded 
 and we're going to install it from pipey 
 just use a different source than the 
 official pipey use the minus i option 
 and now 
 we have uh 
 our command line application ready 
 deployed to the ap 
 if we call it we get the suggestions 
 that we should not deploy today since i 
 was doing these lights on the saturday 
 night he mentioned uh that i should not 
 actually try to deplete 
 all right so 
 uh going for ppf 
 uh how does it different we have the 
 same folder structure 
 and uh 
 we just installed vpn 
 in the create object environment and 
 install the request library 
 if we install the request library bpm is 
 already added for a big file itself 
 for us you can see in the middle that 
 requires the request library was already 
 added 
 and the pip file.lock i'm not going to 
 show it over here because i couldn't fit 
 properly into the slides but trust me 
 you open over there it'll be a big mess 
 filled with hashes so 
 don't change pip file.lock 
 and uh 
 to see dependencies with ppm an 
 interesting feature that it has you can 
 actually see the graph dependencies like 
 uh which package depends on which 
 package and this is very very helpful in 
 case you have any issues with packets 
 and works both ways either from top to 
 bottom or bottom up 
 and uh some other features interesting 
 features that are available with piping 
 we can actually check for security 
 vulnerabilities and compliance with peps 
 install packets just as developer 
 packets and once we're actually 
 satisfied 
 we just run bpm.log 
 and it will update uh pip file.log if 
 necessary and from now on you actually 
 achieve it through consistency 
 and uh if you just run ppm install dash 
 dash ignore pip file then it will use a 
 dot log file and it'll work for sure 
 and uh as i mentioned before we can 
 actually 
 uh 
 already install any developer 
 packets by just using the dash dash dev 
 option 
 so what about packaging and publishing 
 with ppm 
 on my research at least i found that it 
 was pretty much the same process or 
 maybe even a bit more complicated than 
 peak itself so that's why i'm going to 
 skip it and go into point 
 and also make it fit into a 30 minute 
 presentation 
 we're almost up 
 and uh with poetry it already creates 
 the project folder structure for us with 
 a simple comment as we can see on the 
 right it's a slightly different but it 
 still works fine 
 and we add the requests package 
 and it takes a couple of more seconds 
 and after that it is already added to pi 
 project.male and poetry.log we don't 
 have to worry about any gauss 
 our source code 
 is pretty much the same as before just 
 under a different panel folder 
 the pi project.l we have to actually say 
 that 
 the client's line application that we 
 actually want we change the name in the 
 source where it will load a specific 
 python code 
 this is where it gets starts to get 
 interesting 
 to distribute we don't actually need any 
 other tools we just run point tribute it 
 takes a couple of seconds and it will 
 build the source distribution and the 
 binary distribution just as before 
 we have to also set the token in the pi 
 test 
 the test repository for pip.org 
 and we can do it with this simple 
 comments 
 uploading to pipeline is just a matter 
 of saying poetry publish also doesn't 
 need any specific tools 
 a couple of seconds later it is already 
 uploaded 
 and if we install it from pip test 
 just run this specific 
 comment with p 
 and we got a new application or command 
 line which will be deployed to the 
 poetry 
 if we run it we got another suggestion 
 for if we should deploy today and since 
 this wasn't business hours i believe it 
 was 
 all 
 start of the evening on tuesday or 
 wednesday then we got a message this is 
 the way which is a quote from the modern 
 lawyer it's very yoda like very positive 
 in the with poetry that's about it 
 and finally to wrap it up as i mentioned 
 before a side-by-side comparison of each 
 of the tools 
 uh my suggestion is that if you're just 
 starting with python then preferably 
 just try beat because it's probably the 
 simplest of all the tools that you can 
 get 
 but uh it's not self-sufficient you will 
 rely eventually on other tools and 
 clients for virtual environments or 
 packaging and publishing 
 uh as you can see poetry is probably the 
 most advanced two of the three because 
 you're not reliant even for packaging 
 and publishing 
 and uh once again you should probably 
 uh 
 stay away from python 2 just a reminder 
 this is not the purpose of this 
 presentation but it's worth remembering 
 and 
 yeah that's valid uh here are the 
 sources that i used for my presentation 
 in case 
 you want to check it out later for more 
 details that they were very helpful for 
 me 
 i would like you to thank you so much 
 for the european committee and for 
 everybody who has joined me for this 
 presentation i hope you guys enjoy it 
 thank you 
 [Music] 
 if you have any questions at all feel 
 free to contact me to any of these 
 things or 
 venulins or discard any of the ones that 
 are available in the repair tool 
 during the conference 
 you can also 
 ask questions or doubts i love to hear 
 your feedback thank you so much thank 
 you very much for your talk and let's 
 have your applause 
 we do have time for some questions do 
 you mind some questions 
 okay we have a microphone here in front 
 uh could you please get up to the 
 microphone and ask you a question thank 
 you 
 just don't touch the microphone just go 
 down and ask into it thank you so thank 
 you for the presentation uh so you 
 mentioned a number of uh 
 package 
 tooling so i was wondering between uh 
 advanced ones like poultry conda mamba 
 do you have a view on the trajectory 
 like what do people use more 
 uh poetry is conda 
 uh being phased out is mamba still 
 i'm pretty much sure that conda is very 
 used for 
 anybody that uses for example anaconda 
 which is a way of distributing python 
 which is more focused 
 on the data community like data analysis 
 than the science and other i myself i'm 
 a web developer so usually i don't deal 
 with condo or anaconda but i know it 
 exists 
 for those with that views with data on a 
 daily basis i believe they are more 
 focusing on using code themselves 
 and uh i know this during my research 
 for getting examples that 
 people 
 it's maybe at least in my opinion losing 
 a bit of momentum and the more modern 
 tools are taking places uh like uh even 
 ppm is a bit of decline 
 uh 
 this my opinion i believe that uh 
 beginners tend to go by using pip 
 and the 
 intermediate to advanced certified users 
 are going with poetry i believe in my 
 opinion 
 okay thanks for your answer are there 
 any more questions please get to the 
 microphone thank you 
 um you've talked about poetry and uh but 
 there was an issue i encountered when 
 i was developing with poetry recently 
 basically i had a dependency 
 but when i installed it i had an issue 
 and so searching the issue online i fell 
 on get up issue which mentioned that the 
 package 
 required poetry to be like in a preview 
 version 
 so i had to build poetry from git 
 sources to actually add the dependency 
 which was quite weird 
 so i don't know if you ever encountered 
 issues like this 
 with poetry or 
 yeah i'm actually due to poetry i'm just 
 starting to use it and i never saw 
 something like that to be honest like uh 
 to install a specific person version of 
 a package uh you actually have to update 
 your package manager that sounds a bit 
 weird but 
 maybe 
 i can to be honest i'm not sure what 
 could be causing that uh 
 maybe the version of poetry that you're 
 installing was 
 some 
 weeks or months ago that in that case it 
 caused the issue and that might be it 
 uh 
 i if you remember 
 when you saw it that might be the 
 specific region 
 pointer is other 
 constant developments um 
 since it was news something might have 
 been break broken during the 
 developments that might be the reason i 
 believe but usually package managers 
 don't 
 that don't ever happen i believe 
 i'm so sorry that you had that awful 
 experience 
 okay thank you very much that's about 
 all the time we have for questions at 
 this point 
 uh so let's have another round of 
 applause for vinci's for this great talk 
 thank you and thanks for joining us 
 uh will you be available online for 
 others to reach through the venues or 
 the rooms 
 sure okay yes so people can also try to 
 contact him online we'll continue in 
 five minutes thank you 
 thank you so much 
 centered on the trans and non-binary 
 communities it's a chance for us to come 
 together and share our experience 
 working on a common problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because it gives us a space to 
 be among our those that are like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having a shared sense of humor with 
 people i've never met 
 is really really lovely and of course 
 getting to nerd out about code 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 [Applause] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future 
 and create groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 so 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 so 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is uh tremendously important 
 because 
 it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble and just being 
 able to geek about geek out about sort 
 of shared interests having a shared 
 sense of humor with people i've never 
 met 
 is really really lovely 
 okay welcome back to the third talk in 
 this blog 
 um 
 we now have monica blahova 
 she's a 
 gis data analyst 
 and a phd student 
 kind of 
 and works 
 at the 
 global change research institute in 
 burnout in the czech republic 
 and today we are going to learn about 
 the check draught monitoring system so 
 please give a round of applause to 
 monica 
 [Applause] 
 everybody uh it's great to see a lot of 
 you there i didn't expect that so i hope 
 very hope that you won't be disappointed 
 about what you are about to hear 
 so my name is monica once again very 
 happy to be here and today i would like 
 to talk not just about the check drug 
 monitoring system even though that's 
 something we do in our work and that's 
 something that's powered by python i 
 would like to say but also and mostly 
 about my journey how i even came to the 
 coding in python 
 and how it was for me 
 and hopefully it would motivate those of 
 you who might be the beginners or maybe 
 a little bit lost in the tech world to 
 you know navigate through all that and 
 find possibly your path to not 
 necessarily becoming a developer 
 but becoming something else which you 
 can use python or coding for 
 so let's dive right in 
 what is this talk is going to be about 
 so as i mentioned you don't have to 
 become a developer to code for a living 
 and actually have fun this is what my 
 case was 
 and you don't have to be scared if you 
 don't really enjoy all the technical 
 details you still can do amazing stuff 
 because you can sneak up to some other 
 industry or research and really connect 
 the coding with something you love or 
 you find yourself passionate about 
 and 
 you don't really have to be a tech guru 
 to do this and to be really helpful to 
 some scientific team or industry team 
 that just needs somebody to help with 
 the coding and you know maybe with some 
 good practices to bring from the 
 development developing world 
 and you can still do a pretty amazing 
 stuff which i'm about to show you as we 
 do in the czech republic 
 and you don't ever have to be scared to 
 show of what you have learned so far 
 even if you don't feel like it's so much 
 because it was also my case 
 so unfortunately there is 
 some things that are not in this talk so 
 this talk is definitely not about some 
 super advanced python state-of-the-art 
 coding i'm very sorry sorry for that if 
 there are some tech gurus in the in the 
 area please run away because you would 
 probably be terrified with what are you 
 about to see 
 we are also 
 not about newest technologies to terrify 
 you even more some of our codes still 
 runs in python 2.7 
 nobody is running away okay 
 great to see that and it's not about 
 kubernetes whatever is that 
 but please somebody tell me what what's 
 that because i really need to know 
 everybody are talking about it i have no 
 idea i'm just laughing and nodding and 
 please find me at lunch because i need 
 some information about this stuff 
 thank you now to the talk 
 nobody has left still so a little bit 
 about me to start the journey 
 as mentioned my name is monica i feel 
 myself to be a mediocre pythonista and i 
 decided to use this title few years ago 
 when i realized i don't have to google 
 how to slice a string 
 i just did it and it was right i just 
 got the part of the string that i needed 
 for the first try so 
 i thought you know i'm not a junior 
 anymore i'm a mediocre kind of 
 pythonista now 
 i'm also not very smart 
 i mean i got into dublin without any 
 troubles at not the major ones 
 but you know i'm not this kind of a very 
 brilliant brain 
 who is 
 still filled with thoughts overthrowing 
 with ideas i'm just sitting there 
 watching learn something new now and 
 then but not so very brilliant keep this 
 in mind during the presentation please 
 i'm also as already mentioned want to be 
 a phd because i decided i will do my phd 
 in climatology in my 30s 
 after for several years of saying that i 
 would never do my phd so let's also say 
 something about me 
 i am a gis analyst gis stands for 
 geographic information systems if you 
 are not familiar with that and i'm also 
 a very union researcher 
 and to sound at least a little bit fun i 
 am also a winter and winter sport 
 enthusiast so you can usually find me 
 somewhere cold or at least somewhere far 
 from the steel level 
 now if you when you get to know me a 
 little bit better i can start with my 
 journey to coding 
 also known as how i learned to code even 
 if i didn't want to i also tried to 
 illustrate this path with a piece of art 
 of mine the crooked line 
 i did myself yesterday in the evening so 
 just saying not only the coder and the 
 researcher but also maybe a graphic 
 designer who will see we will see 
 so my path to coding started actually at 
 the university i did my studies at 
 masarik university in brno which is the 
 literate thing in the czech republic 
 it's not prague it's brno please just 
 mentioning it because it's a big 
 difference 
 and i did both of my bachelors and 
 masters in cartography and 
 geoinformatics and don't make me wrong i 
 loved my studies it was amazing i 
 learned a lot there was an amazing group 
 of people it was like seven of us in the 
 in the program so it was pretty small 
 and cozy 
 but there is a little bit of confusion 
 with the informatics part 
 of the name of the program 
 so most of the time 
 we felt like this is a monk on the image 
 we learned a lot we learned a lot about 
 the physical geography that means how 
 the atmosphere works what types of soils 
 we have and why is that how did it come 
 together 
 we also around the road about the 
 history about old maps how and why where 
 they made 
 and who made them how the geographical 
 names went to the world and stuff like 
 that we also did a huge amount of 
 regional geography and that's why i know 
 that pedro tawagawa is the highest peak 
 of sri lanka and i will never forget it 
 for some reason 
 but we also did some gis 
 that means clicking in the software that 
 specializes in somehow analyzing the 
 geospatial data 
 and they also enlighten that enlighten 
 that us by the fact that the databases 
 exist some databases i don't know what 
 it is 
 they are somewhere you can have data in 
 them and that's about the informatics 
 that we got into so really we felt quite 
 a bit like the monk on the picture 
 with this quill trying to map the world 
 even everything is already mapped being 
 coached by some other guy who is 
 pointing somewhere totally different 
 more or less we felt like this is not 
 really what the job market expects from 
 us after we graduate in geoinformatics 
 because from where we got this was maybe 
 the picture that job market had about 
 the joe informatics and we didn't quite 
 look like that at all 
 so we got nervous 
 and that's why when the bachelor of 
 thesis came 
 i decided i will go a different 
 direction for some reason they let us do 
 a non-research thesis and they do let us 
 do applied thesis so you can you could 
 actually make something you don't have 
 to discover stuff 
 and what they also let us do for some 
 reason was choose our own topic so guess 
 what i did 
 i go i went for that i did an applied 
 thesis with my own topic 
 and for some reason i was surrounded by 
 photographers at this time all my 
 friends were doing something about 
 photography so they gave me this idea to 
 do the web map application that 
 photographers could use 
 to you know share those spots to take 
 pictures in 
 everything there was an interactive map 
 there was a logging 
 there was like doing stuff with the map 
 actually to making it interactive 
 putting points of interest into the map 
 remember that monk from the picture in 
 the last flight oh he suffered a lot 
 with this 
 with his little quill 
 so 
 it somehow went through uh for some 
 reason 
 it was 2013 so i chose php because it 
 was how we were out in that time 
 and i felt like it was coming together 
 somehow i was not happy about it i quite 
 a lot of hated the code the idea of 
 coding 
 and there was some crying 
 and stuff like that but i somehow put it 
 together and you won't know what came 
 next 
 yeah 
 this bad guy 
 i was suffering a lot 
 a lot and i hated it even more when i 
 have to do this part in javascript which 
 was basically everything from the map 
 interactiveness to logging you know that 
 you are developers mostly 
 so 
 it was terrible but somehow i made it 
 through and i gave the thesis in and i 
 also got into my masters because on the 
 other hand i really loved the studies i 
 loved to learn 
 so i went to my master thesis 
 and you know what my advisor somehow 
 remembered what i did for my bachelor's 
 thesis and suggested that it would be 
 great idea to help another guy with 
 another web map application and i went 
 for it again 
 this time it was something that already 
 existed but what was needed for me from 
 the old little monk was to do the 
 advanced geospatial stuff and figure it 
 out 
 there was this huge portal for hikers to 
 plan the routes plan their trips so i 
 had to think about 
 how to even do a route planner planner 
 how to do the elevation gain maps and 
 stuff like that so nothing too great i 
 was totally in the dark 
 thanks to my friends and a lot of good 
 advice i somehow managed through 
 the other thing was that the porter 
 already existed and it was written in 
 something and it was ruby 
 and i was suffering again for some 
 reason and at this point i wasn't even 
 sure that coding is something that i 
 would like to do because i had this php 
 behind me and i didn't like that then 
 the javascript part i hated it totally 
 and then this guy also didn't you know 
 speak to me 
 that much 
 but i'm again somehow things got sorted 
 out i went through and since i was at my 
 master's i got the time to get a 
 part-time job which i got i got the 
 part-time job as a i.t specialist that 
 monk was an i.t specialist now 
 i actually applied for a gis job in the 
 company that figured out how to do flood 
 management points for the literacy or 
 those cities municipalities 
 and i 
 applied for a clicking in gis and doing 
 those plans actually make putting them 
 together and communicating to 
 communicating with the majors 
 but my upper ever heard about my great 
 success with those map portals and 
 coding and stuff and offered me to join 
 the iit team and i said yes because 
 i don't know 
 i mean now i'm happy about that but at 
 this time i don't know what i was 
 thinking 
 but i went for it i finally learned a 
 little bit of python because the company 
 was based on python coding and things 
 started to make sense a little bit i 
 discovered python i liked it 
 much more than what i have seen before 
 for some reason i don't know maybe it 
 was just a better collective whatever i 
 had more time to do that it doesn't 
 really matter at the end 
 and 
 things started to turn out a little bit 
 better because i realized that python 
 and gis technologies are actually very 
 good friends and that i could do a lot 
 of stuff that i did manually in gis in 
 python the question is why didn't they 
 tell us at uni why didn't even 
 why they didn't have a python curse 
 there we don't know till this day but 
 whatever we found our race all of us are 
 doing just fine nobody is monk 
 so yeah 
 also a very great thing to me 
 thanks to the fact that i was in the i.t 
 department i landed in the coding social 
 bubble so now i was surrounded not by 
 the photographers which was also great 
 but not so helpful but by people who do 
 code and they actually enjoyed it at 
 some level 
 so i joined pyroids at first as a 
 trainee 
 and as the time went i also became a 
 coach but it's another story 
 so you know i started to get around a 
 little bit better i finally wrote some 
 decent code and i also gained some 
 view on how it should look like what are 
 the good practices i'm not saying that 
 it was something amazing but you know it 
 started to look like a code not like a 
 mess in some kind of language 
 and but i also realized i still don't 
 like the hardcore technical stuff 
 the things that guys were talking about 
 by the coffee machine all those little 
 bits and pieces i wasn't interested in 
 that still 
 so i thought it might be a problem 
 but i figure out it might also be a note 
 because by the time i actually went for 
 my first real job interview 
 it was just when i ended the uni and i 
 got into 
 the great place the scientific world 
 which i also didn't know by the time but 
 now i see it 
 and i became a part of scientific team 
 because lucky for me i was successful at 
 the interview again don't know why but i 
 was 
 and i finally realized what can i 
 actually code and enjoy it 
 so 
 i landed at czech globe that's the long 
 name of the institution that you have 
 already already heard 
 a little bit about that because it's my 
 home for six years now and i still 
 really dig it it's the research 
 institution under the czech academy of 
 science 
 we are quite big there is 350 people 
 most of the people are scientists 
 um the focus of the institution oh okay 
 uh is the 
 global change impact on ecosystems it's 
 a pretty wide we have lots of teams and 
 my team is focusing on the climate 
 change impacts on agroecosystems that 
 means we are focused on agriculture how 
 does the climate change impact the 
 yields the pests outbreaks and stuff etc 
 etc on the picture you can see one of 
 our experiments when we are torturing 
 the plants with the different co2 levels 
 which uh 
 each one of these greenhouse has a 
 little bit different co2 level and we 
 are searching what is happening to the 
 plants that are living inside of the 
 greenhouse so most of the our work is 
 just a torture some plant basically but 
 yeah that's what we do for science 
 so the flagship of what we do in our 
 team is the checkdown monitoring system 
 you can find it online at the website 
 that is right here the english 
 translation it's not very good we are 
 currently developing a whole new website 
 but it will take a year maybe so bear 
 with us 
 it kick-started in 2014 in 2015 we had a 
 pretty severe drought in the czech 
 republic and we needed some tool to 
 monitor it because the impacts were huge 
 the yields were dropping there was no 
 wheat at all 
 etc i joined in the half of 2016 so 
 quite at the beginning of the system we 
 are monitoring soil drought that means 
 we are interested in how how much water 
 is in the soil to be used by the plants 
 the portal is was made for the farmers 
 basically because that's a group that's 
 the first who is hit by the drought 
 and also for the general public 
 we monitor in czechia slovak republic 
 and also central europe and it's a live 
 product we have the refresh data 
 we have three main data 
 or parts that we build the system upon 
 one is our soil moisture model 
 which takes the ground measurements and 
 at the end of the model it gives out the 
 estimation of soil moisture 
 in the 500 
 by 500 meters pixel we also use 
 satellite data of course observation 
 from many many providers and last night 
 but not least we have our farmers who 
 are reporting us the current state of 
 the growth and the impacts on the 
 crops 
 so as you can see it's quite a data 
 heavy system we have all of this model 
 data earth observation data data which 
 tend to be quite hefty we have the 
 reports the pictures the predictions 
 it's a lot 
 and 
 i realized that besides me and i just 
 joined this there is the one gis analyst 
 who was clicking everything in the gi 
 software 
 so to be honest 
 i thought i was a great fit i had some 
 experience with automation and coding 
 from my previous 
 career or how do you want to call it 
 and i also felt like i can really help 
 even if i don't know a lot because the 
 other gis analyst had no time to do 
 stuff and automate because she was 
 buried in the research and the papers 
 because you have to realize that the 
 system is developed by scientists which 
 is pretty much something a little bit 
 different than the commercial developing 
 software 
 you don't have the product itself in 
 your focus you are focused on the 
 research and you get to system like this 
 just when the research papers are 
 published and grants are you know 
 granted 
 and it's basically a free time project 
 for you 
 you have no software development habits 
 you have no version control the scripts 
 are running at the random notebooks and 
 pcs somewhere at 
 another city on the guy's slab 
 and 
 you don't care how the code looks like 
 which was new for me because you know i 
 just wanted was on the top of making 
 things pretty and functional at this 
 time 
 but this is what i realized 
 and i also realized that's my time to 
 shine and also learn heavily 
 because i could actually start a code to 
 make something better 
 and i decided i will focus on getting 
 rid of all the manual labor that we had 
 that i saw there 
 and that's because i had what i called a 
 newcomer luxury time you know nobody 
 takes care about you you are new they 
 just point you to the coffee machine and 
 nobody expects anything from you for the 
 i don't know first three or four months 
 you can just sit there and look if you 
 are 
 not very into it 
 and i decided i will use the time to 
 watch and learn 
 but also to 
 find out the things that i really don't 
 want to do when i 
 had my place in the team 
 and get rid of those 
 and i identified three of them 
 first was their data downloads somebody 
 was downloading data daily by hand going 
 on on some website and getting the data 
 and 
 putting them in some directories that 
 was terrifying 
 not as terrifying as daily production of 
 map layouts when you did the map in the 
 gi software 
 also by hand by clicking and putting 
 things together also terrible 
 but the most terrifying is that somebody 
 process data weekly in excel by hand by 
 copying things and doing the basic 
 calculations so 
 at this point i was pretty terrified too 
 because i don't don't want to do these 
 things 
 when i get into the team because these 
 were the first things that i would have 
 to do people would like to get rid of it 
 right 
 so about the day we download my task was 
 to add the day with soy water index data 
 to our website 
 that's not really that important what 
 the data was but i figure out that if i 
 automatically download these data i can 
 do it with whatever data we actually 
 using and get rid of those manual 
 downloads 
 just fyi if you would like to get your 
 hands on some 
 spatial data there is the copernicus 
 data store which is isa covered project 
 and you can get 
 free eu and global satellite data at 
 this website so just note for you if you 
 if if it's something that interests you 
 so 
 i went through the daily downloads 
 how do i download the data there was a 
 lot of questions don't make me wrong 
 even if i was motivated i still didn't 
 know a lot 
 how even get into the data formats what 
 what how do i manage projections in 
 python basic geostatistics nothing 
 learned at the uni yet 
 how to get maps from the data also had 
 no idea about that 
 how do you get maps to our website also 
 no idea but you know what i found this 
 one all the answers at the one website 
 and you know what i found else 
 somebody has already done this 
 i am not the first who is approaching 
 these problems surprise surprise so that 
 was great 
 i took this one down another one was the 
 production of map layouts 
 weekly daily map prediction layouts 
 terrible to do by hand because you have 
 to produce all those little maps and 
 then put it into one map and then put it 
 somewhere so again i went for it 
 had my questions a lot of my questions 
 again i found out that somebody already 
 did that 
 and in my career i didn't find anything 
 that somebody didn't already did do so 
 that's a great thing 
 and i realized i love it 
 the job was just opening the doors for 
 me and there was a lot of options which 
 way i would like to go it was it was not 
 boring and i enjoyed coding for the 
 first time and i didn't want know what 
 is to about to come because there was 
 the exos data excel 
 sheet okay 
 just to give you a picture about 500 
 1500 farmers reports weekly processed by 
 hand copying from one exo to another 
 semi-manual calculations one weekday 
 dedicated to this and one colleague on 
 the edge of losing her mind because she 
 was doing it for two years now terrible 
 and i decided i 
 don't want to do this 
 when i'm done 
 so 
 what do we do 
 what do we do in the python community 
 when we see this bad boy 
 yeah 
 we go pandas 
 and i have to say that this specific 
 task 
 was something that i got caught on i 
 fell in love with data science not when 
 i was doing this but you know as the 
 time went 
 and i found my calling in some way 
 and that's just because i went away from 
 the developing world and went somewhere 
 else so 
 maybe that's my message here 
 so what are we up to now 
 we have implemented some software 
 development tools actually 
 i 
 went through and learned about git 
 learned the teacher guys at our team 
 about git so now we have that 
 we also have some code reviews if we 
 want them 
 and mainly we are still focused on 
 science we have a lot lots of 
 python-powered science 
 we are predicting iots using artificial 
 neural networks we are modeling the 
 wired for occurrence risk we are 
 getting together with firefighters to 
 find out what happens with the with the 
 wildfires if they are happening 
 uh near the drinking water reservoir 
 which is super important thing to have a 
 look at we are also predicting the pests 
 outbreak to give up give the heads up to 
 farmers and a lot of more what's more 
 you can find everything at our website 
 if you are interested 
 and 
 yeah 
 so we went back to science but now the 
 science is powered by python and i would 
 like to take a little bit of credit for 
 that because 
 as i learned a lot i also had the 
 opportunity to teach others which is 
 great 
 so 
 this one is 
 something that i'm particularly proud 
 about because we went global and you can 
 find our global model of drought at this 
 website which is window.com which is 
 amazing tech company from czech republic 
 and the portal is just amazing check it 
 out we joined forces and i think it's 
 really great and to wrap it up what to 
 take away 
 if you're a beginner do not under any 
 circumstances underestimate your skills 
 the if you feeling 
 like you don't know a lot you know and 
 you can take it and make something 
 better with at least a little bit of 
 skill 
 if you are scared of the developing 
 world don't worry it will go away or you 
 can go to on to another board in another 
 direction and you don't have to do all 
 those hardcore tech stuff as i did 
 and don't stop exploring if you don't 
 like one technology go to another or you 
 can do you know something completely 
 different it's up to you because you 
 know more much more than you think 
 uh that's about it i would like to thank 
 you for attention uh thank you thank the 
 organizers for a great job that they are 
 doing and having us in here in dublin 
 and also one personal note i would like 
 to thank all my friends who in the years 
 tried to explain me how the cycle within 
 the cycle works because 
 i was stuck on this for a half a year 
 and 
 thanks to all those explanations i 
 finally got through 
 so thank you very much and i'm here open 
 for 
 questions yeah thank you very much for 
 your talk and for the experience it was 
 very inspiring at least for those people 
 who are working at companies that could 
 do the same approach to the manual tasks 
 that they are doing are there any 
 questions in the room we still have time 
 for a few 
 and uh 
 also we have the opportunity 
 um for the remote views of this to ask 
 questions as well 
 but at the moment i don't see any of the 
 remote questions coming in 
 what we did is we also have a special 
 room 
 uh in the lithium section that's the 
 lithium boardroom 2 where monica will be 
 now for a few more minutes so if anybody 
 like from the audience here would like 
 to ask direct questions or if anybody 
 watching the youtube stream would want 
 to ask a question directly for the next 
 minutes then that would be the place 
 where you would find monika 
 so thanks again for sharing all your 
 experiences in introducing python into 
 your life and let's have another round 
 of applause for monika 
 thank 
 [Applause] 
 you and with that i'm closing the first 
 block and i hope that the others of you 
 will enjoy the lunch 
 and these talks will continue from two 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 uh 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is uh 
 tremendously important because it gives 
 us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends with family but we're 
 in a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 um nitza is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 [Applause] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 character chair fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 [Music] 
 so 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because it gives us a space to be among 
 our those that are like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd out about 
 [Music] 
 um nitza is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 [Music] 
 [Music] 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is uh tremendously important 
 because 
 it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i've really loved about today 
 is meeting people of sort of different 
 ages different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having a shared sense of humor with 
 people i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions we 
 work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 so 
 [Music] 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is uh 
 tremendously important because it gives 
 us a 
 space to be among our those that are 
 like 
 us which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd out of our code 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 so 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 so 
 [Music] 
 so 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it gives a space where other people who 
 are not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 the trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble and just being 
 able to geek about geek out about sort 
 of shared interests having shared sense 
 of humor with people i've never met um 
 is really really lovely and of course 
 getting to nerd out 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories with imnitza you can 
 automate processes from purchase to end 
 of life achieving five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive brother 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 [Music] 
 [Music] 
 [Music] 
 trans code is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem uh to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having a shared sense of humor with 
 people i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open 
 and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 [Music] 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because 
 it gives us a 
 space to be among our those that are 
 like us which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends with family but we're 
 in a little bit of a bubble and just 
 being able to geek about geek out about 
 sort of shared interests having shared 
 sense of humor with people i've never 
 met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking 
 technology research and expert insight 
 to answer the world's most complex 
 questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 so 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 so 
 [Music] 
 [Music] 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories with imnitza you can 
 automate processes from purchase to end 
 of life achieving five key benefits 
 find out how umnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 so 
 [Music] 
 [Music] 
 [Music] 
 the trans 
 is a hack day centered on the trans and 
 non-binary communities it's a chance for 
 us to come together and share our 
 experience working on a common problem 
 uh to build community 
 and feel a little bit less alone so 
 transcode is uh tremendously important 
 because 
 it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble and just being 
 able to geek about geek out about sort 
 of shared interests having shared sense 
 of humor with people i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitsa.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open 
 and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 [Music] 
 um 
 [Music] 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not quite 
 ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitsa.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology research and 
 expert insight to answer the world's 
 most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 so 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 [Music] 
 so 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because 
 it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble and just being 
 able to geek about geek out about sort 
 of shared interests having shared sense 
 of humor with people i've never met 
 is really really lovely and of course 
 getting to nerd out 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it focus drive 
 brother 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 [Music] 
 [Music] 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 feel a little bit less alone so 
 transcode is uh tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having a shared sense of humor with 
 people i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 [Music] 
 [Music] 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is uh tremendously important 
 because 
 it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not quite 
 ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 um nitza is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology research and 
 expert insight to answer the world's 
 most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 so 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 so 
 [Music] 
 [Music] 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 [Music] 
 um 
 [Music] 
 [Music] 
 transcode is a heck day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is uh tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 um is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 within itsa you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 [Music] 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because it gives us 
 a space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends with family but we're 
 in a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 so 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive 
 rather to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 [Music] 
 [Music] 
 [Music] 
 trans code is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because it gives us 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 um nitza is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 [Music] 
 so 
 [Music] 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having a shared sense of humor with 
 people i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 tested 
 speaker for two or here we have 
 protocols and why you need them 
 [Applause] 
 thank you 
 [Applause] 
 so yeah i'm rohib nach here 
 i'm a data charmer at go data driven 
 don't ask me what that actually means 
 and i want to talk to you about 
 protocols and why you actually need them 
 or in fact 
 mostly what are protocols 
 now in order to fully appreciate the 
 usefulness of protocols to see why you 
 actually need them 
 i think it's useful to go all the way 
 from well 
 what is dynamic versus static typing 
 type hints then abcs and finally 
 protocols so if you're familiar with 
 one or more of the first concepts bear 
 with me 
 all the way in the end i'll talk about 
 protocols 
 so um 
 let's first talk about typing in python 
 so um python is a dynamically typed 
 language um you might know that 
 um 
 so what does that mean so 
 let's have a look at what dynamic typing 
 versus static typing so here on the left 
 side um you see some python code um so a 
 function 
 my function and this takes three 
 arguments a b and c 
 and then it when you call it it returns 
 some kind of 
 so it does an operation on those 
 arguments and then returns the results 
 and so the return type 
 of this function 
 it depends on the arguments that you put 
 in 
 so if you put in 5 3 and 2 you'll get an 
 integer as output 
 on the other hand if you put in 5.1 3 
 and 2 you'll get a floating point number 
 these types they are checked at runtime 
 and 
 as you can see type declarations are not 
 required i mean i haven't defined any 
 types in the 
 in the definition of the function 
 um and but the only way we can or the 
 only way i have played around with the 
 types is by just the values of the 
 arguments i put in there 
 on the other hand so on the right you'll 
 see an example of a statically typed 
 language 
 so in this case we 
 have to specify the return type of the 
 function in this case it's an integer 
 and then 
 the function name with three arguments 
 again a b and c 
 and those three arguments are all 
 integers 
 it explicitly says that 
 so now when you in such a language when 
 you try to call this function 
 with three integers you'll get an 
 integer back and when you do this 
 with a float as one of the arguments 
 you'll get an error 
 and these types are not checked at 
 runtime typically but they are attack 
 checked at compile time 
 this does mean that type declarations 
 are required as you can see 
 both the return types as well as the 
 argument types are specifically 
 so are specified there they're right 
 right in the code 
 so they're pros and cons of both 
 kinds of languages with dynamic typing 
 you don't have to really worry so much i 
 mean as long as the arguments that you 
 put in there work with the operations 
 that you do in the function everything's 
 fine um but if something's not fine you 
 might only find out at run time maybe 
 after quite a while of running or maybe 
 on a 
 machine of someone else who uses your 
 code and that's not so nice 
 while with static typing 
 you well you have to specify all those 
 types 
 explicitly 
 but the types are 
 checked at compile time which is nice 
 um of course there so there's another 
 category of languages in here 
 untyped 
 programming languages those are 
 something completely else let's not talk 
 about them entirely 
 um so 
 yeah so like i said um python is a 
 dynamically typed language um dynamic 
 typing we also call that duct typing 
 because if something 
 walks like a duck and it quacks like a 
 duck then we just assume it is a duck 
 so 
 in other words if some object that you 
 put into a function has the required 
 functionality then we should just accept 
 it 
 why wouldn't we right 
 so 
 let's have an example here so suppose 
 that we have a class duck and duck can 
 walk and quack obviously right so we can 
 make an instance of a duck 
 and then we can make the duck walk and 
 crack 
 that's awesome 
 now if we make a class donkey 
 and a donkey can certainly walk but a 
 donkey cannot quack at least i haven't 
 heard a donkey quack 
 um then we can make another duck of type 
 donkey and we can try to make this duck 
 walk and quack 
 but 
 when we try to do so at runtime 
 we'll get an attribute error saying that 
 a donkey object doesn't have an 
 attribute that's named quack 
 but 
 of course it's easy to see what what 
 goes on here 
 but in a more complicated complex 
 complex uh um program you might find out 
 uh really late so that is not so nice 
 there's only 
 this error so this is only really 
 checked at runtime 
 so 
 now if instead of a donkey we have some 
 kind of imposter duck which isn't really 
 a duck but well it can walk and it can 
 sort of try to quack not quite quacking 
 then of course it's fine to just make a 
 dark hoof type imposter duck 
 and make it walk and make it quack 
 the imposter duck behaves like a real 
 duck so well we should just 
 accept it as being a duck right 
 i really like that about python you 
 don't really have to worry about what 
 the type is of something that you put in 
 as an argument you just make sure that 
 it has the functionality or it behaves 
 like the object that you would expect it 
 to do 
 so 
 then as a wrap-up of this first part um 
 python is a dynamically typed language 
 which well and i like that you don't 
 have to 
 um you don't really have to 
 specify any type declarations that's 
 nice because you can just quickly code 
 something together it gives you lots of 
 flexibility you can create an imposter 
 duck that behaves like a duck but 
 actually isn't a duck 
 but 
 as a downside you don't have any type 
 checking except at runtime and sometimes 
 runtime is just too late 
 so 
 in order to fix that last downside 
 we have typings 
 also called optional static typing and 
 it was introduced in python 3.5 
 um and usually that goes together with 
 my pi and my pi isn't well the optional 
 static type checker for python 
 and so according to their uh description 
 they aim to combine the benefits of 
 dynamic or duct typing and static typing 
 um you might know python 
 you might know my pine sorry you might 
 also know python at least i hope 
 um 
 so 
 suppose 
 um so for an example of how to use tie 
 pins um suppose that we have a glass uh 
 duck and this duck can eat bread and it 
 can swim now then we can have a function 
 called feed the duck it takes a duck as 
 argument and here after the argument 
 name i've specified a type hint 
 namely that i expect this duck to be of 
 type duck 
 and then i can have this duck eat bread 
 well that should work because the duck 
 has a method that is called egret 
 now when we instantiate adoc 
 then we can just wait we can call this 
 function we can use it on the duck and 
 the duck is fed bread well that's cool 
 now then if we have a monkey a monkey 
 can eat bananas and climb the tree 
 if we can then try to feed a duck uh 
 feed the duck use this feed the duck 
 function on the monkey 
 um we'll get in an attribute error 
 saying that the monkey object doesn't 
 have any attribute called eat bread well 
 that's correct but that's at run time 
 but if we would use my buy beforehand 
 before runtime it would already tell you 
 that this argument one or feed the duck 
 so the only argument um is actually of 
 type monkey and it you it would expect 
 it to be a duck 
 um so here my pie can really help you 
 spot any issues with your code before 
 runtime so that's cool 
 now for a much more generic function 
 let's um so again we have this this 
 glass duck and the duck can eat bread 
 and now we have a much more generic 
 function that can feed bread to any 
 animal and in this case we specify this 
 that this animal must be of type duck 
 that's cool but now suppose that there's 
 yet another animal 
 maybe a pig 
 and a pig can also eat bread 
 then we would should we well we really 
 have to adapt the type hint 
 of the feedback function to also accept 
 a big because otherwise my bible one 
 warn us that a big is not a duck which 
 is true 
 so now here i've adapted the 
 um the type in for the animal argument 
 to be of union 
 a union of a duck and a pig basically 
 saying we either accept ducks or pigs 
 now this is all fine this is perfect but 
 now suppose that this code is in some 
 package that i download from bye bye 
 it's called animals 
 and 
 here is a class mace mace is my baby boy 
 and he really likes to eat bread he can 
 also drink milk 
 his two favorite activities 
 now if i instantiate a an instance of 
 mace 
 excuse me 
 and then try to feed bread to maize 
 um at runtime that would work fine 
 because maize has a eat bread method 
 but 
 my pi will warn us that 
 this argument one of 
 feed bread has an incompatible type 
 mace wild expected a union of a duck or 
 a pig 
 so while the function would work on this 
 class mace 
 you cannot 
 have my pi sort of accept this 
 as long as you unless you can adapt the 
 type hint of this function yourself 
 if you can't if the function is 
 in someone else's code then you cannot 
 add any other class to the union in the 
 type end 
 so you're basically stuck of course you 
 can have my pi ignore this issue if you 
 really know for sure that is fine 
 but well it's not so beautiful 
 so 
 as a wrap up for tie pins 
 type declarations 
 they're optional that's really nice so 
 you don't have to but you can and when 
 you do you get optional static type 
 checking so before runtime you get a 
 warning when something is wrong 
 but you cannot adapt type ins of 
 imported code so if you make something 
 that's compatible but you can't tell the 
 other library that you made something 
 that is compatible with them 
 so that's not so nice 
 okay let's move on 
 abcs abstract based classes 
 so what are they um 
 here's an example so abcs are our base 
 classes so classes that you can inherit 
 from but they cannot be instantiated 
 so typically they're used to define the 
 interface of what subclasses should look 
 like 
 um 
 and so here i have an 
 a base class called animal 
 which has an abstract method so a not 
 not implemented method called walk 
 now forgive me for assuming that all 
 animals can walk 
 all animals that we'll use in this 
 presentation can surely walk 
 now we cannot instantiate um an animal 
 because well an animal is a base class 
 it's abstract we cannot use it 
 so if we try to instantiate an animal 
 we'll get at runtime we'll get a type 
 error saying that we cannot do that what 
 we can do though is we can define a 
 glass duck 
 that inherits from animal 
 and that can walk 
 and now we can instantiate 
 the duck and this duck is then an 
 instance of animal 
 okay so that's cool 
 so how is this useful 
 now suppose that we 
 [Music] 
 want to go back to the previous example 
 with bread eating then we can make a 
 base class that call that's called 
 eats bread 
 that defines that all subclasses should 
 have a method that is called eat bread 
 and then we can define duck and pig both 
 to be 
 to inherit from this eat spread base 
 class 
 and now in the feed bread function all 
 we need to do is specify that this 
 animal should be of type eat spread and 
 an animal then we know that animal can 
 eat bread 
 so now if i were to import this code 
 from some package i found somewhere 
 and use it with my baby boy 
 i would define his class to be 
 mace that inherits from each bread 
 and then i can define how he can eat 
 bread and drink milk and i can 
 well i can use an instance of mace with 
 this function that works fine 
 typically though 
 those base classes are not so easily 
 exposed in packages that i tend to use 
 so then instead of having to import or 
 being able to import 
 feedback and heat spread from animals 
 you'd have to find this eat spread base 
 class somewhere deep inside the library 
 somewhere like from animals.based.eats 
 import eat spread 
 but still this works fine 
 alternatively if you don't really want 
 to inherit from the base class you can 
 explicitly register 
 your class as being a subclass of a an 
 abstract base class 
 so that's what i do here so i define the 
 class mace 
 which doesn't inherit from each bread 
 but then i register mace 
 as 
 well a subclass of eat spread 
 so in this case 
 maize still is so an instance of may 
 still is an instance of each bread 
 although it didn't inherit 
 any functionality that 
 i may have defined in each bread in this 
 case of course i didn't define any 
 functionality 
 in the eat spread base class i only 
 defined that well an abstract method 
 without any implementation 
 so um well 
 in this case it's 
 exactly the same as the previous example 
 but in some cases 
 you might want to 
 register a subclass 
 without inheriting any functionality 
 that has been 
 defined already 
 so this this all works fine right this 
 is pretty beautiful 
 but sometimes 
 you might still run into issues so 
 suppose that there is this package 
 animals that defines the base class 
 animal and a dog that can walk 
 and a function that can walk an animal 
 and then there's yet another package 
 that's called lamas that defines the 
 llama and the llama can also walk 
 right llamas can walk 
 now if in our code we import this walk 
 animal function from the animals package 
 and then the lama object from the llamas 
 package 
 then sure at runtime we can walk the 
 llama that's all right 
 but 
 my pie will complain that llama is 
 actually not a subclass of an animal 
 which is true because well they're from 
 different packages so why would it be 
 of course what you could do 
 is fix that by registering llama to be 
 a subclass of animal 
 but um 
 this is feels kind of fishy to me 
 because you're really um 
 changing the internals of packages 
 you're using you're using right 
 um 
 it works it's not super nice 
 so wrap up for so far 
 abstract base classes 
 they give a lot more structure to your 
 types that's nice 
 type hints in this way won't need 
 updates for new subclasses so you can 
 add as many animals of you 
 as you want but you'll never have to 
 update all those type hints that say 
 animal it's automatically included 
 but you may still in some cases have 
 difficulties combining classes from 
 multiple libraries 
 won't happen so often and you might be 
 able to be okay with that 
 but i don't think it's so nice 
 and those virtual subclasses so they 
 have classes that don't inherit that you 
 can explicitly 
 register 
 but that's also nice but you still need 
 to explicitly register them 
 which i also don't like so much 
 so now we'll come finally to protocols 
 also called structural subtyping or 
 static duct typing and those were 
 introduced in python 3.8 
 and protocols make everything that we've 
 encountered so 
 so far much and much more beautiful 
 so let's have a look how 
 so a protocol is a special case of 
 abstract base class 
 and here i define a class each bread 
 that is a protocol 
 that defines so this function 
 this sorry this method eat bread 
 without any implementation 
 and then i define a function feed bread 
 that takes any animal as argument 
 and the animal should be of type each 
 each bread so that the function can make 
 the animal eat bread 
 now if we define a class so when we 
 define a class called duck 
 that has a method that is 
 eat bread is called eat bread 
 then this is automatically and 
 implicitly considered to be a subtype of 
 each bread 
 but only when typing 
 so this protocol automatically 
 so this this class duck is automatically 
 a subtype of the protocol 
 that defines 
 what 
 what these classes that adhere to this 
 protocol should look like and as duck 
 implements 
 all the attributes and methods that this 
 protocol defines in this case it's just 
 one 
 it is automatically a 
 of type eat spread 
 and so now if we call feed bread on the 
 duck 
 that's okay both at run time as well as 
 when type checking 
 now if i were to import that function 
 from a package so feed from animals 
 import feedback and then again 
 define a class mace then mace is also 
 implicitly a subtype of each bread 
 because it implement it it implements a 
 method that's called eprint and again i 
 can call this function feedback on maze 
 and that works all fine without having 
 to do anything at all all i need to do 
 is make sure that the required 
 functionality is there um so it has a 
 the class mace has a method that's 
 called eatred that's all i need to do 
 and then everything works fine 
 that's pretty nice isn't it 
 so 
 actually before this there were already 
 some kind of protocols that um so before 
 python 3.8 
 there were some protocols that we were 
 used to 
 like knowing and playing around with so 
 if you've already used some 
 type ins with for example an iterable of 
 a certain type or an iterator of a 
 certain type or a sized 
 then 
 well in effect what happened was just 
 checking that 
 the object whatever it was in the case 
 of iterable it um should have had the 
 dunder hitter method 
 for an iterator this were the thunder 
 next and thunder either methods for the 
 size is the thunder len 
 so now since python 3.8 
 these are actual protocols but before 
 those before that time um those were um 
 sort of 
 not really protocols but behaved at 
 least like those 
 um 
 so now protocols are mainly 
 we're mainly designed to be used when 
 type checking so for my pi so 
 before you ever run your code make sure 
 that all those type ins 
 well that you use the functions 
 according to the type ins 
 but you can actually use them at runtime 
 on the other hand so if you just do that 
 like this so we have this protocol 
 that's called eat bread and it defines 
 that all 
 all classes that are eats bread should 
 have the method eat bread and we create 
 the duck that can eat bread 
 then a duck is not an instance of eat 
 spread 
 it is only at when type checking 
 but if you really wanted to you can make 
 this happen 
 by using this runtime checkable 
 decorator 
 if you add this to your protocol 
 then suddenly 
 any object that 
 adheres to the protocol 
 becomes 
 an instance of that protocol at runtime 
 note that this not isn't completely safe 
 because at runtime this only checks the 
 existence of the protocol numbers 
 the protocol members sorry 
 and their names and it doesn't check the 
 signatures 
 so if you implement 
 a 
 a method that is called eat bread that 
 actually takes arguments and it would 
 still be an instance of each bread 
 while while type checking that wouldn't 
 be the case 
 so it's not completely safe 
 but still 
 you can do something with this without 
 ever having to explicitly specify that 
 duck is a of type heat print this just 
 magically makes it work 
 so wrapping up 
 protocols as i said i think this makes 
 all of what we've seen so much more 
 beautiful because there's no need to 
 inherit or register anything 
 there are no more difficulties combining 
 libraries because well it just 
 implicitly makes it work as long as the 
 right methods are defined 
 if you want to use this at runtime 
 make sure to decorate your protocol with 
 the runtime checkable decorator 
 and beware that it's not completely safe 
 although in practice 
 you'll probably be fine 
 and so this protocols gives us the best 
 of both worlds 
 static type checking 
 whenever you want it 
 and 
 dynamic type 
 [Music] 
 dynamically typed language like python 
 but also 
 static checking of dynamic types 
 with protocols 
 um 
 so that brings me to the end i hope i've 
 convinced you that you do need protocols 
 thanks 
 [Applause] 
 [Music] 
 all right you want to come up to the 
 micro here 
 um so a question what pitfalls do you 
 see of using a prototype because doing a 
 lot of magic in the background yeah 
 i i don't 
 really think um 
 that there's a lot of magic in the 
 background um 
 it 
 [Music] 
 so 
 type checking in python is just about 
 comparing signatures right and in the 
 case of protocols you just compare also 
 well the existence of members and 
 attributes of a class and you you can 
 just simply define what any object that 
 you expect should look like instead of 
 being explicitly like that object 
 now 
 like i said when using this at runtime 
 maybe you should be a little bit careful 
 but 
 so for 
 type checking i don't really see any 
 pitfalls 
 thank you 
 yeah dear thanks for the talk by the way 
 the run time checking this also 
 go to this super command i mean it's a 
 sort of implicit subtype but 
 it won't be 
 findable via super right it doesn't go 
 to the init of the protocol class 
 no i don't i assume not i i to be honest 
 i haven't uh worked with that uh i see 
 people shaking their heads but 
 um as you don't define any functionality 
 in a protocol just 
 the existence of attributes and methods 
 there shouldn't be any 
 functionality inside the initializer of 
 the protocol anyway yeah and the 
 protocol itself is that an abstract 
 thing or can you actually 
 work with that directly so the protocol 
 exists at runtime 
 but as it hasn't so there's no 
 implementation of any of the methods or 
 attributes 
 it wouldn't be very useful except for 
 maybe if you want 
 but it doesn't tow this error like abc 
 classes like um i've never tried to 
 instantiate a product it does though 
 yeah 
 well 
 well thanks for the answer 
 maybe one more in-person question if 
 anyone has a another one 
 thanks a bunch um 
 is something a protocol if it has a 
 property but the property returns a 
 attributer or an unimplemented error 
 oh wow now we're really getting into the 
 nitty-gritty details 
 um i don't know okay 
 i would hope so but i don't know 
 thank you 
 did we have any remote questions 
 okay 
 all right um if that's it then uh please 
 let's 
 say thanks to our guest and 
 [Music] 
 [Music] 
 so 
 [Music] 
 do 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because 
 it gives us 
 a space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 the trans community too 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble and just being 
 able to geek about geek out about sort 
 of shared interests having shared sense 
 of humor with people i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 so 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 [Music] 
 so 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd out 
 [Music] 
 umnitza is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories with imnitza you can 
 automate processes from purchase to end 
 of life achieving five keyboards okay 
 now it's time for our 
 next presentation 
 uh protocol stack typing for decoupled 
 code 
 hello everyone 
 hopefully you can hear me well i'll be 
 joining you remotely thank you for 
 coming to my talk um i'm aware that the 
 last talk in this hall was also about 
 protocols 
 uh so if you haven't had the chance to 
 listen to the previous talk hopefully 
 you'll get similar benefits for mine so 
 thank you roger hopefully i said that 
 right 
 and 
 can i just get a confirmation that 
 the sound's working from an operator so 
 we can start 
 okay i'll assume that it works 
 okay 
 so 
 a little bit about me my name is ron 
 i'm a data engineer at blue vine i enjoy 
 learning about how programming languages 
 work uh new features and how i can use 
 them better i love traveling and hiking 
 and i'm currently based out of 
 california 
 so a little bit about blue vine it's a 
 fintech company that provides online 
 business banking 
 and financing to small to medium-sized 
 businesses 
 we use python everywhere 
 we have django on a server side and use 
 it for our data pipelines data science 
 analytics and machine learning 
 so what are protocols 
 let's first talk about the existing 
 definition 
 so first of all 
 they're added in pep 544 
 aptly name protocol structural subtyping 
 they're introduced for python 3.8 and 
 they are an extension of the typing 
 system 
 so 
 the 
 term protocol 
 is a widely understood construct in the 
 python community which basically means 
 an interface which requires the 
 implementation of a dunder method 
 so the iterator protocol implies the 
 implementation of the 
 inner and probably 
 next 
 thunder methods 
 the size protocol for example requires 
 the implementation of the dunder len 
 method 
 so for example if we want to create a 
 class which implements the iterator and 
 size protocols we would do it by 
 inheriting the abstract base classes 
 size and iterator 
 an iterator is any object that it can be 
 iterated upon meaning it implements the 
 dunder error and next method and the 
 size is any object with a known length 
 so aside from these type annotations 
 that you see in this 
 slide there's this is nothing new 
 and before we continue to the new 
 definition let's give a little bit more 
 context and talk about the typing system 
 a little bit and what why it's important 
 so 
 what is the typing system in python 
 type annotations make it easier to read 
 refactor and validate code correctness 
 statically 
 and what i mean by statically it means 
 that they do not get evaluated during 
 runtime and 
 evaluated only by static type checkers 
 like my pi 
 they also provide great means for 
 documentation in the code 
 so let's look at an example here 
 here we define a class that registers 
 callback functions to receive an integer 
 as the sole argument 
 and return a boolean value and on the 
 second line i defined a type alias which 
 basically 
 specifies what 
 what this type is so in this case it's a 
 callable that can accept only an integer 
 as an argument 
 and returns a boolean 
 this means that it can accept functions 
 or sometimes even classes 
 so this provides better readability and 
 to avoid repeating the long annotation 
 the callable annotation 
 means that basically every object that 
 implements it under call method so as i 
 said it's either a function or class and 
 you can see here that the is even 
 function matches the type in we define 
 and then we can register it to an 
 instance of the class so 
 with this 
 little bit of typing annotations we get 
 a lot of clarity for our code so this is 
 kind of part of the strength for the 
 typing system 
 so let's talk about the new definition 
 for the 
 protocols um so they provide 
 uh the goal in the rationale of the pep 
 is to provide the static type checkers 
 like mi-pi and other tools the ability 
 to verify co-correctness prior to 
 runtime 
 it enables the implementation 
 of interfaces without explicitly 
 inheriting from abstract based classes 
 the pep defines this behavior 
 of inheriting from base classes as 
 something that is unpythonic and unlike 
 one would normally do an idiomatic 
 dynamically typed python code 
 that's a mouthful 
 so let's let's look at a comparison 
 between the 
 all definition and the next 
 um 
 so let's simplify the example from 
 before a little bit this is how one 
 would normally register as class on the 
 protocol on the left side we can see 
 that we inherit the classes and on the 
 right side is the same code which 
 implicitly implements the protocols 
 for both cases 
 the code actually passes the type check 
 which is the new feature really 
 and it is important to know that the 
 goal is only to support this behavior 
 statically 
 since abstract base classes already 
 provide support for this during runtime 
 so 
 before we continue let's 
 um 
 let's clarify the difference between the 
 two forms so 
 of subtyping so first of all we have the 
 nominal subtyping which is explicit 
 basically means that it's in the name 
 and one type is a subtype of another if 
 and only if it explicitly is declared so 
 to be in its definition 
 which means that if we run the is 
 instance method on it it gets 
 evaluated to be correct 
 a structural subtyping means that one 
 type is a subtype of another if it 
 behaves similarly to it so 
 basically duct typing 
 so let's to illustrate the difference 
 we'll create a dock protocol which 
 defines a bark method 
 and here we have scooby-doo which is a 
 dog and since it's prone's class is a 
 dog and therefore it must have a bark 
 method so this is an example of a 
 nominal subtyping 
 very classic behavior 
 however according to structural 
 subtyping 
 a eucalyptus tree is also a dog because 
 it has a bark 
 now 
 obviously this is a joke and if you get 
 it it's kind of obscure then you're 
 probably in this in the intersection of 
 this venn diagram 
 so obviously what we want 
 it is a support spark protocol because 
 trees are no dogs 
 and in this case 
 both of these types 
 are considered 
 subclasses of the supportspark class 
 so finally let's show how to create a 
 new protocol 
 protocols are defined by including a 
 special new class called 
 typing.protocol or if you're using 
 python 3.7 or below typing under 
 underscore extensions is the module you 
 would import it from 
 all it takes for a class to be a subtype 
 of supports close is to implement a 
 close method with an identical signature 
 and yes this ellipses is a valid 
 notation it is the same as the past 
 keyword 
 so 
 here we're 
 implementing we're actually using the 
 supports close in a 
 in the signature of a function we define 
 a function close all which accepts 
 an argument named things 
 which is of type iterable supports close 
 and you can see how 
 we use it below we haven't we open a 
 file and a resource and we pass them all 
 to close all and you can see that it 
 works so 
 the interesting thing here is that f is 
 a built-in type which can be accepted as 
 an argument for close all without 
 modifying the base class 
 this implicit subtyping prevented it 
 from writing extra code to wrap it like 
 so 
 so here would have to without protocols 
 if we wanted to 
 enable the same the same type you would 
 have to write wrap the the file type 
 within another class and then subtype 
 supports closed class 
 this makes thing a lot neater 
 this is this is example specifically is 
 very messy vervos 
 verbose and 
 specifically 
 this would be 
 in my opinion the best use case for 
 protocols 
 so 
 in order to 
 turn a subclass into a protocol 
 and to extend it you must inherit typing 
 protocol 
 otherwise it will be downgraded to a 
 regular abstract based class so in this 
 example if we want to 
 create a new protocol which defines that 
 you have to 
 define the thunderland method and the 
 close method we would have to create 
 a new class 
 inherit both of these protocols and then 
 inherit protocol again 
 there's actually nothing wrong with not 
 inheriting protocol but then it would 
 just be a regular abstract based class 
 and that feature already exists so 
 just be aware when you do it 
 you can also create generic protocols 
 and you can do that by 
 using type vars 
 and specified using the double brackets 
 notation the square brackets notation so 
 for example 
 the iterable protocol 
 is a generic protocol that can accept a 
 generic argument and 
 then we can define which type 
 it accepts so here's how you define that 
 you can actually 
 use the 
 special type var 
 object from typing 
 you give it a sort of an alias and then 
 you can create your protocol 
 like so you create the the class and 
 then you inherit from protocol and then 
 you specify the generic protocol and 
 underneath you can see that 
 for the variable collection we pass the 
 an iterable of size 
 and closable type 
 so 
 let's get to a real world example 
 that we actually 
 used 
 in our day to day 
 so 
 executing a procedure in batches of data 
 is something that we do a lot 
 the data usually changes somewhat 
 between projects depending on the use 
 cases but i wanted to create a data 
 batcher which can iterate over some 
 abstract type so it can be easily reused 
 so here's an example of how it would be 
 used here we're creating 
 uh three different collection objects 
 uh which are quite different from each 
 other one of them is a list of integers 
 one of them is a string and one of them 
 is actually a data frame from a third 
 party library pandas 
 and here we're creating 
 three 
 data batch generators for each one and 
 then we 
 loop over all of them in a single loop 
 and we get the output below so this is 
 kind of what we want to achieve and now 
 obviously 
 all of these can be 
 iterated 
 in some some form 
 however if we iterate over them we 
 probably 
 are not going to get what we expect so 
 we have to define a 
 this class which implements this 
 behavior and in order to define it it 
 needs to know which type to accept 
 so 
 let's first start by defining our 
 protocol 
 let's start with the first part so we 
 want to iterate over these 
 all these objects and when we want to 
 iterate over some object you need to 
 know first of all when to stop the 
 iteration 
 and second how to divide it into batches 
 of equal size 
 so the first part is actually easy 
 we already 
 know this protocol it's called the size 
 protocol 
 we just need to know the length of the 
 data to know when we reach the end of it 
 which means it needs to implement the 
 dunderland method and we already have 
 this built-in protocol for that so 
 that's out of our way 
 and the second part is a little more 
 tricky since we want to achieve the 
 following in order to batch the data 
 and 
 this kind of looks like we're accessing 
 the data using indexing so 
 let's create a supports index protocol 
 here we're creating this protocol which 
 basically 
 states that you must implement the 
 dunder index method 
 however there's a problem with that 
 because a pandas data frame cannot be 
 indexed unless you're using some other 
 method which is like the 
 ilock method 
 like a regular collection 
 okay so let's try something else 
 let's try the 
 dunder get item method instead 
 so this would be 
 a container protocol 
 but they kind of solved it but now the 
 type checker will allow a dictionary to 
 be used 
 since it can be accessed using the 
 square brackets notation 
 now this is not too awful 
 but we want to be more precise about the 
 types we can use and also we can't 
 really iterate over dictionaries like we 
 can other collections 
 so as it turns out that this notation of 
 i colon i plus n is actually a slice 
 object 
 so our protocol should look something 
 like this 
 and you can see that the item it accepts 
 in the function is of type slice 
 and we're able to define this protocol 
 with 
 really great granularity up to the type 
 of a method argument and we can combine 
 them both into one protocol which is our 
 final product 
 here we created the support slicing size 
 class which inherits both from size 
 support slicing 
 and the protocol 
 which makes it a protocol 
 so now let's take a look at the final 
 code 
 the 
 so this is the final code and you can 
 see here this is nothing really special 
 it's just 
 um 
 some sort of um 
 batcher that 
 well let's let's actually take a look at 
 it a little bit and the interesting part 
 happens under next method first of all 
 the first line actually uses the size 
 protocol 
 and we check the length of the data and 
 then a few lines afterward we're 
 actually batching it 
 and you can see here that the in the 
 init method 
 that data argument is of type support 
 slicing size 
 and 
 this 
 enables us to define quite a strict 
 interfaces which enables built-in and 
 third-party library types to be used 
 without changing them 
 thereby greatly decoupling our code 
 also notice how the data batch generator 
 actually implements the iterator 
 protocol 
 and the iterable protocol 
 which is pretty cool so this means that 
 this example 
 this code will now pass a type check 
 because all these types without 
 modifying them or anything or 
 subclassing them 
 are now considered a subclass of our 
 protocol 
 so thank you all for listening 
 if you have any questions i'll be happy 
 to take them thank you 
 okay we do have a few minutes if anyone 
 does want to come up to the mic and ask 
 a question 
 all right then i got a sec oh is that 
 question 
 um thanks for the talk you showed that 
 um seems like the signature at least the 
 input of the methods are checked 
 um in the protocol is there a way to 
 also have it for the output 
 as in like to check that the met like 
 or if if i have a property that the 
 property is a list 
 you mean the return type of the function 
 yeah 
 i 
 i believe that the type checker will 
 check for that 
 if possible 
 um 
 yeah i mean 
 also i didn't mention that but i 
 recommend reading the actual pep because 
 it provides a very 
 thorough explanation of the subject 
 but yes function our function return 
 types should be checked 
 thank you 
 thank you 
 hey thanks for the talk um so 
 you went with um 
 a lot of the protocols like sized and 
 iterable how do you go about 
 going from very broad different 
 broad types like ar dictionary or 
 mapping to i only need the 
 lang methods or only need size 
 for my particular function do you do you 
 uh have any 
 uh good way to do that or 
 if you do you know what i mean 
 um 
 actually uh can you 
 try to explain a little bit more i'm not 
 sure i understood the question right i 
 want to give it um 
 i don't know something i usually give it 
 a dictionary um but all it ever does is 
 it only checks the length of um the 
 container or whatever is in there 
 um so actually my type for 
 my argument is 
 dictionary but all i need is size 
 um do you have a good way about 
 going from the very 
 rich definition of mapping or dictionary 
 to 
 sized 
 you know what i mean um so 
 so if i understood that correctly you 
 want to specify 
 more 
 kind of 
 low-level uh type in your in your 
 function definition uh well in that case 
 well first of all you know you gotta 
 unders you gotta check that 
 your function really does need to 
 uh doesn't really care about the type 
 other than the the function defined in 
 the protocol and if so then you can just 
 pass in in this case as instead of the 
 dictionary 
 type annotation in the function argument 
 you can pass in the size 
 type annotation yeah if i understand 
 that sure but like yeah 
 i guess there's no easy way to to go 
 like okay 
 a type checker could tell you hey 
 actually you're 
 using this broad definition like the the 
 dictionary but you only need a size but 
 yeah there's no i don't think i think 
 i'm not familiar with anything like that 
 yeah that's 
 that's up to you cool thanks thank you 
 okay thank you all very much 
 yep thank you so much 
 all right 
 goodbye 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends with family but we're 
 in a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having a shared sense of humor with 
 people i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology research and 
 expert insight to answer the world's 
 most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 so 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 [Music] 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because 
 it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd out 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 so 
 [Music] 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is uh tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having a shared sense of humor with 
 people i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 is the enterprise technology management 
 solution that consolidates data from 
 existing siloed tools to provide a 
 single source of truth for endpoints 
 applications cloud networking and 
 accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open 
 and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 um 
 [Music] 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because 
 it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not quite 
 ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community that is 
 a trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 um nitza is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology research and 
 expert insight to answer the world's 
 most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 so 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 so 
 [Music] 
 so 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all these wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it focus drive 
 brother 
 care to share 
 fun 
 open minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 so 
 [Music] 
 [Music] 
 transcode is a heck day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem uh to build community 
 and feel a little bit less alone so 
 transcode is uh tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends with family but we're 
 in a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having a shared sense of humor with 
 people i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 um is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 so 
 [Music] 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is uh 
 tremendously important because it gives 
 us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space where other people who are 
 not quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 um nitza is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how omnitsa can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitza.com 
 [Music] 
 at bloomberg the success of our business 
 relies on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 so 
 [Music] 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun 
 open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 [Music] 
 transcode is a hackday centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community and feel a little bit 
 less alone so transcode is tremendously 
 important because it gives us a 
 space to be among our 
 okay 
 oh 
 okay let's start 
 hello everyone 
 welcome to leafyb and i would like to 
 start our next session from 3 30 pm 
 the title for this session is automate 
 the boring stuff with slackbot version 
 2. and i would like to introduce 
 all of you to our speaker today 
 takanori suzuki 
 takanuri is a vice chairperson of baikon 
 jp association 
 in japan he is also a director of be 
 proud inc and his title is python 
 climber if you are intrigued on what 
 this title means i urge you to come and 
 talk to him after 
 his talk takanori held pycon gp 2014 to 
 2016 as the chairperson 
 he also currently teaches python to 
 beginners as a lecturer at python 
 bootcamp 
 which 
 is done all over japan 
 in addition he has published several 
 python books 
 takanori plays the trumpet climbs 
 boulder loves lego ferrets and also 
 drinks a lot of beer and he's enjoying 
 his stay in dublin 
 um 
 so without further ado i would like uh 
 to present to you uh takanori which is 
 talk automate the boring stuff with 
 slackbot can you give us a round of 
 applause 
 hello uh thank you for coming to my 
 presentation i'm very happy to be able 
 to in your python to talk in your python 
 my talk title is automate the boring 
 stuff with slackbot version 2. 
 today i will talk about background and 
 motivation for slack bot and how to 
 create simple bots 
 how to create interactive board 
 and how to exit both using 
 python libraries and apis 
 and i'd be happy to take pictures 
 and share them and give you feedback on 
 twitter 
 hashtag is 
 euro python 2022 
 and i've already published this slide on 
 slides.tagonly.net 
 my slideside and i've already shared 
 slide url on twitter 
 it 
 the slide has a lot of code so you can 
 see codes on the slide 
 okay 
 why version 2 in the title 
 the story goes goes back to 2019 
 i begin 
 i have given talks about struckbot at 
 several python conferences 
 talks in 
 philippines 
 thailand 
 malaysia i forgot 
 japan or 
 some country 
 and three years later in this year i've 
 updated the talk 
 with the latest information about slack 
 and libraries 
 and this is my first talk at an 
 international python 
 event 
 of the covet 19. 
 i'm very happy to be able to present 
 in person in front of you all 
 thank you 
 [Applause] 
 and huge thanks to all the european 
 staff and volunteers thanks 
 oh 
 thanks 
 uh by the way before the main topic 
 uh i will introduce myself 
 uh i'm taking my twitter instagram 
 please follow me and 
 other information 
 already said with from equipment 
 okay 
 and i'm from japan 
 pycon gp 2022 
 will be held as an impersonal event 
 url is 2022 by conduct.jp and the date 
 of 
 middle of october 
 and venue is tokyo japan 
 please come to japan and see you at 
 pycon jp 
 see you 
 okay let's get back to the main topic 
 first i will talk about the background 
 and motivation of this talk 
 i heard python jp events several years 
 in the past 
 as you can imagine 
 there are lots of tasks 
 to hold the conference for example talk 
 arrangements and get selling venue 
 management 
 and food coffee snack and beer 
 here is important for me 
 the number of python jp stuff is over 
 14. 
 half of them are new stuff every year 
 new staff asks similar things to me 
 because i'm a chairperson 
 of the of python jp 
 and i send similar answers repeatedly 
 repeatedly repeatedly every year 
 but 
 programmer is lazy 
 as you know 
 programmers dislike routine work 
 i also dislike it very much i'd like 
 someone to be 
 my secretary 
 and do tedious tasks for me 
 let's make it 
 because i'm a programmer 
 let's create 
 my secretary 
 the goal of this talk 
 you learn how to create simple bot and 
 how to create interactive boots and how 
 to extend both using libraries and apis 
 through various case studies 
 my secretary is a chatbot 
 of slack 
 is there someone using slack 
 a half or more thanks 
 i'm launching the slack application at 
 any time on my pc and smartphone 
 anytime 
 so it's easy to access 
 to 
 access for me 
 i'd like to do everything in slack 
 let's make a chat mode 
 at the end of this talk 
 you will be able to create bots like 
 this for example 
 for example as a greeting 
 and 
 randomly choose laundry and counter 
 beers 
 and more and more 
 now let's learn how to create a bot 
 first 
 i will explain simple integration with 
 incoming web folks 
 this is system overview of incoming 
 reference 
 when a program sends a message 
 hello from python 
 to a 
 website url 
 then the message will be sent to slack 
 this is a system overview 
 and create incoming web fix integration 
 how to generate a web url is as follows 
 step one create a select application 
 step two 
 activate incoming reflex step three 
 add webhook to workspace to your 
 workspace 
 create a select application 
 and 
 say set the name 
 and set application icon 
 and activate incoming webhooks 
 and add website to your workspace and 
 choose channel 
 at last 
 we got webhook url 
 then let's send the message to slack 
 with that with this url 
 post a message via with url 
 within the 
 simple message with car 
 when we send a message with json uh 
 hello 
 the message will be displayed in slack 
 the json sent to web url okay 
 but we are personista we use url without 
 request module 
 make dict 
 and json encode json encode and send 
 address 
 send a message hello from python 
 if you like requests 
 it is easier to use requests 
 and i also recommend the python slack 
 sdk provided by slack 
 piping source lock on sdk and create 
 webhook client then send make text 
 message 
 it's easy to 
 use okay 
 and 
 this can be formatted as markdown 
 bold or link or emoji or something 
 if you want but 
 if you want to create a more complex 
 message 
 use block it 
 do not block it 
 rocket is a new ui framework for slack 
 applications 
 this example of blocks 
 make type section and set text and fill 
 some fields 
 and will be displayed this 
 complex message 
 this is block it 
 and if you create 
 if you want to create broke it 
 you use you can use blocky to be blocked 
 builder rocket builder is useful for 
 creating blockades we can write block it 
 called interactivity and see the results 
 visually 
 okay 
 summary of incoming reflex 
 is it a post message from programs 
 and create complex messages with 
 blockade 
 but 
 simple 
 but incoming wavefix is one way only 
 programmed to reflect to slack 
 like to interact with the bot 
 next 
 i will explain how to make an 
 interactive boat 
 wait a moment 
 oh sorry 
 okay 
 all right 
 i'll explain an intercept 
 circ provides two protocols for 
 interacting 
 why the events api over http and circuit 
 mode 
 in events api over http 
 user message will be sent 
 events api and immense api directory 
 over http the protocol requires static 
 public http endpoint 
 i send hi 
 and send to static endpoint and the 
 program will send message 
 on the other hand socket mode does not 
 require a static public energy endpoint 
 circuit mode allows you to receive 
 events aps through a private wave socket 
 i send high 
 and 
 send events api 
 tunnel with websocket 
 in this stock i choose socket mode 
 because it is easy to develop locally 
 okay 
 create both user 
 i describe how to create an interactive 
 boot at first we create we create both 
 user on slack 
 and 
 five steps 
 create a select application enable 
 circuit mode subscribe bottom event add 
 about token scopes install application 
 to workspace 
 then invite both user to search channel 
 and create application 
 and enable socket mode 
 and generate applicable token this is 
 important information 
 and subscribe about the event and 
 subscribe message channel event 
 and add both token scopes 
 and a chat right scope 
 and install application to workspace 
 address get 
 a bottle token 
 then you can invite both users to 
 channels 
 the steps are long and complex 
 is there a better way 
 i recommend app manifest 
 app manifest 
 uh 
 yaml formatted configuration bundle 
 tools for slack application we can share 
 and reuse 
 manifest example of app manifests 
 application name and 
 scopes 
 and 
 events and something 
 if you have a circ application 
 you can get your app manifest 
 in app manifest menu 
 and create a new application with app 
 manifest 
 select from 
 an app manifest 
 and create 
 and enter a manifesto 
 and check the summary and click create 
 after install application application to 
 workspace and generate app talk 
 app manifest makes stop steps shorter 
 and reusable 
 okay 
 i recommend app manifest now we are 
 ready to start creating an interactive 
 board 
 let's create a bot with bolto 
 what is bold 
 do you know bordeaux 
 border is a python framework to build 
 struct application in flash circ also 
 provides board for javascript and java 
 and is people installed struck portal 
 and 
 when the board 
 receives a string high 
 bot sends a greeting message 
 create board and receive the hi and send 
 messages 
 set to tokens in environment variables 
 then round up dot py when 
 i write a message high on slack 
 then 
 both send hi i am 
 i'm beer bot i can interact with the bot 
 but 
 this is simple enough so 
 i will exit this boat 
 up message decorator executes a function 
 when it matches the pattern the first 
 pattern is high and second part is 
 cheers ice and high both send i am be 
 able 
 i think tears be able to send shares 
 with vr emoji 
 and that the bot can send mentions 
 mentioned as a get user id and send at 
 user id 
 and both can handle parameters 
 we use regular expression in update 
 message decorator 
 you can extract much string from 
 contextual 
 matches 
 i send 
 a choice ramen sushi pizza and a bottle 
 cheese 
 ramen sushi pizza of randomly from 
 ramen's pizza 
 okay 
 and i sent 
 three t's and five beers and one hundred 
 beers and the bottle extract number and 
 sprt 
 and select 
 both as a blockage support 
 we can create a complex message with 
 block it 
 and 
 slackport 
 support logging 
 if you create a bot you use you can use 
 logging 
 okay 
 and events and scopes 
 events and scopes are important concepts 
 in circuit boards both can only receive 
 events in both events and both can only 
 execute api allowed by both token scopes 
 for example the current bot event is 
 message channels for 
 public channels public channel only and 
 both scopes channels history and the 
 chat right only 
 view message to public channel and 
 personal message only 
 so 
 the bot cannot read write a message on 
 private channel 
 this is private not public channel i 
 invented support to a private channel 
 and sent her high message but no 
 response 
 because both cannot read a private 
 channel message what should i do 
 i want to add events and scopes to 
 twitter to private channel to my vote i 
 added a message.groups event to my to 
 application slack application 
 then group history scope is 
 automatically added 
 then i will re-install the application 
 because of the change in 
 events and scopes i change event and 
 scope then reinstall 
 after that the bot can read write 
 private message private bit channel 
 message i send hi and interrupt 
 skip 
 summary of events and scopes 
 to receive if you want to receive new 
 events to bot and if you want to use new 
 api with new scopes to both 
 add events or under scopes reinstall 
 application 
 okay from here i will create functions 
 to solve the issues with various case 
 studies 
 calculator function using simple 
 motivation 
 i feel happy to call a calculated 
 application on my smartphone 
 it seems useful if slack as a my 
 calculator 
 system overview i send oneplus one 
 what's in two 
 i use simpa simple is python library for 
 symbolic mathematics 
 and this is correct function 
 of action get the formula like string 
 and simplify calculate formula and i 
 then i get 
 in 
 results in as integer overflow 
 select the calculator it's nice 
 prosperous using pvor mapper 
 motivation impact gp i want to make a 
 culture that appreciate each other's 
 stuff thank you for your support thank 
 you for your kindness 
 and system obviously i think the 
 technology prosperous and thanks and 
 account control 
 peewee is a simple or mapper and this is 
 a model code of 
 of pv 
 and this is plus plus function using pv 
 uh get the message some name plus plus 
 and account 
 increment and response 
 i can appreciate it 
 european prosperous and count one comes 
 it's nice 
 such issues with jira apis 
 motivation jira is very useful 
 and we use jira 
 in the python jp 
 task management and but jira wave is 
 slow 
 and such issues without jira web i want 
 to i want to search system overview i 
 send some keyword and bought such 
 issues with zero rest api and send 
 response 
 and people install jira use price on 
 zero 
 and this is authentication and create 
 api talk 
 zero jira and nana 
 zero python jira needs the 
 api token 
 and such issues i send some 
 thing i send message then with keywords 
 and create the search query with jql jql 
 is a direct query language 
 then 
 at last i get such issues without jira 
 web 
 i free i'm free from jira web 
 i can check click 
 this link and i can open the jira 
 single issue in web web page website 
 okay 
 great manageable issues from template 
 motivation 
 in python bootcamp we had several python 
 bootcamp events and one python bootcamp 
 event has a 20 plus issues are required 
 required for each event 
 and 
 before this bot 
 copying issues by hand 
 is so painful for me 
 jira wave is slow 
 this is system overview i send create 
 issues and both get 
 uh both get issue template from 
 spreadsheets with sheets api and then 
 both create 
 issues with the generalizability create 
 great great creation 
 okay google authorization is complex 
 please check this slide because uh 
 my time is not enough 
 this example of issue template 
 uh 
 title and delta date and description 
 and get spreadsheets data 
 is this code with google sheets api and 
 both can get spreadsheet data 
 then create a data issues 
 i can create the issue dicta and create 
 issues 
 finally free from copying issues i send 
 create issues both create three issues 
 with issue template 
 last account management management of 
 google workspace 
 last case study 
 python gp association use pycon.jp 
 domain with google webspace i only use 
 google admin web occasionally i forgot 
 to use admin screen 
 which 
 what's icon 
 and system overview i send users and 
 create list and both create or user get 
 user list 
 update google authorization 
 please check this slide and get user 
 list code is here 
 nice 
 and add user code is 
 here and i can create 
 new user 
 with only circuit command 
 i can forget google's google admin 
 screen 
 it's nice 
 but 
 there is a security issue with this code 
 it means anyone can listen the other 
 user on slack 
 so modify commands to run only for the 
 slack admin user 
 this is a sample codon an admin one 
 autonomy check 
 add user read scope to 
 to select bot and use user's dot info 
 api and get user info and users is adobe 
 parameters true or false force 
 if 
 if takanori i i am not admin both send 
 we are you are not 
 an admin 
 resolver security issues 
 okay 
 summary of this talk 
 simple about using 
 incoming reports an interactive bot 
 using bolt for python and extended 
 extend both using several libraries and 
 apis 
 next step 
 let's make your trackbot and let's 
 connect with library and apis and 
 automate your boring self with circle 
 then you will have more free time so you 
 can do other creative things more 
 thank you 
 thank you for your attention please let 
 us know what you think 
 this is translate command by d bell 
 thank you for your attention 
 [Applause] 
 thank you very much takanori sang for 
 your interesting talk on creating a 
 slagboard 
 do we have any questions 
 from the audience 
 yes you can come up here to the mic 
 please 
 um just a quick question 
 do you have any experience with 
 threading 
 on on the bots like creating threats and 
 talking with the bottom threads because 
 regular message can get a bit verbose in 
 some 
 high 
 flow channels so i'm just curious if 
 there's any support for threading 
 thank you 
 this 
 uh this spot is a shame 
 so uh 
 this 
 this spot send only the front channel 
 message and can handle threads 
 and if you want to send 
 the send to the inside thread 
 please check the api and threads ts 
 equal three to times stamp 
 then 
 then the select send slack send message 
 inside the thread 
 all right thank you yeah welcome 
 thank you 
 thank you for your talk i'm curious 
 where do you host your slack bots 
 jose 
 yeah where do you host them 
 this this boat hosts on 
 the 
 our 
 aws issued 
 instance 
 but if you interested 
 supports 
 the 
 service 
 framework you can try but i i've never 
 tried 
 yeah 
 we might have time for just one more 
 question 
 or else 
 we need to close 
 okay then i think 
 uh that's it um thank you everyone so 
 can we please give another round of 
 applause for takanori song thank you 
 very much 
 thank you 
 thank you so much 
 eyes on people like you who can look 
 into the future and create 
 groundbreaking technology 
 research and expert insight to answer 
 the world's most complex questions 
 we work on purpose 
 ready to find yours 
 [Music] 
 oh 
 what does channel mean to you in one 
 word 
 people helpful own it 
 focus drive rather 
 care to share 
 fun open-minded and transparent 
 connections 
 keep it simple 
 [Music] 
 [Music] 
 hmm 
 [Music] 
 transcode is a hack day centered on the 
 trans and non-binary communities it's a 
 chance for us to come together and share 
 our experience working on a common 
 problem 
 to build community 
 and feel a little bit less alone so 
 transcode is tremendously important 
 because it gives us a 
 space to be among our those that are 
 like us 
 which in my case is very rare 
 so i really appreciate the opportunity 
 to meet all those wonderful trans people 
 that are here 
 and i think it's also important because 
 it 
 gives a space 
 where other people who are not 
 quite ready to come out 
 to see that there is a safe space for 
 them so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i really loved about today is 
 meeting people of sort of different ages 
 different life stages 
 and in my personal life i've got a lot 
 of trans friends and family but we're in 
 a little bit of a bubble and just being 
 able to geek about geek out about sort 
 of shared interests having shared sense 
 of humor with people i've never met 
 is really really lovely and of course 
 getting to nerd out about 
 [Music] 
 umnitsa is the enterprise technology 
 management solution that consolidates 
 data from existing siloed tools to 
 provide a single source of truth for 
 endpoints applications cloud networking 
 and accessories 
 with imnitza you can automate processes 
 from purchase to end of life achieving 
 five key benefits 
 find out how umnitza can give you 
 complete control and insight across your 
 technology portfolios book a live demo 
 today at umnitsa.com 
 [Music] 
 are you okay do you need any water to 
 drink i got something yeah okay 
 one more thing pizza do you want to do 
 good afternoon everyone 
 we are in lithi b and before we start 
 the next talk 
 let me just remind you the 
 no recording and recording zone so no 
 recording zones is on the right side 
 and the recording zone is on the left 
 side 
 so let me introduce you 
 to our next talk which is titled working 
 with audio in python featuring 
 pedalboard and our speaker today is 
 peter sober 
 peter is a staff machine learning 
 engineer at spotify in new york where he 
 helps lead the audio intelligence lab 
 and 
 ml research lab dedicated to pushing the 
 state of the art in audio-based machine 
 learning 
 he heals from canada and so he spells 
 color the correct way it seems and when 
 not hacking on audio software he plays 
 drums and bass in a handful of bands can 
 we have a round of applause for peter 
 all right 
 [Applause] 
 thank you all right hello you are python 
 i've got a lot of content so i'm 
 probably going to talk pretty fast 
 apologies for that 
 um as i was introduced my name is peter 
 sobot i'm a staff machine learning 
 engineer at spotify and i work on a team 
 called our audio intelligence lab 
 now that doesn't really mean too much 
 but what we actually do is we teach 
 computers to listen to music we use 
 machine learning to build systems that 
 can listen to music automatically and 
 tell us interesting information about 
 that music 
 so some of our work is stuff that you 
 might have seen on the internet or in 
 open source 
 we publish things like this api here 
 which lets you get the audio analysis of 
 any song on spotify so if you've ever 
 listened to a piece of music and you 
 wondered what key is that in or how fast 
 that is or things like that this api can 
 tell you that for any track on the 
 spotify platform but we don't just 
 create apis 
 we also open source things like this 
 thing we open sourced a couple weeks ago 
 called basic pitch basic pitch is a 
 machine learning model that'll take any 
 piece of music and transcribe it into 
 the notes that were used to play it so 
 it kind of takes audio and turns it into 
 digital sheet music known as midi and 
 it's a fully open source machine 
 learning model built in python available 
 on github there or if you want to check 
 out 
 basicpitch.spotify.com it's available 
 there in your browser as well 
 what i'm here to talk about today is 
 neither of these things rather a 
 different project that we've built 
 called pedalboard pedalboard is an audio 
 processing library in python now 
 pedalboard lets you load audio 
 manipulate audio edit audio do all sorts 
 of cool stuff with audio directly in 
 python in a very pythonic way and that's 
 what i'm going to be focusing on today 
 so we're going to talk about about five 
 different top level uh topics today 
 we'll talk first about what audio is 
 because this is euro python not euro 
 audio or something like that 
 we'll talk about how digital audio works 
 and kind of give you a brief overview of 
 you know how audio works in a computer 
 we'll talk about reading and editing 
 audio in python we'll go on to talk 
 about problems with audio and python and 
 then finish off with audio effects with 
 pedalboard which is really what it's 
 good at and we'll have some really cool 
 examples in there as well 
 so 
 let's start off with the absolute basics 
 again this is euro python i don't expect 
 any of you to have any knowledge of what 
 audio is hopefully you know what python 
 is 
 let's answer this first question of what 
 is audio what do i mean when i say audio 
 well 
 if you ask the dictionary it'll tell you 
 audio is sound especially when recorded 
 transmitted or reproduced 
 but that's still kind of vague what is 
 sound how does sound work at a really 
 basic level well sound is really just 
 any vibration any sort of vibration 
 through the air that isn't too slow or 
 too fast for our ears to pick up 
 our ears are sensitive to a range of 
 different vibration speeds between about 
 10 vibrations per second all the way 
 through to 20 000 vibrations per second 
 which sounds like a lot uh but it's not 
 that much 
 uh in this range there's a whole bunch 
 of different sounds that you've 
 definitely heard before in fact 
 everything you've heard is within this 
 range 
 towards the lower end of the range 
 you'll have sounds like bass guitars and 
 rumbles and car engines and things like 
 that and those have fewer vibrations per 
 second 
 in the middle of the range you'll have 
 sounds like the human voice and kind of 
 higher pitched sounds maybe musical 
 instruments a lot of stuff like that 
 and towards the top of the range you 
 have sounds like birds chirping and 
 other kind of high-pitched sounds so 
 higher pitches mean higher vibrations 
 per second or technically higher 
 frequencies 
 these frequencies here are notated in 
 the unit called hertz 
 often notated as hz and they're called 
 hertz because higher frequencies hurts 
 your ears no it's actually named after 
 this guy uh this german physicist 
 heinrich rudolph hurts 
 but nonetheless that's how sound kind of 
 works at a basic level 
 so if that's how sound works in the real 
 world how does digital audio work how do 
 we get that into a computer measure it 
 and play with it in our code 
 well just like everything else in a 
 computer we need to measure it in the 
 real world to get it into a computer and 
 start working with it 
 so let's do some of that measurement 
 here let's measure this by putting a 
 graph on the screen and of course we're 
 going to need to put some axes on this 
 graph so we'll put time on the bottom 
 and then something called amplitude on 
 the y-axis here on the left-hand side 
 the amplitude i'm not going to get too 
 much into what this means but you can 
 think of this as the position of the 
 sound wave or how if the sound wave is 
 pushing towards you or pulling away from 
 you that's the amplitude and we'll we'll 
 see that on the screen in a second here 
 so i'm going to play a sound and i 
 really hope this works and as you hear 
 the sound you'll see some points show up 
 on the screen and that'll be me clicking 
 a button on my laptop and recording the 
 value of the speaker or the microphone 
 here at each point so let's try this 
 [Music] 
 it worked okay 
 so we've got a bunch of points on the 
 screen here uh there's not too many of 
 them they're not very detailed you might 
 say but we've recorded the position of 
 the microphone that was used to record 
 this audio at various points in time 
 i was pushing the button roughly once 
 every 0.4 seconds or so and if we take 
 the inverse of that or the reciprocal of 
 that we get a value in hertz again that 
 unit for frequency 
 and that value of 2.5 hertz here is what 
 we call our sample rate this is how 
 often we sample the microphone 
 and actually figure out where the 
 microphone is at that point in time 
 now there's other things we can look at 
 here 
 you notice that this graph is a little 
 bit odd it's got points at the top and 
 the bottom and that's because silence is 
 not at the bottom of the graph it's 
 actually in the middle 
 and the top and bottom of the graph here 
 are can very confusingly both maximum 
 loudness we have maximum loudness in the 
 positive direction at the top and in the 
 negative direction at the bottom and 
 again this is because sound is a wave 
 sound is vibration and it goes back and 
 forth so if it goes back and forth a 
 very small amount it's going to stay 
 towards the middle of the graph and if 
 it goes back and forth a lot it's going 
 to hit the extremes so maximum loudness 
 again is the top and the bottom of the 
 graph very strangely 
 and then we can measure each point here 
 so we've got 
 this point on the left which might have 
 60 amplitude so we could represent that 
 as 0.6 in code 
 and we've got this point here which 
 might be 90 amplitude but in the 
 opposite direction so we'll look at that 
 as negative 0.90 so with this we kind of 
 have enough points to try to reconstruct 
 what that sound was and reconstruct the 
 entire waveform 
 but unfortunately we really don't have 
 enough detail here i didn't push the 
 button often enough for me to get enough 
 information to reproduce what we just 
 heard and to play it back essentially so 
 now instead of 2.5 hertz let's re-record 
 this again at a much higher sample rate 
 and you're going to see a lot more data 
 on the screen here so let's get rid of 
 that and try this again 
 [Music] 
 okay so there's more points there now 
 there's a lot more points in fact you 
 can't even see the individual points uh 
 we sampled at forty four thousand one 
 hundred points per second or forty one 
 thousand hertz and that's just a huge 
 amount of data there so we can't do much 
 with what we're seeing right now we're 
 gonna have to zoom in to actually see 
 what's on the inside here so let's do 
 that let's zoom all the way in from the 
 second scale down to the millisecond 
 scale here and as we get closer and 
 closer you can actually see the 
 individual sound waves that were used or 
 that came out of that saxophone and went 
 into your ears and this is what your 
 ears were vibrating like back and forth 
 in this pattern now here if we measure 
 the distance between these two peaks not 
 these points but these two peaks here we 
 can actually see there's a duration in 
 there in milliseconds that's 5.7 
 milliseconds between peaks and if we do 
 a little bit of math on that again do 
 one cycle divided by that we can find 
 out even the frequency of the note that 
 the saxophone was playing so just from 
 measuring that uh that waveform over and 
 over we're able to find out the note and 
 i think that's actually an f so that we 
 can find out what musical note was being 
 played there just by doing some math but 
 let's keep going even deeper we're still 
 only looking at the milliseconds level 
 let's go from milliseconds down to 
 microseconds where we'll be able to see 
 the actual samples 
 so now that we're super zoomed in the 
 actual samples look like little points 
 along this graph and we can measure 
 again every single point at the 
 microseconds level 
 and this gives us a representation of 
 the audio 
 and here's the real secret that i want 
 to tell you all today this is digital 
 audio this is all it is digital audio is 
 really just streams of numbers 
 nothing too complicated although you can 
 do complicated things with it this is 
 how you represent digital audio 
 so if this is how digital audio works 
 let's take a look at how we might store 
 this in different ways let's zoom out a 
 little bit again here 
 so what we're looking at here is called 
 uncompressed floating point data it's 
 32-bit or 64-bit floats and this is 
 pretty heavy it's about 21 megabytes per 
 minute of audio that's a lot of data if 
 we had to store all that for every 
 single song that you listened to that 
 would be well really expensive it would 
 take a long time to download and so on 
 so people store audio in different ways 
 sometimes we can store audio as 
 uncompressed fixed-point data as 16-bit 
 or 24-bit or 32-bit signed integers and 
 on the lower end of that we get 10 
 megabytes per minute instead of 21 
 megabytes per minute but that's still a 
 lot so 
 back in the 90s people invented some 
 very very clever compression codecs 
 these compressed floating point codecs 
 like mp3 and og and so on compress all 
 the way down to one megabyte per minute 
 of audio which is much much easier to 
 deal with 
 however as you can see there we're no 
 longer actually looking at the numbers 
 we're not looking at these floating 
 point values we're just looking at 
 encoded bytes 
 so to do anything with this compressed 
 data we're going to have to use a 
 library or some other system to decode 
 it and then use the numeric information 
 we get after decoding here 
 so that brings me smoothly to my next 
 topic here reading and editing audio in 
 python so if that's how audio works in a 
 computer and that's how we might store 
 it on disk how do we get that into our 
 python code 
 well here's where i shield just a little 
 bit for the library that i've been 
 working on for quite a while called 
 pedalboard and we're going to start here 
 by actually diving into the code we're 
 going to start by importing pedalboard 
 by doing from pedalboard.io import audio 
 file 
 now in python if you want to open up a 
 regular file you use the open function 
 but here we're going to use the audio 
 file constructor or the audio file let's 
 call it a function and it's going to do 
 the exact same thing 
 so we can do with audio file my favorite 
 song done mp3 as f 
 and that'll open a context manager for 
 us open this file up and allow us to 
 play with what's inside this file it'll 
 automatically decompress the audio for 
 us and just give us data that we can 
 deal with 
 so let's look at some properties here we 
 can do f dot sample rate to give us the 
 sampling rate that we talked about 
 earlier 
 we can do f.num channels to tell us the 
 number of channels that are in this 
 audio file oftentimes audio files have 
 two channels one for the left ear and 
 one for the right ear 
 and then we can actually just read the 
 data out of it we can do f dot read here 
 and we can ask for three samples just 
 the first three samples of the file now 
 pedal board is going to give us the 
 first three samples in each channel so 
 we'll get back an array of a shape or 
 with a certain shape here the shape here 
 is two three for two channels left and 
 right and then three frames of audio 
 here now if you're not familiar with 
 multi-dimensional arrays 
 they're not too complicated you can kind 
 of think of them as arrays of arrays but 
 in this case each subarray has the fixed 
 shape so we can just use that shape 
 parameter to see what shape the overall 
 array has 
 but okay if that's how we can open a 
 file what can we do with the audio once 
 we pull it out of that file let's give 
 that a try oops 
 just to illustrate here the left channel 
 of the audio is the first array here and 
 then the right channel is the second 
 array so we can actually separate these 
 out very easily like that 
 but going back to the start here let's 
 take a look at opening up another audio 
 file and instead of just reading in 
 three frames let's read in all of them 
 let's do audio equals f dot read f dot 
 frames now after that frames here is 
 just a property that tells us how many 
 frames we have in the entire file 
 and here we get back an array with a 
 certain shape again two channels so 
 that's left and right as the first 
 dimension and then 1.3 million samples 
 as our second dimension channels first 
 and then samples afterwards 
 so from there we can then look on to 
 actually decompose this audio a bit we 
 can do audio at zero to give us the left 
 channel audio one to give us the right 
 channel and you can see there are arrays 
 with totally different contents here so 
 they don't have to be correlated with 
 each other 
 and then using python's array slicing 
 syntax we can start to chop up this 
 audio and edit it trim it as you would 
 so we can do audio and then pass in an 
 empty slice for the first dimension and 
 then i slice up to the first 100 samples 
 for the second dimension and that'll 
 give us a stereo chunk of audio or a 
 stereo array that contains only the 
 first 100 samples but 100 samples 
 doesn't really mean too much for us it 
 just tells us that's 100 points what 
 does that mean in terms of seconds or in 
 terms of duration 
 well to get that we can do some math 
 using f dot sample rate here so again 
 the sampling rate we talked about before 
 we can ask for the first 10 seconds by 
 using just regular python array syntax 
 and doing f dot sample rate times 10. we 
 can also ask for the last 10 seconds 
 with the exact same array slicing syntax 
 negative f dot sample rate times 10 
 there 
 okay so now we know how to read audio 
 and kind of play around with it as an 
 array and slice it up 
 what can we do with it though 
 we've really just opened up an audio 
 file how can we make it maybe sound 
 different or you know look different 
 something like that so let's go all the 
 way back up to the top let's read in our 
 mp3 file again and this time let's just 
 whittle it down to one channel just get 
 the mono audio or one channel from the 
 left channel here 
 now let's try to change how this sounds 
 instead of just playing with a regular 
 audio file let's add some delay to this 
 let's set some echo 
 this is the same effect that you might 
 have if you're in a big space and you 
 might hear a slap-back echo of your 
 voice coming back from the back of a 
 room which is actually what i'm hearing 
 right now but let's add that to this 
 audio file with some code and let's see 
 how few lines of code we can write in 
 python to make this happen 
 so let's set some parameters first let's 
 set delay seconds equal to 0.2 or 
 one-fifth of a second so let's make our 
 audio delayed by 0.2 seconds 
 and then let's convert that into samples 
 so that we can deal with this as like 
 array offsets rather than floating point 
 numbers here 
 and then we also should set another 
 parameter here which is how loud our 
 echo or how loud our delay is going to 
 be so let's set that to volume equals 
 0.75 which is 75 of the original volume 
 and now we're gonna do some math don't 
 get scared it's actually fairly simple 
 but we're going to do a little bit of 
 math here 
 so we'll iterate through the original 
 array we'll do 4i in range len mono so 
 just 
 iterate through all the samples in the 
 original array 
 and then if we have enough room to add 
 echo afterwards so if i plus delay 
 samples is less than the end of our 
 array 
 then let's add some delay let's do mono 
 at i plus delay samples 
 plus equals mono at i times volume so 
 that's a little confusing to think about 
 but let me give you a quick visual 
 example to see what this means 
 so 
 let's play with a smaller array maybe 
 something where our delay is only one 
 sample 
 and let's say our signal looks like this 
 we have six samples 0.0 0.1 and so on 
 what we're essentially doing here is 
 taking a copy of this array multiplying 
 it by volume 
 and then shifting it forward by the 
 number of samples we want to delay so 
 we'll shift it forward like that 
 add the results together 
 and then the result is essentially the 
 original signal plus also a delayed copy 
 that's a little bit quieter 
 but i'm still just showing you a bunch 
 of numbers on the screen and a bunch of 
 math what if we can hear this and the 
 great thing about working with audio 
 code is that you often can hear what you 
 should do what you're doing and what it 
 sounds like so let's listen to a signal 
 before and after it's gone through these 
 seven lines of code 
 no delay sounds normal sounds like a 
 little piano and now after going through 
 this code 
 [Music] 
 kind of cool right with only this code 
 that you see on the screen here we're 
 able to take the actual audio signal you 
 just heard and alter it in a way that 
 our ears can make sense of right we've 
 done something kind of neat there 
 but let's not stop there let's do some 
 even more extreme effects by writing 
 some python code 
 so let's get rid of that and now let's 
 load up a new file let's load up 
 something here called coolguitar.wav 
 which is a cool little guitar sample 
 again let's read in the audio file with 
 f.read we'll read all the frames in the 
 file and just take the first channel 
 then 
 let's make this guitar sound a little 
 more extreme let's add some distortion 
 to it so we'll set some parameters here 
 like the amount of gain that we want to 
 add here uh what's the unit on gain to 
 be honest i actually don't know here 
 this is just a multiplier we're going to 
 multiply our signal by and the higher 
 this number the more extreme it's going 
 to sound 
 now we'll also set a amount of volume 
 that we want to multiply this by so uh 
 if we have a gain level of 200 we're 
 going to knock this down by 90 and take 
 only 10 of the original signals volume 
 because we're going to distort this it's 
 going to sound pretty loud 
 and then just like before we're going to 
 iterate sample by sample over the entire 
 array here 
 and change the value of each sample so 
 here instead of doing any sort of delay 
 or array offsets we're just going to 
 modify every single sample in place and 
 say mono at i is equal to math.10h of 
 mono at i times gain times volume 
 now you might be asking what is 
 math.tanh and that's for a different 
 talk i'm not going to get into the math 
 of this but you'll be able to hear this 
 in just a second 
 so let's listen to cool guitar.wave 
 before our processing 
 sounds like a guitar 
 now this is going to be a tiny bit 
 louder as you can kind of see on the 
 screen there 
 but don't cover your ears i don't think 
 it should be too loud 
 so that sounded a lot more metal a lot 
 more 
 high energy if you might say and all we 
 had to do to make that sound is the code 
 that you see on the screen there in fact 
 this is even less code than what we had 
 to do to implement some delay so with 
 very small amounts of code in python you 
 can actually alter sounds and edit 
 sounds like this very easily 
 okay so i've talked about a couple cool 
 things you can do here let's talk about 
 problems you might run into working with 
 audio and python python is great working 
 with audio code is great but sometimes 
 there are some rough edges that make it 
 really difficult to work with python 
 code or with audio code in python 
 so let's start with uh well a similar 
 example to what we had before so let's 
 load up my favorite song on mp3 and 
 let's say we want to do something 
 different with this file we want to load 
 it up and make it louder and then save 
 it back to disk again so we'll do with 
 audio file here 
 we'll do audio equals f dot read f dot 
 frames and then once we've read in the 
 audio we'll make the entire thing louder 
 we'll make it louder by multiplying it 
 by two which takes each sample value and 
 multiplies by two 
 and then we'll save the result back out 
 to disk again we can use pedalboard for 
 this by doing with audio file out.mp3 
 and passing the w flag as the second 
 parameter and then passing in the sample 
 rate because we need to know the sample 
 rate in order to save 
 and then we just do o.right and like any 
 other file we've written that to disk 
 but there's a problem here this code 
 will probably run just fine on your 
 laptop and it'll run just fine on all 
 the test mp3s that you have or the small 
 audio files that you have but what 
 happens if the input is not something 
 you control 
 what if that audio file at the top is 
 not actually a small song or a small mp3 
 file you have but something that a user 
 gives to you or something that 
 comes in from a web service or it's you 
 know you're running this on a large 
 catalog of audio 
 what if that is two hours long 
 well if that mp3 file is two hours long 
 you might not really be able to tell 
 that until your code crashes because 
 once you read all the frames in that 
 ends up being 2.3 gigabytes of audio and 
 this is something kind of deceptive 
 about audio in general is that because 
 of audio compression and because of how 
 effective audio compression is 
 you can actually have very small files 
 that uncompress to massive massive 
 amounts of audio in memory 
 so there are very simple techniques we 
 can use to get around this and one way 
 to do this is by chunking the audio and 
 processing it in chunks instead so let's 
 try that here let's set a chunk size of 
 500 000 let's open up our input audio 
 file and let's open up our output audio 
 file as well so we're kind of nesting 
 these context managers really just so 
 they'll fit on the screen i know you can 
 put them all in one line 
 and then as long as we have audio to 
 read in so while f dot tell is less than 
 f dot frames so as long as there's more 
 audio coming in 
 let's read in a single chunk of audio 
 process just that chunk make it louder 
 and then save just that chunk to our 
 output file 
 and now with this we no longer use two 
 gigabytes of memory for a two hour long 
 file we only ever use up to four 
 megabytes of memory here and this input 
 file could be two hours long or 20 hours 
 long or it could be a stream that never 
 ends and our code is still going to work 
 because we're processing in chunks 
 instead 
 so what i really want you to walk away 
 with here is not chunking or that exact 
 line of code that you saw there but that 
 you should think of audio as a stream 
 audio is really a stream it's streaming 
 in time and time keeps going audio could 
 keep going for as long as you want so if 
 you write your code such an audio as a 
 stream 
 your code will be more resistant to bugs 
 and will probably not crash in 
 production or at least not as often 
 okay so let's look at one other common 
 problem with audio and python here let's 
 go back to the example we had with 
 distortion that really cool guitar 
 example 
 so here's the code that we had before 
 i'm not going to type it all out again 
 but we read in our entire audio file and 
 then we do math.tanh at the bottom here 
 now i said i wasn't going to get into 
 what tan h is and i'm not it's a 
 mathematical function but we're looping 
 over every single sample here in python 
 and this is fairly fast or at least it's 
 fast enough 
 if i run this on my laptop it takes 
 about eight seconds per minute of audio 
 to run this code so that's a good way 
 you can measure audio code is you can 
 take how long it took to run and divide 
 that by the amount of audio that you 
 processed through that code 
 and here we find out that this code runs 
 in what's called about 7.5 times real 
 time so if 7.5 times faster than it 
 would be to just play back the audio 
 itself 
 however that still seems a little bit 
 slow if i have to run this on a minute 
 of audio i have to wait eight seconds 
 and i'm very impatient 
 so is there a way to do this any faster 
 well luckily python has a lot of 
 libraries and a very rich ecosystem 
 so i found that you can use numpy the 
 numerical computation library to do this 
 exact same operation and instead of 
 doing math.tanh there which only takes 
 in a single sample at a time we can do 
 numpy.10h which takes in an entire array 
 at a time and then processes that 
 through the same function the results 
 are exactly the same in fact uh byte for 
 byte they're identical the sample values 
 are perfect 
 but this code at the bottom runs a 
 little bit faster and when i say a 
 little bit faster i mean it takes only 
 about 23 milliseconds per minute of 
 audio 
 that's a great gasp i'm glad that 
 happened 
 uh yeah 23 milliseconds per minute of 
 audio so that's a little bit faster than 
 the old code was in fact if we do a bit 
 of math here and divide these two 
 it's about 338 times faster to use a 
 library here instead of uh manually 
 iterating over the samples 
 in our case we use numpy and numpy made 
 this 338 times faster but you could use 
 pedalboard or you could use really any 
 other library that optimizes this away 
 and 
 the last thing i want to talk about here 
 is really that for audio 
 pure python is slow i'm not offending 
 anybody with this statement but pure 
 python iterating through samples and 
 doing direct math can be very very slow 
 compared to native optimized 
 c code essentially 
 so if you can use third party libraries 
 instead 
 okay and that brings me to my final 
 section here which is talking about 
 audio effects in pedalboard so we've 
 talked about how to do some of these 
 effects ourselves and how to make this 
 uh sound really good in pure python but 
 what if we use this cool library that 
 i've been talking about to do some of 
 these effects for us 
 so i'm just going to jump directly into 
 the code here just like we had before 
 we're going to read in an audio file and 
 even though i just told you not to read 
 in the whole file at once i'm going to 
 do it here because otherwise it wouldn't 
 fit on the slide 
 and i'm going to use pedalboard to 
 import some audio effects so i'm going 
 to import an effect here called reverb 
 so i'll do from pedalboard import reverb 
 and then we'll create an instance of 
 this reverb effect we can do that with 
 reverb equals capital r reverb and set 
 the room size to a certain amount so 
 room size equals 0.75 whatever that 
 number is it's just between 0 and 1. i 
 don't think there's actually a unit on 
 that but it's good enough 
 then we can take our input signal here 
 and pass it through our reverb plugin so 
 affected equals reverb pass in the audio 
 and pass in the sample rate and all of a 
 sudden we've applied an effect to the 
 audio and it now sounds different but 
 you don't have to trust me on that you 
 can actually listen to it so let's 
 listen to cool guitar wave before and 
 after once again 
 and now with the reverb applied 
 so musically that's the same but you can 
 tell that something has changed about 
 that it sounds like it was played back 
 in a large room or kind of a bit more 
 boomy a bit bigger 
 and that's a common effect that 
 musicians will apply to their audio 
 so let's keep going there let's get rid 
 of the reverb example there and let's 
 chain multiple effects together so 
 instead of just applying one effect 
 let's make an entire pedal board that 
 contains multiple effects so here we'll 
 do board equals pedalboard which is 
 really just a list or a container for 
 multiple effects and let's add a 
 distortion effect first 
 followed by a delay effect 
 followed by some reverb on the end now 
 this is actually very similar to what we 
 did before in pure python but now we're 
 just chaining these plugins into an 
 object that's much easier to deal with 
 then just like before we'll take our 
 audio signal and we'll pass it into the 
 board so we'll do affected equals board 
 of audio and f.sample rate and again we 
 have a before and after comparison here 
 it's not the same sample this one's a 
 little bit more tuned for the effects 
 that we have here but here's the before 
 [Music] 
 and then when we put this through some 
 distortion delay and reverb 
 [Music] 
 [Applause] 
 it sounds very different in fact it 
 sounds kind of musically interesting as 
 well it's not just affecting uh the tone 
 of the sound but it's changing the 
 musical content too 
 okay i've talked about some guitar 
 examples and stuff like that what about 
 other use cases what if you're not using 
 pedalboard with music or you're not 
 affecting your music here what if you 
 have a podcast that you want to process 
 so let's read in a podcast voice sample 
 here we can make a pedalboard that works 
 on podcasts just like the guitar pedal 
 boards we've already done here 
 so let's add a noise gate to get rid of 
 some background noise 
 let's add a compressor uh to make 
 quieter parts of the sound sound louder 
 let's add a low shelf filter which is 
 really kind of equalizer or eq 
 and it will add some gain on the end to 
 make the entire thing a little bit 
 louder 
 now with these four effects in series 
 we'll take a voice that's kind of not 
 really radio ready and turn that into a 
 voice that sounds a much more 
 professional 
 voice basically so we'll pass the audio 
 in here 
 and then again i'll give you a before 
 and after and apologies it's going to be 
 my voice which you've heard already 
 throughout this talk but 
 yeah here it is 
 welcome back to the podcast podcast 
 where i 
 talk about podcasts 
 so that's me recording my really cool 
 podcast and then once it's gone through 
 this pedalboard here 
 welcome back to the podcast podcast 
 where i 
 talk about podcasts 
 much more full much more boomy arguably 
 but really sounds more radio ready 
 compared to what i've got there 
 and then my last example here in my last 
 two minutes are how you can use 
 pedalboard to load other plugins as well 
 i've showed you a bunch of effects 
 reverbs distortions things like that but 
 if anybody in this room produces digital 
 music or uses a computer to produce 
 music you've probably heard of plugins 
 or audio plugins vsts audio units and 
 things like that and pedalboard lets you 
 take all of those and put those directly 
 in your code and call those from python 
 so again let's read in a guitar sample 
 here 
 and reading the entire audio file into 
 an array 
 then let's load a third party plug-in so 
 i'm going to do plug-in equals load 
 plugin and i'll pass a path to a vst 
 here so chow center.vst3 whoops that's 
 going too fast 
 damn it okay 
 we'll load a third-party plug-in here 
 and that third-party plug-in will have 
 code in it that we didn't write and in 
 fact it's not even written in python so 
 it's code that you might have downloaded 
 on the internet or purchased from 
 somewhere else 
 because vsts are things that you can buy 
 anywhere 
 so we'll load that plugin and then we'll 
 also do plugin.show editor editor or 
 show editor here will actually open up 
 the plugins ui 
 and directly in python you can play with 
 buttons and change the sliders and do 
 all the sorts of stuff you might do in 
 your digital audio workstation 
 then just like before we can run audio 
 through it we'll do print plugin.gain to 
 change certain parameters we'll set 
 plug-in gain to 1.0 for maximum rock 
 and then audio goes through and here's 
 the before and after one last time 
 come on 
 [Music] 
 and afterwards 
 now we couldn't have written that in 
 python we're just going to use someone 
 else's code for it and it sounds pretty 
 good 
 so with that i'm out of time if you're 
 interested in using pedalboard you can 
 find it on github at github.com spotify 
 pedalboard or just pi pi 
 it's available on pipi there pip install 
 pedalboard thanks so much for listening 
 uh find me in the hallway for any 
 questions you might have or for cool 
 stickers of the nice pedalboard logo 
 we've got there thanks here python 
 nice timing peter on the dot 
 um so everyone um as vito mentioned we 
 do not have time for q a but i'm sure 
 there's a lot of questions in your mind 
 so peter will have his q a at the 
 hallway 
 line up if you have any questions for 
 him can we have another round of 
 applause for peter and thank you for 
 your talk 
 the next section will be 
 the keynote down at the audit room from 
 4 55. 
 we're not 
 quite ready to come out 
 to see that there is a safe space for 
 them 
 so that they will maybe eventually 
 take the next step and come out and be 
 part of this wonderful community it is a 
 trans community 
 something i've really loved about today 
 is meeting people of sort of different 
 ages different life stages 
 and in my personal life i've got a lot 
 of trans friends with family but we're 
 in a little bit of a bubble 
 and just being able to geek about geek 
 out about sort of shared interests 
 having shared sense of humor with people 
 i've never met 
 is really really lovely and of course 
 getting to nerd 
 [Music] 
 um nitza is the enterprise technology 
 managed
